<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Matlab图片缩放旋转</title>
      <link href="/2020/04/10/matlab-tu-pian-suo-fang-xuan-zhuan/"/>
      <url>/2020/04/10/matlab-tu-pian-suo-fang-xuan-zhuan/</url>
      
        <content type="html"><![CDATA[<hr><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E6%91%84%E5%BD%B1%E6%B5%8B%E9%87%8F%E5%AD%A6/%E7%BC%A9%E6%94%BE%E6%97%8B%E8%BD%AC%E6%9D%8E%E4%B8%96%E6%98%B1_ChangeScale-000001.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E6%91%84%E5%BD%B1%E6%B5%8B%E9%87%8F%E5%AD%A6/%E7%BC%A9%E6%94%BE%E6%97%8B%E8%BD%AC%E6%9D%8E%E4%B8%96%E6%98%B1_ChangeScale-000002.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E6%91%84%E5%BD%B1%E6%B5%8B%E9%87%8F%E5%AD%A6/%E7%BC%A9%E6%94%BE%E6%97%8B%E8%BD%AC%E6%9D%8E%E4%B8%96%E6%98%B1_ChangeScale-000003.jpg" alt="">)<img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E6%91%84%E5%BD%B1%E6%B5%8B%E9%87%8F%E5%AD%A6/%E7%BC%A9%E6%94%BE%E6%97%8B%E8%BD%AC%E6%9D%8E%E4%B8%96%E6%98%B1_ChangeScale-000004.jpg" alt="">)<img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E6%91%84%E5%BD%B1%E6%B5%8B%E9%87%8F%E5%AD%A6/%E7%BC%A9%E6%94%BE%E6%97%8B%E8%BD%AC%E6%9D%8E%E4%B8%96%E6%98%B1_ChangeScale-000005.jpg" alt="">)<img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E6%91%84%E5%BD%B1%E6%B5%8B%E9%87%8F%E5%AD%A6/%E7%BC%A9%E6%94%BE%E6%97%8B%E8%BD%AC%E6%9D%8E%E4%B8%96%E6%98%B1_ChangeScale-000006.jpg" alt=""></p><h2 id="缩放函数"><a href="#缩放函数" class="headerlink" title="缩放函数"></a>缩放函数</h2><pre><code>%参数说明：initimage为初始图像，x_Change为x方向变化尺度，y_Change为y方向变化尺度function y_init=Lsy_ScaleChange(initimage,x_Change,y_Change)[R, C] = size(initimage); % 获取图像大小R_new=x_Change*R;%缩放后的矩阵行号C_new=y_Change*C;%缩放后的矩阵列号resultimage = zeros(R_new,C_new); %初始化结果矩阵。每个像素点默认初始化为0（黑色）% 缩放的变换矩阵Change = [    1/x_Change   0          0;    0          1/y_Change   0;    0            0          1]; %对空白(嗯~或者可以叫它空黑,因为0是黑色的嘛)矩阵逐行逐列进行对应填充。for i = 1 : R_new    for j = 1 : C_new        temp = [i;            j;            1];        temp = Change * temp; %矩阵乘法进行变换。得到要取的原像素的行列号位置        %x_init、y_init只是原始图像initimage中的行列号的位置        x_init = uint8(temp(1, 1));        y_init = uint8(temp(2, 1));        resultimage(i, j) = initimage(x_init, y_init);%相当于两个坐标系对应。    endendimshow(uint8(resultimage))end</code></pre><h2 id="旋转角度函数"><a href="#旋转角度函数" class="headerlink" title="旋转角度函数"></a>旋转角度函数</h2><pre><code>function y=Lsy_AngleChange(initimage,angle_degree)[r,c,d]=size(initimage);% 角度转换成弧度函数——degtoradangle_radian=degtorad(angle_degree);% 计算其角度正余弦sin_angle=sin(angle_radian);cos_angle=cos(angle_radian);% 计算变换之后的图像矩阵行列数C_new=round(abs(cos_angle)*r+c*abs(sin_angle));%列数wR_new=round(abs(cos_angle)*c+r*abs(sin_angle));%行数% 初始化新的空白的旋转后的图像矩阵AngleImage=uint8(zeros(R_new,C_new,d));for x=1:C_new    for y=1:R_new        x0 = uint32(x*cos_angle + y*sin_angle -0.5*C_new*cos_angle-0.5*R_new*sin_angle+0.5*c);        y0= uint32(y*cos_angle-x*sin_angle+0.5*C_new*sin_angle-0.5*R_new*cos_angle+0.5*r);        x0=round(x0);         %最邻近插值        y0=round(y0);         %最邻近插值        if x0&gt;0 &amp;&amp; y0&gt;0&amp;&amp; c &gt;= x0&amp;&amp; r &gt;= y0            AngleImage(x,y,:) = initimage(x0,y0,:);        end    endendimshow(uint8(AngleImage));end</code></pre>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扫描填充算法</title>
      <link href="/2020/04/06/sao-miao-tian-chong-suan-fa/"/>
      <url>/2020/04/06/sao-miao-tian-chong-suan-fa/</url>
      
        <content type="html"><![CDATA[<p>效果图</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/ScanFill%E8%BF%90%E8%A1%8C%E6%95%88%E6%9E%9C.gif" alt=""></p><p>C#代码实现</p><pre class="line-numbers language-c#"><code class="language-c#">using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Drawing;using System.Linq;using System.Text;using System.Threading.Tasks;using System.Windows.Forms;using System.Windows.Shapes;namespace ScanFill{    public partial class Form1 : Form    {        static Graphics graphics;        static Bitmap bitmap;        Polygon mypolygon = new Polygon();        Point[] points;        public Form1()        {            InitializeComponent();            graphics = panel1.CreateGraphics();            bitmap = new Bitmap(panel1.Width, panel1.Height);        }    //画出多边形        private void button1_Click(object sender, EventArgs e)        {            Point p1 = new Point(200, 200);            Point p2 = new Point(300, 200);            Point p3 = new Point(150, 400);            Point p4 = new Point(400, 450);            //Point p1 = new Point(200, 0);            //Point p2 = new Point(50, 100);            //Point p3 = new Point(150, 200);            //Point p4 = new Point(350, 200);            //Point p5 = new Point(250, 100);            points = new Point[] { p1, p2, p3, p4 };            Pen Mypen = new Pen(Color.Blue, 2);            graphics.DrawPolygon(Mypen, points);            graphics.DrawImage(bitmap, 0, 0, panel1.Width, panel1.Height);        }        //填充多边形。调用方法        private void button_Fill_Click(object sender, EventArgs e)        {            draw.ScanFill(points, Color.Red,graphics);        }        public class draw        {            static int frist_s = 0;            static int last_s = 0;            #region 定义活性边表元素类            //参与运算的四个量            class Sideinfo            {                public int y_top;//某边的最大纵坐标（y_max）                public double x_int;//某边与当前扫描线交点的横坐标，它在不断的变化。                public int delat_y;//当前扫描线与某边最小纵坐标之差，即该边的生命值。                public double x_change_per_san;//每一次变化x的累计值。当前扫描线每向下移动一次，某边与其交点横坐标的变化值。                //构造函数                public Sideinfo()//构造方法                {                    y_top = 0;                    x_int = 0f;//float类型                    delat_y = 0;                    x_change_per_san = 0f;                }            }            #endregion            static List<Sideinfo> sides;            //主算法。也是调度算法。相当于main函数            public static void ScanFill(Point[] points, Color color, Graphics graphics)            {                int count = points.Length;//多边形中所有的顶点的数量                Point[] RegionVertexes = new Point[count];                Array.Copy(points, RegionVertexes, count);                sides = new List<Sideinfo>();//新建一个活性边表                int bottomscan = BuildSidesList(RegionVertexes, graphics, color);                SortSidesList();//对边进行排序整理                int scan;                frist_s = 0;                last_s = 0;                for (scan=sides[0].y_top; scan>bottomscan; scan--)//bottomscan是整个多边形的最小的y值                {                    //扫描线scan从最高点开始到最低点的扫描                    update_frist_and_last(sides.Count, scan);//更新标志变量。即frist和last就位。圈定了求交点的范围                    int x_int_count = process_x_intersections(scan);//处理各交点的x横坐标。x要按大小进行排序，才能确定其奇偶顺序等……                    draw_lines(scan, x_int_count, frist_s, graphics, color);//画出扫描线                    update_sides_list();//更新活性边表                }                sides.Clear();//清空边表                graphics.DrawPolygon(new Pen(Color.Red,2f),RegionVertexes);//画出多边形的边框            }            #region 建立活性边表。为边排序            //按每条边的较大y值排序，为建立活性边表做准备            //左右顶点等的判定            public static int BuildSidesList(Point[]Vertexes,Graphics graphics,Color color)            {                int n = Vertexes.Length;                int p1, p2, p3;//目的是判断p2是左右顶点                p1 = n - 1;                int bottomscan = Vertexes[p1].Y;                for (int i = 0; i < n; i++)                {                    p2 = i;                    p3 = (i + 1) % n;//防止下标越界                    if (Vertexes[p2].Y==Vertexes[p1].Y)//水平边情况                    {                        graphics.DrawLine(new Pen(color, 1f), Vertexes[p1], Vertexes[p2]);//直接画出来                    }                    else                    {                        //以下就是算出该边在活性边表中的四个值。delt_y，x_change_per_san，x_int，y_top                        double change_perscan = (double)(Vertexes[p2].X - Vertexes[p1].X) / (double)(Vertexes[p2].Y - Vertexes[p1].Y);//每次扫描x的变化                        int x_int_tmp = Vertexes[p2].X;//x的临时交点                        sides.Add(new Sideinfo());//把边加到活性边表里                        sides[sides.Count - 1].delat_y = Math.Abs(Vertexes[p1].Y - Vertexes[p2].Y);//delt_y                        if ((Vertexes[p1].Y<Vertexes[p2].Y)&&(Vertexes[p2].Y<Vertexes[p3].Y))//左顶点                        {                            Vertexes[p2].Y--;                            x_int_tmp = Convert.ToInt32(Convert.ToDouble(x_int_tmp)-change_perscan);                            sides[sides.Count - 1].delat_y--;                        }                        else if((Vertexes[p1].Y>Vertexes[p2].Y)&&(Vertexes[p2].Y>Vertexes[p3].Y))//右顶点                        {                            Vertexes[p2].Y++;                            x_int_tmp = Vertexes[p1].X;                            sides[sides.Count - 1].delat_y--;                        }                        sides[sides.Count - 1].x_change_per_san = change_perscan;                        sides[sides.Count - 1].x_int = Vertexes[p1].Y > Vertexes[p2].Y ? Vertexes[p1].X : x_int_tmp;                        sides[sides.Count - 1].y_top = Math.Max(Vertexes[p1].Y, Vertexes[p2].Y);                    }                    if (Vertexes[p2].Y<bottomscan)                    {                        bottomscan = Vertexes[p2].Y;                    }                    p1 = p2;//更新p1、p2、p3.往下移。                }                return bottomscan;            }            #endregion            #region 对边进行排序.冒泡排序            //通过y值进行排序            static void SortSidesList()            {                Sideinfo tmpSide = new Sideinfo();                for (int i = sides.Count-1; i >0; i--)                {                    for (int j = 0; j < i; j++)                    {                        if (sides[j].y_top<sides[j+1].y_top)                        {                            tmpSide = sides[j];                            sides[j] = sides[j + 1];                            sides[j + 1] = tmpSide;                        }                    }                }            }            #endregion            #region 在活性边表中前移当前边一个位置            private static void swap(int entry)            {                int i_tmp;                double f_tmp;                i_tmp = sides[entry].y_top;                sides[entry].y_top = sides[entry - 1].y_top;                sides[entry - 1].y_top = i_tmp;                f_tmp = sides[entry].x_int;                sides[entry].x_int = sides[entry - 1].x_int;                sides[entry - 1].x_int = f_tmp;                i_tmp = sides[entry].delat_y;                sides[entry].delat_y = sides[entry - 1].delat_y;                sides[entry - 1].delat_y = i_tmp;                f_tmp = sides[entry].x_change_per_san;                sides[entry].x_change_per_san = sides[entry - 1].x_change_per_san;                sides[entry - 1].x_change_per_san = f_tmp;            }            #endregion            #region 更新Frist和last标志            private static void update_frist_and_last(int count, int scan)            {                //frist和last更新的条件。                //在last_s<(count-1)，即last_s还没有移到最后和sides[last_s + 1].y_top                while (((last_s < (count - 1) && sides[last_s + 1].y_top >= scan)))//扫描线的y值小于了活性边表里的下一条边的y_top。也就是delat_y马上要缩小了                {                    last_s++;//>=scan,即last_s的下一边被扫描到时，last_s后移                }                while (sides[frist_s].delat_y == 0 && frist_s < last_s)                {                    frist_s++;//first_s只要所指边的delta_y为0，则first_s后移                }            }            #endregion            //若需要则按扫描线scan与多边形的交点x值大小将活性边表中first和last之间的边重新排序，以便按顺序画出填充线。            private static void sort_on_x(int entry)            {                //若有当前边鱼scan交点x值小于在活性边表中排在它之前的x值，则它前移                while ((entry>frist_s)&&(sides[entry].x_int<sides[entry-1].x_int))                {                    swap(entry);//前移一个位置                    entry--;                }            }            //处理扫描线scan与多边形的交点x值            private static int process_x_intersections(int scan)            {                int k = 0;                int x_int_count = 0;                //通过for循环来具体找出，frist和last之间哪些在求交点，哪些没在求交点的边。                //通过循环来记录扫描线scan目前和多边形有几个交点，如需要按交点x值将活性边表重新排序，以便按顺序画出填充线                for (k = frist_s; k < last_s+1; k++)                {                    if (sides[k].delat_y>0)//delat_y>0就代表其正在求交点                    {                        x_int_count++;                        sort_on_x(k);//进行排序                    }                }                return x_int_count;            }            //画出扫描填充线，按照交点x值的奇偶特性进行画线            private static void draw_lines(int scan,int x_int_count,int index,Graphics graphics,Color color)            {                int k, x1, x2;                //找到奇数的线开始画线。                for (k = 1;  k<= (x_int_count)/2; k++)                {                    while (sides[index].delat_y==0)                    {                        index++;                    }                    x1 = (int)(sides[index].x_int);                    index++;                    while (sides[index].delat_y==0)                    {                        index++;                    }                    x2 = (int)(sides[index].x_int);                    graphics.DrawLine(new Pen(color,1f),x1,scan,x2,scan);                    index++;                }            }            //更新活性边表。主要是delta_y 和x_int两项。            private static void update_sides_list()            {                int k;                for ( k = frist_s; k < last_s+1; k++)//更新只针对first和last之间的边。                {                    if (sides[k].delat_y>0)//条件是此边的delta_y>0，表明它正在被扫描                    {                        sides[k].delat_y--; //delat_y减一                        //x_int减去每次扫描中横坐标的变化量，对于每条边他们搁置的变化量(x_change_per_san)各不相同                        sides[k].x_int -= sides[k].x_change_per_san;                    }                }            }        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扫描填充算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>直线裁剪算法</title>
      <link href="/2020/04/06/zhi-xian-cai-jian-suan-fa/"/>
      <url>/2020/04/06/zhi-xian-cai-jian-suan-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p><strong>Sutherland-Cohen算法</strong>  </p><p>它叫，“<del>苏泽兰抠恨算法</del>” ​ :smile:</p><blockquote><p>用矩形框裁剪直线。</p></blockquote><h3 id="整体思想"><a href="#整体思想" class="headerlink" title="整体思想"></a><strong>整体思想</strong></h3><ul><li><p>首先，判断直线是否完全在裁剪矩形内，或者完全在矩形框外。</p></li><li><p>若不能得出以上两种结论，则计算出线段与矩形边界的交点。交点把直线分成两段(若两个交点，则先看其中一个交点)，把完全在窗口外的舍去，然后再对另一条再做判断。</p></li></ul><blockquote><p>P.S 具体实现中，并非是将窗口外的舍去，其本质也就是找出新的两个线段端点(被切割部分)，然后再将其画出罢了。</p></blockquote><h2 id="二、实现效果"><a href="#二、实现效果" class="headerlink" title="二、实现效果"></a>二、实现效果</h2><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E7%9B%B4%E7%BA%BF%E8%A3%81%E5%89%AAyunx%E8%A1%8C05.gif" alt=""></p><h2 id="三、分区编码"><a href="#三、分区编码" class="headerlink" title="三、分区编码"></a>三、分区编码</h2><p><strong>先说说判断端点位置用的分区编码</strong></p><p>将屏幕分成九个区域，用四位0、1编码为每一个区域编码。</p><blockquote><ol><li>最中间，是裁剪的矩形框区域，内部为0000.</li><li>其左侧部分，也就是x值小于XL部分，其第四位编码均为1；</li><li>其右侧部分，也就是x值大于XR部分，其第三位编码均为1，</li><li>其上部，也就是y值大于YT部分，其第一位编码均为1；</li><li>其下部，也就是y值小于YB部分，第第二位编码均为1.</li></ol></blockquote><p>如下，<u><strong>（笛卡尔平面坐标系，非屏幕坐标系）</strong></u></p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E7%9B%B4%E7%BA%BF%E8%A3%81%E5%89%AA/%E6%88%AA%E5%9B%BE%E5%88%86%E5%8C%BA%E7%BC%96%E7%A0%81.jpg" alt=""></p><h2 id="四、具体实现步骤"><a href="#四、具体实现步骤" class="headerlink" title="四、具体实现步骤"></a>四、具体实现步骤</h2><h3 id="4-1总体思路"><a href="#4-1总体思路" class="headerlink" title="4.1总体思路"></a>4.1总体思路</h3><ol><li><p>对直线两端点p1、p2进行编码，</p><p>p1、p2编码分别记为，code1、code2。</p><p>code1={a1、b1、c1、d1}</p><p>code2={a2、b2、c2、d2}</p><blockquote><p>其中，ai，bi，ci、di的取值范围为{0，1}，i={1，2}</p></blockquote></li><li><p>若ai=bi=ci=di=0，此情况为直线在矩形<strong>同一外域</strong>，则显示整条直线。否则，进行第三步</p></li><li><p>对四位编码逐位判断。</p><p>若a1=1或者a2=1，则该点在矩形框的上部，也就是“三、分区编码”中的情况“4”。则求直线与矩形框的纵坐标的y的最小值<strong><u><em>(屏幕坐标系)</em></u></strong>，<strong>将该点坐标移为交点(也就相当于删去交点以上部分)</strong></p><p>若b1=1或者b2=1，则该点在矩形框的下部，也就是“三、分区编码”中的情况“5”。则求直线与矩形框的纵坐标的y的最大值<strong><u><em>(屏幕坐标系)</em></u></strong>，<strong>将该点坐标移为交点(也就相当于删去交点以下部分)</strong></p><p>若c1=1或者c2=1，则该点在矩形框的右部，也就是“三、分区编码”中的情况“3”。则求直线与矩形框的横坐标的x的最大值<strong><u><em>(屏幕坐标系)</em></u></strong>，<strong>将该点坐标移为交点(也就相当于删去交点以右部分)</strong></p><p>若d1=1或者d2=1，则该点在矩形框的左部，也就是“三、分区编码”中的情况“2”。则求直线与矩形框的横坐标的y的最小值<strong><u><em>(屏幕坐标系)</em></u></strong>，<strong>将该点坐标移为交点(也就相当于删去交点以左部分)</strong></p><blockquote><p>至于”矩形框的上部“，则是在视觉上而言。以上皆是。</p></blockquote></li><li><p>画出直线。(此时会只画出被移动端点后的直线)</p></li></ol><h3 id="4-2-C-代码实现"><a href="#4-2-C-代码实现" class="headerlink" title="4.2 C#代码实现"></a>4.2 C#代码实现</h3><h4 id="4-2-1-各参数含义"><a href="#4-2-1-各参数含义" class="headerlink" title="4.2.1 各参数含义"></a><strong>4.2.1 各参数含义</strong></h4><ul><li>x1, y1, x2, y2：输入直线两端坐标；</li><li>code1, code2：两端点的编码，各四位。</li><li>done：是否剪裁完毕的标志，True：剪裁完。</li><li>display：是否需显示的标志，True：显示直线x1, y1, x2, y2。</li><li>m：直线之斜率。</li><li>mark：是否需要进行交换标志。</li></ul><h4 id="4-2-1-方法功能描述"><a href="#4-2-1-方法功能描述" class="headerlink" title="4.2.1 方法功能描述"></a><strong>4.2.1 方法功能描述</strong></h4><p>1）主算法为clip_a_line。它调用四个子程序，功能分别为：</p><p>2）encode(x, y, c)：功能为：判断点（x, y）所在的区域，赋予c以相应的编码。</p><p>3）accept(c1, c2)：功能为：根据两端点的编码c1, c2，判断直线是否在窗口之内。</p><p>4）reject(c1, c2)：功能为：根据两端点的编码c1, c2，判断直线是否在窗口之外。</p><p>5）swap_if_needed(x1, y1, x2, y2, c1, c2)；功能为：判断（x1, y1）是否在窗口之外，如否，则将x1, y1, c1值与x2, y2, c2值交换</p><h4 id="4-2-3-代码部分"><a href="#4-2-3-代码部分" class="headerlink" title="4.2.3 代码部分"></a>4.2.3 代码部分</h4><pre class="line-numbers language-c#"><code class="language-c#">using System;using System.Drawing;using System.Windows.Forms;namespace Cohen_Sutherland{    public partial class Form1 : Form    {        static Graphics graphics;        static Bitmap bitmap;        public Form1()        {            InitializeComponent();            graphics = panel1.CreateGraphics();            bitmap = new Bitmap(panel1.Width, panel1.Height);        }        Pen linepen = new Pen(Color.Red, 2);//原始画线画笔        Pen linepen1 = new Pen(Color.Green, 2);//裁剪画笔        Pen Ectanglepen = new Pen(Color.Blue, 2);//矩形画笔        private void button_DrawrEctangle_Click(object sender, EventArgs e)        {            Point p1 = new Point(260, 200);            Point p2 = new Point(410, 200);            Point p3 = new Point(410, 350);            Point p4 = new Point(260, 350);            Point[] points;            points = new Point[] { p1, p2, p3, p4 };            graphics.DrawPolygon(Ectanglepen, points);            graphics.DrawImage(bitmap, 0, 0, panel1.Width, panel1.Height);        }        private void button_DrawLine_Click(object sender, EventArgs e)        {            graphics.DrawLine(linepen, 190, 180, 460, 290);        }        private void button_Clip_Click(object sender, EventArgs e)        {            clip_a_line(190, 180, 460, 290, 260, 200, 410, 350);        }        //为p1、p2端点编码        public void encode(int x, int y, int[] code, int xw_min, int xw_max, int yw_min, int yw_max)        {            int i;            for (i = 0; i < 4; i++)                code[i] = 0;            if (x < xw_min)                code[3] = 1;            else            if (x > xw_max)                code[2] = 1;            if (y > yw_max)                code[1] = 1;            else            if (y < yw_min)                code[0] = 1;        }        //主函数，总控        public void clip_a_line(int x1, int y1, int x2, int y2, int xw_min, int yw_min, int xw_max, int yw_max)        {            int[] code1 = new int[4];//p1端点的编码            int[] code2 = new int[4];//p2端点的编码            int done;            int display;            float m;//直线斜率            int x11, x22, y11, y22, mark;            done = 0;     // done为是否剪裁完毕的标志变量            display = 0;      // display为是否显示直线的标志变量            while (done == 0)            {                x11 = x1;                x22 = x2;                y11 = y1;                y22 = y2;                encode(x1, y1, code1, xw_min, xw_max, yw_min, yw_max);    // 为起点编码                encode(x2, y2, code2, xw_min, xw_max, yw_min, yw_max);    // 为终点编码                if (accept(code1, code2) == 1)         // 判断直线两端点是否都在剪裁框内，是则剪裁完毕，显示直线                {                    done = 1;                    display = 1;                    break;                }                else if (reject(code1, code2) == 1)  // 判断直线两端点是否在剪裁框的同一外域，是则剪裁完毕，显示直线                {                    done = 1;                    break;                }                //mark是否交换p1、p2的标志等于1则交换                //swap_if_needed方法只是判断出是否需要交换、并返回是否需要交换的标志mark                mark = swap_if_needed(code1, code2); // mark的意义是:swap_if_needed中是否交换过code1[4]和code2[4]                if (mark == 1)                     // 若交换过，mark = swap_if_needed = 1,否则mark = swap_if_needed = 0                {                    x1 = x22;                 // 若mark = 1，交换两端点坐标                    x2 = x11;                    y1 = y22;                    y2 = y11;                }                if (x1 == x2)                      // 斜率不存在的情况。即，x1=x2，则令斜率为 -1                    m = -1;                else                    m = (float)(y2 - y1) / (float)(x2 - x1);// 计算斜率                // 根据起点p1编码的每一位，对直线进行剪裁，实际上是移动起点的坐标                //【注意】：处于屏幕坐标系下                if (code1[0] == 1) //判断编码第一位，为1，则该点在视觉上处于“上侧”，屏幕坐标系上则p1纵坐标小于矩形纵坐标最小值。                            {                    if (x1 != x2)                        x1 += (int)((yw_min - y1) / m);//x1移动到直线与yw_min交点处。                    y1 = yw_min;//将p1的y1移为矩形纵坐标最小值。                }                else                if (code1[1] == 1)                {                    if (x1 != x2)                        x1 -= (int)((y1 - yw_max) / m);                    y1 = yw_max;                }                else                if (code1[2] == 1)                {                    y1 -= (int)((x1 - xw_max) * m);                    x1 = xw_max;                }                else                if (code1[3] == 1)                {                    y1 += (int)((xw_min - x1) * m);                    x1 = xw_min;                }            }            if (display == 1)            {// 若显示直线标志为1，则画出直线                graphics.Clear(Color.White);//清空屏幕                //画出裁剪矩形                Point p1 = new Point(xw_min, yw_min);                Point p2 = new Point(xw_max, yw_min);                Point p3 = new Point(xw_max, yw_max);                Point p4 = new Point(xw_min, yw_max);                Point[] points;                points = new Point[] { p1, p2, p3, p4 };                graphics.DrawPolygon(Ectanglepen, points);                //画出直线                graphics.DrawLine(linepen1, x1, y1, x2, y2);            }        }        //判断p1、p2是否都在矩形内部        public int accept(int[] code1, int[] code2)        {            int i, flag;            flag = 1;            for (i = 0; i < 4; i++)                if ((code1[i] == 1) || (code2[i] == 1))                {                    flag = 0;                    break;                }            return (flag);        }        //判断p1、p2是否都在矩形外部        public int reject(int[] code1, int[] code2)        {            int i, flag;            flag = 0;//否            for (i = 0; i < 4; i++)                if ((code1[i] == 1) && (code2[i] == 1))                {                    flag = 1;//是                    break;                }            return (flag);        }        //p1、p2是否需要被交换        public int swap_if_needed(int[] code1, int[] code2)        {            int i, flag1, flag2, tmp;            flag1 = 1;            for (i = 0; i < 4; i++)                if (code1[i] == 1)                {                    flag1 = 0;//code1中存在1，即在点外部。不需要交换                    break;                }            flag2 = 1;            for (i = 0; i < 4; i++)                if (code2[i] == 1)                {                    flag2 = 0;//code2中存在1，即点在外部。不需要交换                    break;                }            if ((flag1 == 0) && (flag2 == 0))//说明两个编码中的含有1，则不能交换                return (0);            if ((flag1 == 1) && (flag2 == 0))//此时code1需要被交换，code2不需要被交换，            {                                 //将二者编码进行交换。                for (i = 0; i < 4; i++)                {                    tmp = code1[i];                    code1[i] = code2[i];                    code2[i] = tmp;                }                return (1);                   //返回需要交换坐标的信号，在总控方法中对坐标进行交换            }            return (0);                        //返回不需要交换坐标的信号。        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、流程图"><a href="#五、流程图" class="headerlink" title="五、流程图"></a>五、流程图</h2><h3 id="5-1clip-a-line-总控方法"><a href="#5-1clip-a-line-总控方法" class="headerlink" title="5.1clip_a_line(总控方法)"></a>5.1clip_a_line(总控方法)</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E7%9B%B4%E7%BA%BF%E8%A3%81%E5%89%AA/%E6%B5%81%E7%A8%8B%E5%9B%BEclip_a_line.jpg" alt=""></p><hr><h3 id="5-2-encode方法"><a href="#5-2-encode方法" class="headerlink" title="5.2 encode方法"></a>5.2 encode方法</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E7%9B%B4%E7%BA%BF%E8%A3%81%E5%89%AA/%E6%B5%81%E7%A8%8B%E5%9B%BEencode.jpg" alt=""></p><hr><h3 id="5-3-reject方法"><a href="#5-3-reject方法" class="headerlink" title="5.3 reject方法"></a>5.3 reject方法</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E7%9B%B4%E7%BA%BF%E8%A3%81%E5%89%AA/%E6%B5%81%E7%A8%8B%E5%9B%BEreject.jpg" alt=""></p><hr><h3 id="5-4-accept方法"><a href="#5-4-accept方法" class="headerlink" title="5.4 accept方法"></a>5.4 accept方法</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E7%9B%B4%E7%BA%BF%E8%A3%81%E5%89%AA/%E6%B5%81%E7%A8%8B%E5%9B%BEaccept.jpg" alt=""></p><hr><h3 id="5-5-swap-if-needed方法"><a href="#5-5-swap-if-needed方法" class="headerlink" title="5.5 swap_if_needed方法"></a>5.5 swap_if_needed方法</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E7%9B%B4%E7%BA%BF%E8%A3%81%E5%89%AA/%E6%B5%81%E7%A8%8B%E5%9B%BEswap_if_needed.jpg" alt=""></p><hr><h2 id="Over"><a href="#Over" class="headerlink" title="Over~"></a>Over~</h2>]]></content>
      
      
      <categories>
          
          <category> 计算机图形学 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
            <tag> C# </tag>
            
            <tag> 直线裁剪算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识Matlab</title>
      <link href="/2020/04/05/chu-shi-matlab/"/>
      <url>/2020/04/05/chu-shi-matlab/</url>
      
        <content type="html"><![CDATA[<h2 id="一、初识Matlab"><a href="#一、初识Matlab" class="headerlink" title="一、初识Matlab"></a>一、初识Matlab</h2><p>MATLAB 是 MATrix 和 LABoratory 两个词的组合，意为矩阵工厂（矩阵实验室）。</p><h3 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab%E7%95%8C%E9%9D%A2.jpg" alt=""></p><p>比较熟悉的界面风格~喜欢。</p><p>可以把当前文件夹换成工作目录。也就是存放脚本的地方。</p><p><strong>命令：</strong></p><p><strong>clc()</strong>用于清除命令行的命令。</p><p><strong>clear()</strong>用于清除工作区的变量。</p><h2 id="二、Matlab基础数学运算"><a href="#二、Matlab基础数学运算" class="headerlink" title="二、Matlab基础数学运算"></a>二、Matlab基础数学运算</h2><h3 id="2-1-MATLAB的变量与注释"><a href="#2-1-MATLAB的变量与注释" class="headerlink" title="2.1 MATLAB的变量与注释"></a>2.1 MATLAB的变量与注释</h3><p>可不声明变量，和python一样。(或者说，python和他一样……)</p><p>变量名由一个字母引导，后面可以跟字母、数字、下划线等，且区分大小写。<strong>不能以数字、下划线开头~，区分大小写。</strong></p><p>注释用%。也可用快捷键“ctrl+R”进行注释，</p><p>取消多行注释，则在选中的基础上，快捷键“ctrl+T”。</p><h3 id="2-2-MATLAB基本语句"><a href="#2-2-MATLAB基本语句" class="headerlink" title="2.2 MATLAB基本语句"></a>2.2 MATLAB基本语句</h3><h4 id="2-2-1直接赋值语句"><a href="#2-2-1直接赋值语句" class="headerlink" title="2.2.1直接赋值语句"></a>2.2.1直接赋值语句</h4><p>格式：赋值变量=赋值表达式</p><p> <strong>分号</strong></p><p>若赋值表达式后无分号，则为变量赋值并显示结果</p><p>若赋值表达式后有分号。则为变量赋值不显示结果。</p><p><strong>省略赋值变量和等号</strong></p><p>若省略赋值变量和等号，则结果会赋给保留变量ans。</p><p>如下，</p><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> a<span class="token operator">=</span><span class="token number">1</span><span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span><span class="token number">2</span> <span class="token comment" spellcheck="true">%赋值表达式后无分号。则为变量赋值并显示结果</span>a <span class="token operator">=</span>     <span class="token number">7</span><span class="token operator">></span><span class="token operator">></span> a<span class="token operator">=</span><span class="token number">1</span><span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">%赋值表达式后有分号。则为变量赋值不显示结果</span><span class="token operator">></span><span class="token operator">></span> <span class="token number">1</span><span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span><span class="token number">2</span> <span class="token comment" spellcheck="true">%省略赋值变量和等号。则结果会赋给保留变量ans</span>ans <span class="token operator">=</span>     <span class="token number">7</span><span class="token operator">></span><span class="token operator">></span> <span class="token number">1</span><span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">%(带了分号)省略赋值变量和等号。则结果会赋给保留变量ans</span><span class="token operator">></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>Matlab的中括号是用来放矩阵的</strong></p><p><strong>Matlab是弧度制</strong></p><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> <span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>ans <span class="token operator">=</span>   <span class="token operator">-</span><span class="token number">0.9880</span><span class="token operator">></span><span class="token operator">></span> <span class="token function">sin</span><span class="token punctuation">(</span><span class="token keyword">pi</span><span class="token operator">/</span><span class="token number">6</span><span class="token punctuation">)</span>ans <span class="token operator">=</span>    <span class="token number">0.5000</span><span class="token operator">></span><span class="token operator">></span> <span class="token keyword">pi</span>ans <span class="token operator">=</span>    <span class="token number">3.1416</span><span class="token operator">></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>Log**</strong>函数(内置与非内置计算)**</p><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> <span class="token function">log2</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">%以2为底5的对数</span>ans <span class="token operator">=</span>    <span class="token number">2.3219</span><span class="token operator">></span><span class="token operator">></span> <span class="token function">log10</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">%以10为底5的对数</span>ans <span class="token operator">=</span>    <span class="token number">0.6990</span><span class="token operator">></span><span class="token operator">></span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">%以e为底5的对数</span>ans <span class="token operator">=</span>    <span class="token number">1.6094</span><span class="token operator">></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现matlab没有log以其他数为底的内置函数</p><p><strong>解决办法：</strong></p><p><strong>①</strong>  <strong>换底公式换算</strong><br>$$<br>Log_5x=log_{10}x/log_{10}5<br>$$</p><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>ans <span class="token operator">=</span>     <span class="token number">1</span><span class="token operator">></span><span class="token operator">></span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>ans <span class="token operator">=</span>    <span class="token number">0.4307</span><span class="token operator">></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>②</strong>  <strong>利用内置反函数：finverse()函数</strong></p><pre><code>&gt;&gt; y=5^2y =    25&gt;&gt; f=finverse(y)未定义与 &#39;double&#39; 类型的输入参数相对应的函数 &#39;finverse&#39;。&gt;&gt; </code></pre><p><strong>数据类型怎么转换?</strong></p><p><strong>问题未解决……</strong></p><h4 id="2-2-2函数调用语句-自定义函数"><a href="#2-2-2函数调用语句-自定义函数" class="headerlink" title="2.2.2函数调用语句(自定义函数)"></a>2.2.2函数调用语句(自定义函数)</h4><p>自定义函数</p><p>可直接在定义：function y=fun2(x)</p><p>进行自定义函数。将elseiftest函数改造如下，</p><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token keyword">function</span> y<span class="token operator">=</span><span class="token function">fun1</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true">%x=-2;</span><span class="token keyword">if</span> x<span class="token operator">>=</span><span class="token number">1</span>    y<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">elseif</span> x<span class="token operator">></span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>x<span class="token operator">&lt;</span><span class="token number">1</span>   y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">else</span>    y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：使用函数的时候，要用文件名，跟y=fun1没关系。</strong></p><h3 id="2-3矩阵运算"><a href="#2-3矩阵运算" class="headerlink" title="2.3矩阵运算"></a>2.3矩阵运算</h3><h4 id="2-3-1-矩阵生成"><a href="#2-3-1-矩阵生成" class="headerlink" title="2.3.1 矩阵生成"></a>2.3.1 矩阵生成</h4><h5 id="①-直接输入矩阵"><a href="#①-直接输入矩阵" class="headerlink" title="① 直接输入矩阵"></a>① 直接输入矩阵</h5><p>对于较小的简单的矩阵，可以从键盘上直接输入矩阵元素，输入时遵循下面的几个原则：</p><p>a)    矩阵每一行的元素必须用空格或逗号分开；</p><p>b)    在矩阵中，采用分号或回车表明每一行的结束；</p><p>c)    整个输入矩阵必须包含在方括号中。</p><p>方式一：</p><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> A<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">;</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span>A <span class="token operator">=</span>     <span class="token number">1</span>     <span class="token number">2</span>     <span class="token number">3</span>     <span class="token number">4</span>     <span class="token number">5</span>     <span class="token number">6</span>     <span class="token number">7</span>     <span class="token number">8</span>     <span class="token number">9</span><span class="token operator">></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方式二：</p><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> A<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span><span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span><span class="token punctuation">]</span>A <span class="token operator">=</span>     <span class="token number">1</span>     <span class="token number">2</span>     <span class="token number">3</span>     <span class="token number">2</span>     <span class="token number">3</span>     <span class="token number">4</span>     <span class="token number">5</span>     <span class="token number">6</span>     <span class="token number">7</span><span class="token operator">></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>矩阵的基本运算</p><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> A<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span><span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span><span class="token punctuation">]</span>A <span class="token operator">=</span>     <span class="token number">1</span>     <span class="token number">2</span>     <span class="token number">3</span>     <span class="token number">2</span>     <span class="token number">3</span>     <span class="token number">4</span>     <span class="token number">5</span>     <span class="token number">6</span>     <span class="token number">7</span><span class="token operator">></span><span class="token operator">></span> B<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">;</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span>B <span class="token operator">=</span>     <span class="token number">2</span>     <span class="token number">3</span>     <span class="token number">4</span>     <span class="token number">5</span>     <span class="token number">6</span>     <span class="token number">7</span>     <span class="token number">8</span>     <span class="token number">9</span>    <span class="token number">10</span><span class="token operator">></span><span class="token operator">></span> A<span class="token operator">+</span>Bans <span class="token operator">=</span>     <span class="token number">3</span>     <span class="token number">5</span>     <span class="token number">7</span>     <span class="token number">7</span>     <span class="token number">9</span>    <span class="token number">11</span>    <span class="token number">13</span>    <span class="token number">15</span>    <span class="token number">17</span><span class="token operator">></span><span class="token operator">></span> A<span class="token operator">-</span>Bans <span class="token operator">=</span>    <span class="token operator">-</span><span class="token number">1</span>    <span class="token operator">-</span><span class="token number">1</span>    <span class="token operator">-</span><span class="token number">1</span>    <span class="token operator">-</span><span class="token number">3</span>    <span class="token operator">-</span><span class="token number">3</span>    <span class="token operator">-</span><span class="token number">3</span>    <span class="token operator">-</span><span class="token number">3</span>    <span class="token operator">-</span><span class="token number">3</span>    <span class="token operator">-</span><span class="token number">3</span><span class="token operator">></span><span class="token operator">></span> A<span class="token operator">*</span>Bans <span class="token operator">=</span>    <span class="token number">36</span>    <span class="token number">42</span>    <span class="token number">48</span>    <span class="token number">51</span>    <span class="token number">60</span>    <span class="token number">69</span>    <span class="token number">96</span>   <span class="token number">114</span>   <span class="token number">132</span><span class="token operator">></span><span class="token operator">></span> A<span class="token operator">'</span> <span class="token comment" spellcheck="true">%转置</span>ans <span class="token operator">=</span>     <span class="token number">1</span>     <span class="token number">2</span>     <span class="token number">5</span>     <span class="token number">2</span>     <span class="token number">3</span>     <span class="token number">6</span>     <span class="token number">3</span>     <span class="token number">4</span>     <span class="token number">7</span><span class="token operator">></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="由内置函数生成矩阵"><a href="#由内置函数生成矩阵" class="headerlink" title="由内置函数生成矩阵"></a>由内置函数生成矩阵</h5><p>在MATLAB中，内置了一些生成矩阵的函数，如：eye(n)生成n维的单位矩阵，ones(n)生成n 维的全1矩阵，zeros(n)生成n维的全0矩阵，另外可以将小矩阵联接起来生成一个较大的矩阵。</p><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> <span class="token function">eye</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">%)生成n维的单位矩阵</span>ans <span class="token operator">=</span>     <span class="token number">1</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">1</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">1</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">1</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">1</span><span class="token operator">></span><span class="token operator">></span> <span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">%)生成n维的全1矩阵</span>ans <span class="token operator">=</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span><span class="token operator">></span><span class="token operator">></span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">%)生成n维的全0矩阵</span>ans <span class="token operator">=</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span><span class="token operator">></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>除了方阵，还可以生成n*m的矩阵</p><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> <span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>ans <span class="token operator">=</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span>     <span class="token number">1</span><span class="token operator">></span><span class="token operator">></span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>ans <span class="token operator">=</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span><span class="token operator">></span><span class="token operator">></span> <span class="token function">eye</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span>ans <span class="token operator">=</span>     <span class="token number">1</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">1</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">1</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">1</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">1</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">1</span>     <span class="token number">0</span>     <span class="token number">0</span><span class="token operator">></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="基本运算"><a href="#基本运算" class="headerlink" title="基本运算"></a>基本运算</h5><p>在MATLAB中，矩阵的计算非常方面，系统会自动判断矩阵的类型和维度。求转置矩阵用 ‘ ,如求A的转置：&gt;&gt; A’；求逆矩阵用函数inv()，如求 A 的逆矩阵：&gt;&gt; inv(A) ；开平方用函数 sqrt()。</p><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> A<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>A <span class="token operator">=</span>     <span class="token number">1</span>     <span class="token number">2</span>     <span class="token number">3</span>     <span class="token number">2</span>     <span class="token number">2</span>     <span class="token number">5</span>     <span class="token number">3</span>     <span class="token number">5</span>     <span class="token number">1</span><span class="token operator">></span><span class="token operator">></span> <span class="token function">inv</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span>ans <span class="token operator">=</span>   <span class="token operator">-</span><span class="token number">1.5333</span>    <span class="token number">0.8667</span>    <span class="token number">0.2667</span>    <span class="token number">0.8667</span>   <span class="token operator">-</span><span class="token number">0.5333</span>    <span class="token number">0.0667</span>    <span class="token number">0.2667</span>    <span class="token number">0.0667</span>   <span class="token operator">-</span><span class="token number">0.1333</span><span class="token operator">></span><span class="token operator">></span> <span class="token function">sqrt</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">%开平方</span>ans <span class="token operator">=</span>    <span class="token number">1.0000</span>    <span class="token number">1.4142</span>    <span class="token number">1.7321</span>    <span class="token number">1.4142</span>    <span class="token number">1.4142</span>    <span class="token number">2.2361</span>    <span class="token number">1.7321</span>    <span class="token number">2.2361</span>    <span class="token number">1.0000</span><span class="token operator">></span><span class="token operator">></span> A<span class="token operator">'</span>ans <span class="token operator">=</span>     <span class="token number">1</span>     <span class="token number">2</span>     <span class="token number">3</span>     <span class="token number">2</span>     <span class="token number">2</span>     <span class="token number">5</span>     <span class="token number">3</span>     <span class="token number">5</span>     <span class="token number">1</span><span class="token operator">></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="生成大矩阵"><a href="#生成大矩阵" class="headerlink" title="生成大矩阵"></a>生成大矩阵</h5><p>可以将小矩阵联接起来生成一个较大的矩阵。</p><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> AA <span class="token operator">=</span>     <span class="token number">1</span>     <span class="token number">2</span>     <span class="token number">3</span>     <span class="token number">2</span>     <span class="token number">2</span>     <span class="token number">5</span>     <span class="token number">3</span>     <span class="token number">5</span>     <span class="token number">1</span><span class="token operator">></span><span class="token operator">></span> B<span class="token operator">=</span><span class="token punctuation">[</span>A<span class="token punctuation">,</span> A<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">,</span> A<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">;</span> A<span class="token number">-10</span><span class="token punctuation">,</span> A<span class="token number">-5</span><span class="token punctuation">,</span> A<span class="token punctuation">]</span>B <span class="token operator">=</span>     <span class="token number">1</span>     <span class="token number">2</span>     <span class="token number">3</span>     <span class="token number">6</span>     <span class="token number">7</span>     <span class="token number">8</span>    <span class="token number">11</span>    <span class="token number">12</span>    <span class="token number">13</span>     <span class="token number">2</span>     <span class="token number">2</span>     <span class="token number">5</span>     <span class="token number">7</span>     <span class="token number">7</span>    <span class="token number">10</span>    <span class="token number">12</span>    <span class="token number">12</span>    <span class="token number">15</span>     <span class="token number">3</span>     <span class="token number">5</span>     <span class="token number">1</span>     <span class="token number">8</span>    <span class="token number">10</span>     <span class="token number">6</span>    <span class="token number">13</span>    <span class="token number">15</span>    <span class="token number">11</span>    <span class="token operator">-</span><span class="token number">9</span>    <span class="token operator">-</span><span class="token number">8</span>    <span class="token operator">-</span><span class="token number">7</span>    <span class="token operator">-</span><span class="token number">4</span>    <span class="token operator">-</span><span class="token number">3</span>    <span class="token operator">-</span><span class="token number">2</span>     <span class="token number">1</span>     <span class="token number">2</span>     <span class="token number">3</span>    <span class="token operator">-</span><span class="token number">8</span>    <span class="token operator">-</span><span class="token number">8</span>    <span class="token operator">-</span><span class="token number">5</span>    <span class="token operator">-</span><span class="token number">3</span>    <span class="token operator">-</span><span class="token number">3</span>     <span class="token number">0</span>     <span class="token number">2</span>     <span class="token number">2</span>     <span class="token number">5</span>    <span class="token operator">-</span><span class="token number">7</span>    <span class="token operator">-</span><span class="token number">5</span>    <span class="token operator">-</span><span class="token number">9</span>    <span class="token operator">-</span><span class="token number">2</span>     <span class="token number">0</span>    <span class="token operator">-</span><span class="token number">4</span>     <span class="token number">3</span>     <span class="token number">5</span>     <span class="token number">1</span><span class="token operator">></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-循环控制语句"><a href="#2-4-循环控制语句" class="headerlink" title="2.4 循环控制语句"></a>2.4 循环控制语句</h3><h4 id="for和while"><a href="#for和while" class="headerlink" title="for和while"></a>for和while</h4><p>用for和while来计算1—100的数之和。</p><p><strong>For</strong></p><pre class="line-numbers language-matlab"><code class="language-matlab">s<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">%初始化</span><span class="token keyword">for</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">100</span> <span class="token comment" spellcheck="true">%第一个冒号之前的1是k的初始值，两个冒号之间的1是k增加的步长，最后一个冒号之后的100是结束值。</span>    s<span class="token operator">=</span>s<span class="token operator">+</span>k<span class="token punctuation">;</span><span class="token keyword">end</span>s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>命令行窗口输出</p><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> for_Tests <span class="token operator">=</span>        <span class="token number">5050</span><span class="token operator">></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>While</strong></p><pre class="line-numbers language-matlab"><code class="language-matlab">s<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">%初始值</span><span class="token keyword">while</span><span class="token punctuation">(</span>k<span class="token operator">&lt;=</span><span class="token number">100</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">%当 k=100 是结束循环。</span>    s<span class="token operator">=</span>s<span class="token operator">+</span>k<span class="token punctuation">;</span>    k<span class="token operator">=</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">end</span>s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>命令行窗口输出</p><pre><code>&gt;&gt; whiletests =        5050&gt;&gt; </code></pre><h4 id="条件转移语句elseif"><a href="#条件转移语句elseif" class="headerlink" title="条件转移语句elseif"></a>条件转移语句elseif</h4><pre class="line-numbers language-matlab"><code class="language-matlab">x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">if</span> x<span class="token operator">>=</span><span class="token number">1</span>    y<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">elseif</span> x<span class="token operator">></span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>x<span class="token operator">&lt;</span><span class="token number">1</span>   y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">else</span>    y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">end</span>y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="开关语句switch"><a href="#开关语句switch" class="headerlink" title="开关语句switch"></a>开关语句switch</h4><pre class="line-numbers language-matlab"><code class="language-matlab">x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">switch</span> x    <span class="token keyword">case</span> <span class="token number">1</span>        y<span class="token operator">=</span><span class="token number">1</span>    <span class="token keyword">case</span> <span class="token number">2</span>        y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>    <span class="token keyword">otherwise</span>        y<span class="token operator">=</span><span class="token number">9999</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出</p><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> switchtesty <span class="token operator">=</span>        <span class="token number">9999</span><span class="token operator">></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、基于MATLAB平台的数字图像认知"><a href="#三、基于MATLAB平台的数字图像认知" class="headerlink" title="三、基于MATLAB平台的数字图像认知"></a>三、基于MATLAB平台的数字图像认知</h2><p>在 MATLAB 的安装目录下可以找到 MATLAB 自带的图片资源，以 MATLAB 2016b 版本为例，可以在 MATLAB\R2016b\toolbox\images\imdata 目录下找到图片资源。</p><h3 id="3-1照片读取imread-函数"><a href="#3-1照片读取imread-函数" class="headerlink" title="3.1照片读取imread()函数"></a>3.1照片读取imread()函数</h3><pre class="line-numbers language-matlab"><code class="language-matlab">A<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'cameraman.tif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">%可以在工作区看到A是一个 256*256的uint8格式数组</span>AB<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'yellowlily.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">%可以在工作区看到B是一个1632*1224*3的uint8格式数组</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token comment" spellcheck="true">%打开图形窗口1，显示A图片。</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">%打开图形窗口2，显示B图片。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E5%9F%BA%E7%A1%801%E8%AF%BB%E5%8F%96.jpg" alt=""></p><p>图像A的矩阵行列为256<em>256，因为其大小即256</em>256</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E5%9F%BA%E7%A1%80%E7%85%A7%E7%89%87%E5%A4%A7%E5%B0%8F.jpg" alt=""></p><p>因为是灰度，所以没有标识的整型uint8，且每一个值的范围为0~255。</p><h3 id="3-2图像灰度反转"><a href="#3-2图像灰度反转" class="headerlink" title="3.2图像灰度反转"></a>3.2图像灰度反转</h3><p>图像读取进来为矩阵。</p><p>矩阵可以进行计算。</p><p>255-A可得该图像的灰度图的反转</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E5%9F%BA%E7%A1%80%E5%8F%8D%E8%BD%AC.jpg" alt=""></p><p>若不指定显示窗口，会输出figure1，覆盖原有的图像</p><pre class="line-numbers language-matlab"><code class="language-matlab">A<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'cameraman.tif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">%可以在工作区看到A是一个 256*256的uint8格式数组</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token comment" spellcheck="true">%打开图形窗口1，显示A图片。</span><span class="token comment" spellcheck="true">%灰度反转</span>C<span class="token operator">=</span><span class="token number">255</span><span class="token operator">-</span>A<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>C<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%也会显示在图形窗口1，覆盖掉A</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3彩色图像"><a href="#3-3彩色图像" class="headerlink" title="3.3彩色图像"></a>3.3彩色图像</h3><p>是三维矩阵。R、G、B三个通道去显示。</p><p>读取彩色tif默认为灰度图。</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E5%9F%BA%E7%A1%80c%E5%8F%8D%E8%BD%AC%E5%BD%A9%E8%89%B2.jpg" alt=""></p><h2 id="四、遇到过的问题"><a href="#四、遇到过的问题" class="headerlink" title="四、遇到过的问题"></a>四、遇到过的问题</h2><h3 id="4-1-字体改为Consolas后编辑器注释中文乱码问题"><a href="#4-1-字体改为Consolas后编辑器注释中文乱码问题" class="headerlink" title="4.1 字体改为Consolas后编辑器注释中文乱码问题"></a>4.1 字体改为Consolas后编辑器注释中文乱码问题</h3><p>安装完毕后，越写越觉得Matlab的字体真不咋地，于是乎，将字体改为心心爱爱的Consolas字体，然鹅，发现注释中的中文出现了方框问号的乱码问题……。</p><p><strong>原因：</strong></p><p><strong>Matlab中缺少Consolas字体，导致其显示不正确。</strong></p><p><strong>解决：下载Consolas-with-Yahei-master.zip字体(4个)，将其放在matlab字体路径下即可。</strong></p><p><strong>Matlab字体路径：D:\Matlab\sys\java\jre\win64\jre\lib\fonts</strong></p><p><strong>下载链接：<a href="https://pan.baidu.com/s/1-Ozh509csXHgNSMoWGRteg" target="_blank" rel="noopener">https://pan.baidu.com/s/1-Ozh509csXHgNSMoWGRteg</a></strong> </p><p><strong>提取码：vd8a</strong></p><p>为什么选择这一种字体呢</p><blockquote><p>Consolas 字体是微软专为程序员开发的一种字体，这一字体的特性是所有字母、数字与符号均能非常容易辨认!而且所有字符都具有相同的宽度,让编程人员看着更舒适。但是不支持中文。</p><p>微软雅黑是个人电脑上可以显示的最清晰的中文字体之一,全面支持ClearType技术。</p></blockquote><p>这种字体是一种 <strong>Consolas</strong> 和 <strong>微软雅黑</strong> 的混合字体，这样既保证了代码的显示效果，而且也兼容了中文显示。</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E4%B9%B1%E7%A0%81%E5%AD%97%E4%BD%93%E8%B7%AF%E5%BE%84.jpg" alt=""></p><h3 id="4-2-ASV文件"><a href="#4-2-ASV文件" class="headerlink" title="4.2 ASV文件"></a>4.2 ASV文件</h3><p>在写代码的时候，无意间发现，哎~？创建的脚本旁边还有有个同名的兄弟文件，后缀为CSV。很有趣，</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/ASVASV%E6%96%87%E4%BB%B6.jpg" alt=""></p><p>asv就是autosave的意思，<em>.asv文件的内容和相应的</em>.m文件内容一样，用记事本和matlab都能打开它。它可以作为*.m文件的“备份”。</p><p>可以在预设中通过设置取消自动备份功能：编辑器/调试器→备份文件。把勾选去掉就行了。</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/ASV%E8%AE%BE%E7%BD%AE.jpg" alt=""></p><h3 id="4-3反函数finverse求log52"><a href="#4-3反函数finverse求log52" class="headerlink" title="4.3反函数finverse求log52"></a>4.3反函数finverse求log52</h3><pre class="line-numbers language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> y<span class="token operator">=</span><span class="token number">5</span><span class="token operator">^</span><span class="token number">2</span>y <span class="token operator">=</span>    <span class="token number">25</span><span class="token operator">></span><span class="token operator">></span> f<span class="token operator">=</span><span class="token function">finverse</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span>未定义与 <span class="token string">'double'</span> 类型的输入参数相对应的函数 <span class="token string">'finverse'</span>。<span class="token operator">></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>数据类型怎么转换?</strong></p><p>这是个问题……</p>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab安装</title>
      <link href="/2020/04/05/matlab-an-zhuang/"/>
      <url>/2020/04/05/matlab-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Matlab安装-2016"><a href="#一、Matlab安装-2016" class="headerlink" title="一、Matlab安装(2016)"></a>一、Matlab安装(2016)</h2><h3 id="1、安装包及破解文件内容结构"><a href="#1、安装包及破解文件内容结构" class="headerlink" title="1、安装包及破解文件内容结构"></a>1、安装包及破解文件内容结构</h3><h4 id="1-1总览"><a href="#1-1总览" class="headerlink" title="1.1总览"></a>1.1总览</h4><p>可根据电脑配置安装不同版本，还有Matlab7.1简化版(截图部分没有列出)</p><p>Matlab安装包分为两部分，(太大了，拆成了两部分)</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E7%A0%B4%E8%A7%A3%E6%96%87%E4%BB%B6.jpg" alt=""></p><h4 id="1-2Matlab-2016b-Win64-Crack-rar"><a href="#1-2Matlab-2016b-Win64-Crack-rar" class="headerlink" title="1.2Matlab 2016b Win64 Crack.rar"></a>1.2Matlab 2016b Win64 Crack.rar</h4><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E7%A0%B4%E8%A7%A3%E7%A0%B4%E8%A7%A3%E6%96%87%E4%BB%B6crack.jpg" alt=""></p><h3 id="2、安装总体思路"><a href="#2、安装总体思路" class="headerlink" title="2、安装总体思路"></a>2、安装总体思路</h3><p><strong>1)</strong>    <strong>安装DEAMON Toolslite。</strong></p><blockquote><p>即安装虚拟光驱。目的是解决PC上没有光驱的问题。使dvd1和dvd2两部分可衔接起来安装。</p></blockquote><p><strong>2)</strong>    <strong>装载dvd1.</strong></p><p><strong>3)</strong>    <strong>安装dvd1。使用文件安装密钥(readme.txt)。</strong></p><p><strong>4)</strong>    <strong>装载安装dvd2。在安装dvd1到78%时，会出现提示，继续进行dvd2安装.</strong></p><p><strong>5)</strong>    <strong>替换破解文件。</strong></p><p><strong>6)</strong>    <strong>读取许可文件。</strong></p><p><strong>7)</strong>    <strong>Fighting~！</strong></p><h3 id="3、具体安装流程"><a href="#3、具体安装流程" class="headerlink" title="3、具体安装流程"></a>3、具体安装流程</h3><h4 id="3-1-安装daemontoolslite虚拟光驱"><a href="#3-1-安装daemontoolslite虚拟光驱" class="headerlink" title="3.1 安装daemontoolslite虚拟光驱"></a>3.1 安装daemontoolslite虚拟光驱</h4><p>解压daemontoolslite.rar压缩文件。</p><p>然后，下一步下一步……完成！</p><h4 id="3-2装载dvd1"><a href="#3-2装载dvd1" class="headerlink" title="3.2装载dvd1"></a>3.2装载dvd1</h4><p>进入DEAMON Toolslite，对R2016b_win64_dvd1.iso进行装载。</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E7%A0%B4%E8%A7%A3%E8%A3%85%E8%BD%BD.jpg" alt=""></p><h4 id="3-3安装dvd1"><a href="#3-3安装dvd1" class="headerlink" title="3.3安装dvd1"></a>3.3安装dvd1</h4><h5 id="3-3-1-setup-exe"><a href="#3-3-1-setup-exe" class="headerlink" title="3.3.1 setup.exe"></a>3.3.1 setup.exe</h5><p>装载完毕之后，进入驱动器盘。运行setup.exe</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E7%A0%B4%E8%A7%A3qudong.jpg" alt=""></p><h5 id="3-3-1使用文件安装密钥"><a href="#3-3-1使用文件安装密钥" class="headerlink" title="3.3.1使用文件安装密钥"></a>3.3.1使用文件安装密钥</h5><p>已有文件安全密钥，解压Matlab 2016b Win64 Crack.rar。之后打开readme.txt。使用第一个版本，standalone，的第一个密钥。</p><h4 id="3-4-装载安装dvd2"><a href="#3-4-装载安装dvd2" class="headerlink" title="3.4 装载安装dvd2"></a>3.4 装载安装dvd2</h4><p>当dvd1安装到78%时，会出现弹出继续安装DVD2的提示。</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E7%A0%B4%E8%A7%A3%E4%B8%83_%E5%85%AB.jpg" alt=""></p><p>进入DEAMON Toolslite。对装载的dvd1卸载(相当于弹出)</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E7%A0%B4%E8%A7%A320200405105822.png" alt=""></p><p>然后装载dvd2</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E7%A0%B4%E8%A7%A320200405105929.png" alt=""></p><p>装载成功后，点确定继续安装。</p><h4 id="3-5破解"><a href="#3-5破解" class="headerlink" title="3.5破解"></a>3.5破解</h4><p>安装dvd1和dvd2成功后进行破解</p><p>再次查看破解文件Matlab 2016b Win64 Crack内容。</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E7%A0%B4%E8%A7%A3%E7%A0%B4%E8%A7%A3%E6%96%87%E4%BB%B6crack.jpg" alt=""></p><h5 id="3-5-1替换破解文件"><a href="#3-5-1替换破解文件" class="headerlink" title="3.5.1替换破解文件"></a>3.5.1替换破解文件</h5><p><strong>R2016b**</strong>文件下破解文件**</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E7%A0%B4%E8%A7%A3%E6%9B%BF%E6%8D%A2%E7%A0%B4%E6%96%87%E4%BB%B6.jpg" alt=""></p><h5 id="3-5-2发送快捷方式并运行exe"><a href="#3-5-2发送快捷方式并运行exe" class="headerlink" title="3.5.2发送快捷方式并运行exe"></a>3.5.2发送快捷方式并运行exe</h5><p>替换完成后，进入bin将matlab.exe发送桌面快捷方式。并打开matlab.exe，开展下一步——读取许可文件。</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E7%A0%B4%E8%A7%A3%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F.jpg" alt=""></p><h5 id="3-5-3读取许可"><a href="#3-5-3读取许可" class="headerlink" title="3.5.3读取许可"></a>3.5.3读取许可</h5><p>打开exe后，需要在不联网的情况下进行</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E7%A0%B4%E8%A7%A3%E4%B8%8D%E8%81%94%E7%BD%91.jpg" alt=""></p><p>读取许可文件</p><p>链接到该目录下</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E7%A0%B4%E8%A7%A3%E8%AE%B8%E5%8F%AF%E6%96%87%E4%BB%B6.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Matlab/%E7%A0%B4%E8%A7%A3%E8%AF%BB%E5%8F%96%E8%AE%B8%E5%8F%AF%E6%88%91%E5%91%A2%E8%A7%81.jpg" alt=""></p><p><strong>破解成功！Have Fun！</strong></p><p><strong>打开Matlab！</strong></p><p><strong>Hello World~！</strong></p>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R气象数据批处理</title>
      <link href="/2020/03/24/r-qi-xiang-shu-ju-pi-chu-li/"/>
      <url>/2020/03/24/r-qi-xiang-shu-ju-pi-chu-li/</url>
      
        <content type="html"><![CDATA[<p><strong>R语言批处理<a href="http://data.cma.cn/data/cdcdetail/dataCode/SURF_CLI_CHN_MUL_DAY_V3.0.html" target="_blank" rel="noopener">中国地面气候资料日值数据集(V3.0)</a>本文的处理数据、说明文档以及脚本，在这儿👇</strong></p><p><strong><a href="https://download.csdn.net/download/weixin_44318841/12267979" target="_blank" rel="noopener">:m:</a></strong></p><h2 id="一、数据内容结构简介"><a href="#一、数据内容结构简介" class="headerlink" title="一、数据内容结构简介"></a>一、数据内容结构简介</h2><p>以月为单位，每个文件代表一个月，每个文件中包括所有站点的详细数据(可能是全国的气象站点)</p><blockquote><p>“中国地面气候资料日值数据集（V3.0）”包含了中国699个基准、基本气象站1951年1月以来本站气压、气温、降水量、蒸发量、相对湿度、风向风速、日照时数和0cm地温要素的日值数据。</p></blockquote><p>如图，</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/%E5%85%AD/%E6%95%B0%E6%8D%AE.png" alt=""></p><p>其中各列含义依次为</p><blockquote><p>“站点”,”纬度”,”经度”,”海拔”, “年”,”月”,”日”,”平均气温”, “最大气温”,”最小气温”</p></blockquote><h2 id="二、所要实现的效果"><a href="#二、所要实现的效果" class="headerlink" title="二、所要实现的效果"></a>二、所要实现的效果</h2><p>源数据是以月为单位，月文件下包含各个站点信息。</p><p><strong>所要实现的效果是，以站点为单位，每个站点为一独立文件，该文件下包括各月数据。</strong></p><blockquote><p>本次要单独提出几个站点数据，代号为50136,51470,52602,54351的站点，即每个月文件下的第一列数据。</p><p>若要提取所有数据，代码更改部分下文已有简单说明</p><p>ps:平均、最大、最小气温数据需要进行单独处理，除10.</p></blockquote><p>最终效果图示：</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/%E5%85%AD/%E6%95%88%E6%9E%9C.png" alt=""></p><h2 id="三、R脚本实现"><a href="#三、R脚本实现" class="headerlink" title="三、R脚本实现"></a>三、R脚本实现</h2><h3 id="3-1-初级版本——部分指定站点处理"><a href="#3-1-初级版本——部分指定站点处理" class="headerlink" title="3.1 初级版本——部分指定站点处理"></a>3.1 初级版本——部分指定站点处理</h3><pre class="line-numbers language-R"><code class="language-R">rm(list = ls())setwd("B:/Temp3/test")#筛选出所有数据文件，以“SURF_CLI_CHN_MUL_DAY-TEM”为搜索关键词----flies=list.files(pattern = "SURF_CLI_CHN_MUL_DAY-TEM")#检索每一个文件内容----------------------------------------------for (flie in 1:length(flies)) {  data<-read.table(file = flies[flie])  #将数据按照V1列分组(站点列)  sites=split(data,f=data$V1)  #定义所需站点数组，若要提取所有数据，只需更改此处，以及site  #即以下三列，for控制改为length(sites)  partldata=c(50136,51470,52602,54351)  for (i in partldata) {    #单独一个站点的数据(dataframe格式)    site=data.frame(sites[[paste(i)]])    write.table(site[,1:10],#只取前10列                paste(sites[[paste(i)]][1,1],                      "站点.csv"),#文件名                sep = "," ,#以“，”分割才能有正常格式，很迷                append = T,#每个文件(每个月份)的数据都依次追加                row.names = F,                col.names = F)    print(paste(i,"完成"))  }  print("Yeah! 又完成了一个文件")}print("Good!")#为其添加列名,并处理气温数据-------------------------------------#搜索出完成的文件，以“5”开头、“.csv”为结尾为特征搜索data5=list.files(pattern = "5*.csv$")for (j in 1:length(data5)) {  datacsv=read.csv(data5[j],header = F)  names(datacsv)<-c("站点","纬度","经度","海拔",                    "年","月","日","平均气温",                    "最大气温","最小气温")   #datacsv$平均气温<-datacsv$平均气温/10  #datacsv$最大气温<-datacsv$最大气温/10  #datacsv$最小气温<-datacsv$最小气温/10  write.table(datacsv,              paste(data5[j]),              sep = "," ,              append=F,              row.names = F)}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2-终极版本——全部站点处理"><a href="#3-2-终极版本——全部站点处理" class="headerlink" title="3.2 终极版本——全部站点处理"></a><strong>3.2 终极版本——全部站点处理</strong></h3><pre class="line-numbers language-R"><code class="language-R">rm(list = ls())setwd("B:/Temp3/test1")#筛选出所有数据文件，以“SURF_CLI_CHN_MUL_DAY-TEM”为搜索关键词----flies=list.files(pattern = "SURF_CLI_CHN_MUL_DAY-TEM")flies#检索每一个文件内容----------------------------------------------for (flie in 1:length(flies)) {  data<-read.table(file = flies[flie])  #将数据按照V1列分组(站点列)  sites=split(data,f=data$V1)  for (i in 1:length(sites)) {    #单独一个站点的数据(dataframe格式)    site=data.frame(sites[i])    write.table(site[,1:10],#只取前10列                paste(sites[[i]][1,1],                      "站点.csv"),#文件名                sep = "," ,#以“，”分割才能有正常格式，很迷                append = T,#每个文件(每个月份)的数据都依次追加                row.names = F,                col.names = F)    print(sites[[i]][1,1])  }  print("Yeah! 又完成了一个文件")}print("Good!")#为其添加列名,并处理气温数据-------------------------------------#搜索出完成的文件，以“5”开头、“.csv”为结尾为特征搜索data5=list.files(pattern = "5*.csv$")for (j in 1:length(data5)) {  datacsv=read.csv(data5[j],header = F)  #names(datacsv)<-c("站点","纬度","经度","海拔",  #                  "年","月","日","平均气温",  #                  "最大气温","最小气温")   datacsv$V8<-datacsv$V8/10  datacsv$V9<-datacsv$V9/10  datacsv$V10<-datacsv$V10/10  write.table(datacsv,              paste(data5[j]),              sep = "," ,              append=F,              row.names = F,              col.names=F              )}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>P.S. 代码后期做了微小的调整。</strong></p><blockquote><p>①对经纬度进行除100</p><p>②对三个气温进行除10</p><p>③去掉了加入列名代码，因为后期处理不方便</p></blockquote><p><strong>终极版本运行环境如下(包含运行结果)</strong></p><p>环境下为各个气象TXT文件，运行各个站点文件则直接放在该目录下。</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/%E5%85%AD%E7%8E%AF%E5%A2%831.png" alt=""></p><hr><h3 id="3-3-他山之石"><a href="#3-3-他山之石" class="headerlink" title="3.3 他山之石"></a>3.3 他山之石</h3><p><strong>1、很清晰，不过用的方法一样</strong></p><p>不过环境得稍改一下</p><pre class="line-numbers language-R"><code class="language-R">rm(list=ls())setwd("B:/Temp3/")file <- list.files('TEM', full.names = T)for(i in 1:length(file)){  df <- read.table(file[i])  df <- df[,1:10]  out <- split(df, f = df$V1)  for(j in 1:length(out))  {    ddf   <- out[[j]]    id    <- ddf[1,1]    path  <- paste(id, '.txt', sep = "")    write.table(ddf, path, append = T, row.names = F, col.names = F, sep = ' ')  }  print(i)}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、另一种~，也很棒！</p><pre class="line-numbers language-R"><code class="language-R">rm(list=ls())setwd("B:/Temp3/test")flies=list.files(pattern = "SURF_CLI_CHN_MUL_DAY-TEM")firstflie<-read.table('SURF_CLI_CHN_MUL_DAY-TEM-12001-201101.TXT')getnum<-firstflie$V1#提取所有站点getnum<-getnum[!duplicated(getnum)]#重复数据删除for(j in getnum){  name<-paste(as.character(j),".txt",sep="")  #vcsv<-paste(as.character(j),".csv",sep="")  for(i in 1:length(files))  {    df_single <- read.table(files[i])#每一个文件    sdf<- subset(df_single, V1 == j) #分割文件，方法：将v1列的值与每一个站点匹配。    sdf<- sdf[,1:10]#只取前十列    write.table(sdf, name, append = T, col.names = F, row.names = F)  }  print(name)}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、统计各站点所有年月份的气温总和shp输出"><a href="#四、统计各站点所有年月份的气温总和shp输出" class="headerlink" title="四、统计各站点所有年月份的气温总和shp输出"></a>四、统计各站点所有年月份的气温总和shp输出</h2><h3 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h3><p>在以上处理结果的基础上，对各个分开的各个站点进行汇总统计。</p><p>具体来说，也就是，在步骤三的基础上👇(所有的站点)</p><p>已经生成好了所有的站点文件。其中，result文件夹为存放结果数据。</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/%E5%85%ADdata2.JPG" alt=""></p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><pre class="line-numbers language-R"><code class="language-R">rm(list = ls())setwd("B:/Temp3/test1")#导包-----------------------------------------------------library(maptools)library(rgdal)library(sp)#读取数据--------------------------------------------------data5=list.files(pattern = "5*.csv$")#汇总数据-------------------------------------------------for (j in 1:length(data5)) {   datacsv=read.csv(data5[j],header = F)   id=datacsv[1,1]   longitude=datacsv[1,2]   latitude=datacsv[1,3]   SumTem=sum(datacsv[,8])#计算该站点所有年月份的气温总和   datacsv=matrix(c(id,longitude,latitude,SumTem),1)   write.table(datacsv,              "result/sitelocation.csv",              sep = "," ,              append=T,              row.names = F,              col.names = F)}#添加列名----------------------------------------------------resultdata=read.csv("result/sitelocation.csv",header = F)names(resultdata)<-c("site","Lat","Lon","tem")write.table(resultdata,"result/sitelocation.csv",sep = "," ,append=F,row.names = F)#生成shp文件-------------------------------------------------resultdata=read.csv("result/sitelocation.csv",header = T)coordinates(resultdata)<-~Lon+Latproj4string(resultdata)<-CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")writeOGR(resultdata,         dsn = "B:/Temp3/test1/result",#设置输出路径         layer = "result",#设置保存名称         driver = "ESRI Shapefile",#设置输出类型         overwrite_layer = T) #是否覆盖)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>proj4坐标系网站：</p><ul><li><a href="https://spatialreference.org/" target="_blank" rel="noopener">https://spatialreference.org/</a></li><li><a href="https://spatialreference.org/ref/sr-org/8909/proj4/" target="_blank" rel="noopener">https://spatialreference.org/ref/sr-org/8909/proj4/</a></li></ul></blockquote><p><strong>P.S 生成shp文件时，尽量不要用汉字列名<del>不要用汉字</del>不要用汉字~</strong></p><p><strong>特别是设置其坐标参考系参数的时候~</strong></p><h3 id="结果环境及成果"><a href="#结果环境及成果" class="headerlink" title="结果环境及成果"></a>结果环境及成果</h3><p>运行汇总的所有气温数据均放在一个csv中，并将shp文件放在同目录下，运行结果环境如下👇</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/%E5%85%AD20200331001707.png" alt=""></p><p>shp文件</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/%E5%85%AD20200331002003.png" alt=""></p><p>:sunny::sunny::sunny:</p><p><strong>WelcomToMyBlog</strong></p><p><strong>欢迎光临我的网站</strong>:<a href="https://lishiyu.vip">https://lishiyu.vip</a></p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> 气象数据批处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggplot</title>
      <link href="/2020/03/18/ggplot/"/>
      <url>/2020/03/18/ggplot/</url>
      
        <content type="html"><![CDATA[<h1 id="玫瑰图"><a href="#玫瑰图" class="headerlink" title="玫瑰图"></a>玫瑰图</h1><h2 id="他山之石"><a href="#他山之石" class="headerlink" title="他山之石"></a>他山之石</h2><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/ggplotTest2.png" alt=""></p><h3 id="R实现"><a href="#R实现" class="headerlink" title="R实现"></a>R实现</h3><pre class="line-numbers language-R"><code class="language-R">rm(list = ls())setwd("A:/学习材料/R/COG玫瑰图")library(ggplot2)#read.table()--------------------------------------#读取数据，seq（3）sep#分开数据的分隔符。默认sep=""。#read.table()函数可以将1个或多个空格、tab制表符、换行符或回车符作为分隔符。f<-read.table("cog_lab", header=T, sep="\t")#展示数据f#as.vetor()----------------------------------------#is.vector(A)：判断A是否为向量；#as.vector(A)：如A是矩阵（数组），as.vector就是将矩阵转化为向量；myLabel = as.vector(f$lab)#添加百分比！(๑•̀ㅂ•́)و✧myLabel = paste(myLabel, " (", round(f$mag / sum(f$mag) * 100, 2), "%) ", sep = "")p<-ggplot(f,          aes(x=dir,y=factor(mag),fill=dir)          )+  ## y轴数据直接来自于原始数据框  geom_bar(stat='identity')+  #极坐标转换：可以做出蜘蛛图或饼图的效果。若不设置则默认柱状图  coord_polar()+  #标注  labs(x = "",       y = "Number of Unigenes",       title = "COG Function Classification of Unigene Sequence")+  #axis.ticks坐标轴刻度线---------------------  theme(axis.ticks = element_blank())+  #图例标题-----------------------------------  theme(legend.title = element_blank())+  #面板背景-----------------------------------  theme(panel.background=element_blank())+  #设置颜色标尺  #breaks设置中断  #cairo 是一个让用于提供矢量图形绘图的免费库  scale_fill_discrete(breaks = f$dir,                      labels = myLabel                      )png("Test1.png",width = 8200,height = 5400,res = 600,type = "cairo")pdev.off()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="控制台及实验数据"><a href="#控制台及实验数据" class="headerlink" title="控制台及实验数据"></a>控制台及实验数据</h3><p>数据已通过 <strong>f</strong> 展示出来。也可以CSV、excel输入。</p><blockquote><p>fir为指标</p><p>mag为数据</p><p>lab为标签</p></blockquote><pre><code>&gt; rm(list = ls())&gt; setwd("A:/学习材料/R/COG玫瑰图")&gt; library(ggplot2)&gt; &gt; #read.table()--------------------------------------&gt; #读取数据，seq（3）sep&gt; #分开数据的分隔符。默认sep=""。&gt; #read.table()函数可以将1个或多个空格、tab制表符、换行符或回车符作为分隔符。&gt; f&lt;-read.table("cog_lab", header=T, sep="\t")&gt; #展示数据&gt; f   dir mag                                                             lab1    A   4                             [A] RNA processing and modification2    B  10                            [B] Chromatin structure and dynamics3   C   42                            [C] Energy production and conversion4    D   8    [D] Cell cycle control cell division chromosome partitioning5    E  38                         [E] Amino acid transport and metabolism6    F  20                         [F] Nucleotide transport and metabolism7    G  16                       [G] Carbohydrate transport and metabolism8    H   8                           [H] Coenzyme transport and metabolism9    I  27                              [I] Lipid transport and metabolism10   J  45              [J] Translation ribosomal structure and biogenesis11   K  30                                               [K] Transcription12   L  31                        [L] Replication recombination and repair13   M   9                      [M] Cell wall/membrane/envelope biogenesis14   N   1                                               [N] Cell motility15   O  55  [O] Posttranslational modification protein turnover chaperones16   P  17                      [P] Inorganic ion transport and metabolism17   Q  28 [Q] Secondary metabolites biosynthesis transport and catabolism18   R 110                            [R] General function prediction only19   S   7                                            [S] Function unknown20   T  36                              [T] Signal transduction mechanisms21   U  18 [U] Intracellular trafficking secretion and vesicular transport22   V   3                                          [V] Defense mechanisms23   Y   1                                           [Y] Nuclear structure24   Z  10                                                [Z] Cytoskeleton&gt; &gt; #as.vetor()----------------------------------------&gt; #is.vector(A)：判断A是否为向量；&gt; #as.vector(A)：如A是矩阵（数组），as.vector就是将矩阵转化为向量；&gt; myLabel = as.vector(f$lab)&gt; &gt; #添加百分比！(๑•̀ㅂ•́)و✧&gt; myLabel = paste(myLabel, " (", round(f$mag / sum(f$mag) * 100, 2), "%) ", sep = "")&gt; &gt; p&lt;-ggplot(f,+           aes(x=dir,y=factor(mag),fill=dir)+           )++   +   ## y轴数据直接来自于原始数据框+   geom_bar(stat='identity')++   #极坐标转换：可以做出蜘蛛图或饼图的效果。若不设置则默认柱状图+   coord_polar()++   +   #标注+   labs(x = "",+        y = "Number of Unigenes",+        title = "COG Function Classification of Unigene Sequence")++   +   #axis.ticks坐标轴刻度线---------------------+   theme(axis.ticks = element_blank())++   #图例标题-----------------------------------+   theme(legend.title = element_blank())++   #面板背景-----------------------------------+   theme(panel.background=element_blank())++   +   #设置颜色标尺+   #breaks设置中断+   #cairo 是一个让用于提供矢量图形绘图的免费库+   scale_fill_discrete(breaks = f$dir,+                       labels = myLabel+                       )&gt; png("Test2.png",width = 8200,height = 5400,res = 600,type = "cairo")&gt; p&gt; dev.off()null device           1 </code></pre><h3 id="其中涉及到的函数"><a href="#其中涉及到的函数" class="headerlink" title="其中涉及到的函数"></a>其中涉及到的函数</h3><p>round控制小数点位数函数、有效数字倍数signif、设定种子数、……</p><pre class="line-numbers language-R"><code class="language-R">#round控制小数点位数函数-----x=3.1415926round(x,3)y=0.000000000013round(y,3)#有效数字倍数signif----y=0.0000000000133signif(y,3)#ggplot2提供了22个填充色设置的标尺函数（线条颜色也一样）ls("package:ggplot2", pattern="^scale_fill.+")#设定种子数------------------------------------------------------#种子是为了让结果具有重复性。如果不设定种子，生成的随机数无法重现。set.seed(100)rm(list = ls())#在不设定种子数的情况下，随机生成的数不会重复。------------r=rnorm(10)#随机生成10个随机数rr=rnorm(10)#再随机生成10个随机数r#设定了种子数后，会重复----------------------------------set.seed(5)m=rnorm(10)#再随机生成10个随机数mset.seed(5)#必须再设一次，数字相同则会产生相同的随机数。****n=rnorm(10)n#括号里的数字可以是任意数字，相同数字会得到相同的随机数结果。****? scale_fill_discrete()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出</p><pre class="line-numbers language-R"><code class="language-R">> #round控制小数点位数函数-----> x=3.1415926> round(x,3)[1] 3.142> > y=0.000000000013> round(y,3)[1] 0> #有效数字倍数signif----> y=0.0000000000133> signif(y,3)[1] 1.33e-11> > > #ggplot2提供了22个填充色设置的标尺函数（线条颜色也一样）> ls("package:ggplot2", pattern="^scale_fill.+") [1] "scale_fill_binned"     "scale_fill_brewer"     "scale_fill_continuous" [4] "scale_fill_date"       "scale_fill_datetime"   "scale_fill_discrete"   [7] "scale_fill_distiller"  "scale_fill_fermenter"  "scale_fill_gradient"  [10] "scale_fill_gradient2"  "scale_fill_gradientn"  "scale_fill_grey"      [13] "scale_fill_hue"        "scale_fill_identity"   "scale_fill_manual"    [16] "scale_fill_ordinal"    "scale_fill_steps"      "scale_fill_steps2"    [19] "scale_fill_stepsn"     "scale_fill_viridis_b"  "scale_fill_viridis_c" [22] "scale_fill_viridis_d" > >> #设定种子数----------------------------------------------------------> #种子是为了让结果具有重复性。如果不设定种子，生成的随机数无法重现。> set.seed(100)> > rm(list = ls())> #在不设定种子数的情况下，随机生成的数不会重复。----------> r=rnorm(10)#随机生成10个随机数> r [1] -0.50219235  0.13153117 -0.07891709  0.88678481  0.11697127  0.31863009 [7] -0.58179068  0.71453271 -0.82525943 -0.35986213> r=rnorm(10)#再随机生成10个随机数> r [1]  0.08988614  0.09627446 -0.20163395  0.73984050  0.12337950 -0.02931671 [7] -0.38885425  0.51085626 -0.91381419  2.31029682> #设定了种子数后，会重复-----------------------------------> set.seed(5)> m=rnorm(10)#再随机生成10个随机数> m [1] -0.84085548  1.38435934 -1.25549186  0.07014277  1.71144087 -0.60290798 [7] -0.47216639 -0.63537131 -0.28577363  0.13810822> set.seed(5)#必须再设一次，数字相同则会产生相同的随机数。****> n=rnorm(10)> n [1] -0.84085548  1.38435934 -1.25549186  0.07014277  1.71144087 -0.60290798 [7] -0.47216639 -0.63537131 -0.28577363  0.13810822> #括号里的数字可以是任意数字，相同数字会得到相同的随机数结果。****<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="清爽版-无注释"><a href="#清爽版-无注释" class="headerlink" title="清爽版(无注释)"></a>清爽版(无注释)</h3><pre class="line-numbers language-R"><code class="language-R">rm(list = ls())setwd("A:/学习材料/R/COG玫瑰图")library(ggplot2)f<-read.table("cog_lab", header=T, sep="\t")fmyLabel = as.vector(f$lab)myLabel = paste(myLabel, " (", round(f$mag / sum(f$mag) * 100, 2), "%) ", sep = "")p<-ggplot(f,aes(x=dir,y=factor(mag),fill=dir))+geom_bar(stat='identity')+coord_polar()+labs(x = "",       y = "Number of Unigenes",       title = "COG Function Classification of Unigene Sequence")+  theme(axis.ticks = element_blank())+  theme(legend.title = element_blank())+  theme(panel.background=element_blank())+  scale_fill_discrete(breaks = f$dir,labels = myLabel)png("COG.png",width = 8200,height = 5400,res = 600,type = "cairo")pdev.off()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> ggplot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArcGIS编辑器及其高级编辑</title>
      <link href="/2020/03/16/arcgis-bian-ji-qi-ji-qi-gao-ji-bian-ji/"/>
      <url>/2020/03/16/arcgis-bian-ji-qi-ji-qi-gao-ji-bian-ji/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h2><p><strong>之前被这工具搞得死去活来</strong>，特别是高级编辑工具<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">😭</span>，这次主要是填坑<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f573.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f573.png?v8">🕳</span> <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f624.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f624.png?v8">😤</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4a2.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a2.png?v8">💢</span></p><p>当然，还没完全填完……</p><h2 id="一、编辑器-hammer-and-wrench"><a href="#一、编辑器-hammer-and-wrench" class="headerlink" title="一、编辑器:hammer_and_wrench:"></a>一、编辑器<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f6e0.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6e0.png?v8">🛠</span></h2><h3 id="移动点工具"><a href="#移动点工具" class="headerlink" title="移动点工具"></a>移动点工具</h3><p><strong>相对移动</strong>，指定x、y坐标的增量。省略不写。</p><h3 id="分割工具"><a href="#分割工具" class="headerlink" title="分割工具"></a>分割工具</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E5%88%86%E5%89%B2.gif" alt=""></p><h3 id="构造点工具"><a href="#构造点工具" class="headerlink" title="构造点工具"></a>构造点工具</h3><p><strong>需要的要素：</strong></p><ol><li>线</li><li>点(用于存放点，总得有个落脚的地方吧~)</li></ol><p><strong>步骤：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E6%9E%84%E9%80%A0%E7%82%B9.gif" alt=""></p><h3 id="平行复制工具"><a href="#平行复制工具" class="headerlink" title="平行复制工具"></a>平行复制工具</h3><p>①选中线</p><p>②选择平行复制工具</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E5%B9%B3%E8%A1%8C%E5%A4%8D%E5%88%B6.gif" alt=""></p><h3 id="整型要素工具"><a href="#整型要素工具" class="headerlink" title="整型要素工具"></a>整型要素工具</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E6%95%B4%E5%9E%8B%E8%A6%81%E7%B4%A0%E5%B7%A5%E5%85%B7.gif" alt=""></p><h3 id="裁剪面工具"><a href="#裁剪面工具" class="headerlink" title="裁剪面工具"></a>裁剪面工具</h3><p>①选中所要切割的面要素</p><p>②选择裁剪面工具</p><p>③进行裁剪</p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/270c.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/270c.png?v8">✌</span></p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E8%A3%81%E5%89%AA%E9%9D%A2%E5%B7%A5%E5%85%B7.gif" alt=""></p><h4 id="沿其他要素边界追踪裁剪面"><a href="#沿其他要素边界追踪裁剪面" class="headerlink" title="沿其他要素边界追踪裁剪面"></a>沿其他要素边界追踪裁剪面</h4><p>奇怪的知识增加了<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png?v8">🌟</span></p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E8%A3%81%E5%89%AA%E9%9D%A2%E5%B7%A5%E5%85%B71.gif" alt=""></p><h3 id="分割工具-1"><a href="#分割工具-1" class="headerlink" title="分割工具"></a>分割工具</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E5%88%86%E5%89%B2%E5%B7%A5%E5%85%B7.gif" alt=""></p><hr><h2 id="二、高级编辑-full-moon-with-face"><a href="#二、高级编辑-full-moon-with-face" class="headerlink" title="二、高级编辑:full_moon_with_face:"></a>二、高级编辑<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f31d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31d.png?v8">🌝</span></h2><h3 id="复制要素工具"><a href="#复制要素工具" class="headerlink" title="复制要素工具"></a>复制要素工具</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E5%A4%8D%E5%88%B6%E8%A6%81%E7%B4%A0%E5%B7%A5%E5%85%B7.gif" alt=""></p><h3 id="内圆角工具-star2"><a href="#内圆角工具-star2" class="headerlink" title="内圆角工具:star2:"></a>内圆角工具<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png?v8">🌟</span></h3><p><strong>神奇的发现，神奇的工具</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E5%86%85%E5%9C%86%E8%A7%92%E5%B7%A5%E5%85%B7.gif" alt=""></p><h3 id="延伸工具"><a href="#延伸工具" class="headerlink" title="延伸工具"></a>延伸工具</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E5%BB%B6%E4%BC%B8%E5%B7%A5%E5%85%B7.gif" alt=""></p><h3 id="修剪工具"><a href="#修剪工具" class="headerlink" title="修剪工具"></a>修剪工具</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E4%BF%AE%E5%89%AA%E5%B7%A5%E5%85%B7.gif" alt=""></p><h3 id="线相交-坑还在-cry"><a href="#线相交-坑还在-cry" class="headerlink" title="线相交(坑还在:cry: )"></a>线相交(坑还在<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8">😢</span> )</h3><h3 id="构造大地要素"><a href="#构造大地要素" class="headerlink" title="构造大地要素"></a>构造大地要素</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E5%A4%A7%E5%9C%B0.gif" alt=""></p><h3 id="对齐至形状-sob"><a href="#对齐至形状-sob" class="headerlink" title="对齐至形状:sob:"></a>对齐至形状<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">😭</span></h3><p>……</p><h3 id="替换几何工具"><a href="#替换几何工具" class="headerlink" title="替换几何工具"></a>替换几何工具</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E6%9B%BF%E6%8D%A2%E5%87%A0%E4%BD%95%E5%B7%A5%E5%85%B7.gif" alt=""></p><h3 id="构造面"><a href="#构造面" class="headerlink" title="构造面"></a>构造面</h3><h4 id="线要素未完全封闭状态"><a href="#线要素未完全封闭状态" class="headerlink" title="线要素未完全封闭状态"></a>线要素未完全封闭状态</h4><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E6%9E%84%E9%80%A0%E9%9D%A20.gif" alt=""></p><h4 id="线要素完全封闭状态"><a href="#线要素完全封闭状态" class="headerlink" title="线要素完全封闭状态"></a>线要素完全封闭状态</h4><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E6%9E%84%E9%80%A0%E9%9D%A21.gif" alt=""></p><h3 id="分割面"><a href="#分割面" class="headerlink" title="分割面"></a>分割面</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R/arcgis%E7%BC%96%E8%BE%91%E5%99%A8%E5%88%86%E5%89%B2%E9%9D%A2.gif" alt=""></p><h3 id="打断相交线-tired-face"><a href="#打断相交线-tired-face" class="headerlink" title="打断相交线:tired_face:"></a><strong>打断相交线</strong><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f62b.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62b.png?v8">😫</span></h3><p>……</p><h2 id="ScreenToGif-film-projector"><a href="#ScreenToGif-film-projector" class="headerlink" title="ScreenToGif:film_projector:"></a><strong>ScreenToGif<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4fd.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4fd.png?v8">📽</span></strong></h2><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/octocat.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/octocat.png?v8"> </span></p><p>力推ScreenToGif，很棒的GIF录制软件</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ArcGIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>区域填充算法</title>
      <link href="/2020/03/14/qu-yu-tian-chong-suan-fa/"/>
      <url>/2020/03/14/qu-yu-tian-chong-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="一、区域填充算法"><a href="#一、区域填充算法" class="headerlink" title="一、区域填充算法"></a>一、区域填充算法</h1><h2 id="分为两大类："><a href="#分为两大类：" class="headerlink" title="分为两大类："></a><strong>分为两大类：</strong></h2><h3 id="1、种子填色算法-Seed-Filling"><a href="#1、种子填色算法-Seed-Filling" class="headerlink" title="1、种子填色算法(Seed Filling)"></a>1、种子填色算法(Seed Filling)</h3><blockquote><p>这类算法建立在多边形边边界的图象形式数据之上，并还需提供多边形界内一点的坐标。所以，它一般只能用于人机交互填色，而难以用于程序填色。</p></blockquote><p>GIS中用于栅格填色</p><h3 id="2、扫描线填色算法-Scan-Line-Filling"><a href="#2、扫描线填色算法-Scan-Line-Filling" class="headerlink" title="2、扫描线填色算法(Scan-Line Filling)"></a>2、扫描线填色算法(Scan-Line Filling)</h3><blockquote><p>这类算法建立在多边形边边界的矢量形式数据之上，可用于程序填色，也可用交互填色。</p></blockquote><hr><h1 id="二、种子填色算法-Seed-Filling"><a href="#二、种子填色算法-Seed-Filling" class="headerlink" title="二、种子填色算法(Seed Filling)"></a>二、种子填色算法(Seed Filling)</h1><blockquote><p>种子填色又称边界填色（Boundary Filling）。</p><p>它的功能是：给出多边形光栅化后的边界位置及边界色代码boundary，以及多边形之内的一点x, y位置，要求将颜色color填满多边形。 </p></blockquote><h2 id="算法分类"><a href="#算法分类" class="headerlink" title="算法分类"></a>算法分类</h2><p>分为四邻法（4-connected）和八邻法。 </p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6foureight.JPG" alt=""></p><h3 id="C-实现"><a href="#C-实现" class="headerlink" title="C#实现"></a>C#实现</h3><p>种子填充更适合用于栅格像元填色，知识有限。暂且用GDL+的矢量像元代替。</p><h4 id="算法流程思路"><a href="#算法流程思路" class="headerlink" title="算法流程思路"></a>算法流程思路</h4><p>:satisfied:自认为很棒的思路哈哈哈~:laughing:</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2Seed%E6%B5%81%E7%A8%8B.jpg" alt=""></p><h4 id="代码实现-很巧-qi-妙-pa-的思路-relieved"><a href="#代码实现-很巧-qi-妙-pa-的思路-relieved" class="headerlink" title="代码实现(很巧(qi)妙(pa)的思路 :relieved: )"></a>代码实现(很巧(qi)妙(pa)的思路 :relieved: )</h4><h5 id="重要参数"><a href="#重要参数" class="headerlink" title="重要参数"></a>重要参数</h5><ol><li><p>需要填充颜色的图形的边界颜色:rainbow:</p></li><li><p>需要填充的颜色是什么:rainbow:</p></li><li><p>种子点，即填充图形内部中尚未填充颜色的任意一点，也是填充的起始点。:eight_pointed_black_star:</p><p>(星星之火:fire:可以燎原呐~ )</p></li></ol><h5 id="具体思路"><a href="#具体思路" class="headerlink" title="具体思路"></a>具体思路</h5><p>利用中点画圆算法(中点画圆算法文章中已详细阐述)，画两个圆。</p><ul><li>第一个圆为目标填充圆，即，需要填充颜色的圆。</li><li>第二个圆为取色圆，取其边界颜色，将其作为第一个圆填充的颜色。</li></ul><p>其实要定义第一个圆的填充颜色，亦可用交互方式来定义，即用户自定义颜色。有点麻烦，不想搞那么花里胡哨的了。</p><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><p>硬核算法部分</p><pre class="line-numbers language-c#"><code class="language-c#">using System.Drawing;namespace scan{    partial class Form1    {        public static void seedfill(Color boundcolor,Point pointseed,Color fillcolor,Bitmap bitmap)        {            //取出种子点(需要填充的图形边界内一点)的颜色            Color c = bitmap.GetPixel(pointseed.X, pointseed.Y);            //四邻法，对种子点的颜色进行判断。            if (c!=fillcolor && c!=boundcolor)            {                bitmap.SetPixel(pointseed.X, pointseed.Y, fillcolor);                seedfill(boundcolor, new Point(pointseed.X, pointseed.Y + 1), fillcolor, bitmap);                seedfill(boundcolor, new Point(pointseed.X, pointseed.Y - 1), fillcolor, bitmap);                seedfill(boundcolor, new Point(pointseed.X + 1, pointseed.Y), fillcolor, bitmap);                seedfill(boundcolor, new Point(pointseed.X - 1, pointseed.Y), fillcolor, bitmap);            }        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用部分</p><pre class="line-numbers language-c#"><code class="language-c#">using System;using System.Drawing;using System.Windows.Forms;namespace scan{    public partial class Form1 : Form    {        Graphics graphics;        Bitmap bitmap;        public Form1()        {            InitializeComponent();            graphics = panel1.CreateGraphics();            bitmap = new Bitmap(panel1.Width, panel1.Height);        }        private void ButtonDraw_Click(object sender, EventArgs e)        {            //第一个圆为填充图形            circle(100, 100, 30, Color.Red);            //第二个圆为取色图形            circle(290, 200, 10, Color.Blue);            graphics.DrawImage(bitmap, 0, 0, bitmap.Width, bitmap.Height);        }        private void ButtonFill_Click(object sender, EventArgs e)        {            //填充开始的点(种子点)，为第一个圆的圆心。            Point point = new Point(100, 100);            //参数1图形边界颜色：取点(100,90)。            //参数2开始填充的种子点：point(100,100).其为圆心。            //参数3想要填充的颜色：取自第二个圆的边界颜色，即点(200,190)。            //参数4在bitmap上进行操作。            seedfill(bitmap.GetPixel(100, 70), point, bitmap.GetPixel(290, 190), bitmap);            graphics.DrawImage(bitmap, 0, 0, bitmap.Width, bitmap.Height);        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>hhhhhh……</p><h5 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h5><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C0.gif" alt=""></p><h2 id="sunglasses"><a href="#sunglasses" class="headerlink" title=":sunglasses:"></a><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span></h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 计算机图形学 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
            <tag> C# </tag>
            
            <tag> 种子填色 </tag>
            
            <tag> 扫描线填色 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中点画圆算法</title>
      <link href="/2020/03/04/zhong-dian-hua-yuan-suan-fa/"/>
      <url>/2020/03/04/zhong-dian-hua-yuan-suan-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="一、中点画圆法"><a href="#一、中点画圆法" class="headerlink" title="一、中点画圆法"></a>一、中点画圆法</h2><h3 id="1、算法分析"><a href="#1、算法分析" class="headerlink" title="1、算法分析"></a>1、算法分析</h3><p>利用圆的对称性，只须讨论1/8圆。</p><p>开局一张图:smile:</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDAyuan.JPG" alt=""></p><p>P为当前点亮象素，那么，下一个点亮的象素可能是P1（Xi+1，Yi）或P2（Xi +1，Yi -1)。</p><blockquote><p>构造函数：</p><p>F（X，Y）=X2 + Y2 - R2 ；则</p><p>F（X，Y）= 0 （X，Y）在圆上；</p><p>F（X，Y）&lt; 0 （X，Y）在圆内；</p><p>F（X，Y）&gt; 0 （X，Y）在圆外。</p><p>设M为P1、P2间的中点，M=(Xi+1,Yi-1/2)</p><p>有如下结论：</p><p> F（M）&lt; 0 → M在圆内 取P1</p><p> F（M）&gt;= 0 → M在圆外 取P2</p></blockquote><blockquote><p>为此，可采用如下判别式： </p><p>di = F(M) = F (xi + 1,yi – 1/2)</p><p>​        =(xi + 1)2 + (yi - 1/2) 2 - R2 </p><p>若d&lt;0, 则P1 为下一个象素，那么再下一个象素的判别式为：</p><p>​     di+1 = F (xi + 2, yi – 1/2)</p><p>​       = (xi + 2)2 + (yi - 1/2) 2 - R2</p><p>​             = di + 2xi +3</p><p>  即di 的增量为 2xi +3.</p><p>  若d&gt;=0, 则P2 为下一个象素，那么再下一个象素的判别式为：</p><p>​    di = F (xi + 2, yi – 3/2)</p><p>​       = (xi + 2)2 + (yi – 3/2) 2 - R2</p><p>​           = di + （2xi + 3）+（-2 yi + 2）</p><p>  即di的增量为 2 (xi - yi) +5.</p><p>  di的初值:</p><p>  d0 = F(1, R-1/2)</p><p>​     = 1 + (R-1/2)2 - R2</p><p>​     = 1/4 - R</p></blockquote><h3 id="2、算法实现C"><a href="#2、算法实现C" class="headerlink" title="2、算法实现C#"></a>2、算法实现C#</h3><h4 id="①代码结构"><a href="#①代码结构" class="headerlink" title="①代码结构"></a>①代码结构</h4><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E7%AE%A1%E7%90%86%E5%99%A8.JPG" alt=""></p><h4 id="star-②算法部分-star"><a href="#star-②算法部分-star" class="headerlink" title=":star:②算法部分:star:"></a>:star:②算法部分:star:</h4><pre class="line-numbers language-c#"><code class="language-c#">using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Drawing;using System.Linq;using System.Text;using System.Threading.Tasks;using System.Windows.Forms;namespace DDABresenham{    public partial class MainForm : Form    {        public void Circle(int x0,int y0,int r,Color color)        {            int x, y, p;//x、y为动态坐标，p为判别式            x = 0;            y = r;//初始化            p = 1 / 4 - r;//2的整数次幂，对计算机来说很“简单”，1/4不足道也            drawponits(x0, y0, x, y, color);            while (x<=y)//当为True，为b系            {                x++;                if (p<0)//真正圆上的点处于中点上方，y无增量                {                    p+=2*x + 3;                }                else //真正圆上的点处于中点下方，y-1                {                    p+=2*(x - y) + 5;                    y--;                }                drawponits(x0, y0, x, y, color);            }        }        public void drawponits(int x0,int y0,int x,int y,Color color)        {            #region 同时画八个象限的点            bitmap.SetPixel(x0 + x, y0 + y, color);//1b            bitmap.SetPixel(x0 + y, y0 + x, color);//1a            bitmap.SetPixel(x0 - y, y0 + x, color);//2a            bitmap.SetPixel(x0 - x, y0 + y, color);//2b            bitmap.SetPixel(x0 - x, y0 - y, color);//3b            bitmap.SetPixel(x0 - y, y0 - x, color);//3a            bitmap.SetPixel(x0 + x, y0 - y, color);//4b            bitmap.SetPixel(x0 + y, y0 - x, color);//4a            #endregion        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="③实现部分"><a href="#③实现部分" class="headerlink" title="③实现部分"></a>③实现部分</h4><pre class="line-numbers language-c#"><code class="language-c#">using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Drawing;using System.Linq;using System.Text;using System.Threading.Tasks;using System.Windows.Forms;namespace DDABresenham{    public partial class MainForm : Form    {        Graphics graphics;        Bitmap bitmap;        public MainForm()        {            InitializeComponent();            graphics = panel1.CreateGraphics();            bitmap = new Bitmap(panel1.Width,panel1.Height);        }        private void buttonDDA_Click(object sender, EventArgs e)        {            DDA(300, 300, 800, 400, Color.Blue);//1a            graphics.DrawImage(bitmap,0,0,panel1.Width,panel1.Height);        }        private void buttonBresenham_Click(object sender, EventArgs e)        {            Bresenham(300, 300, 500, 500, Color.Red);//一象限对角线            Bresenham(300, 300, 100, 500, Color.Blue);//二象限对角线            Bresenham(300, 300, 100, 100, Color.Black);//三象限对角线            Bresenham(300, 300, 500, 100, Color.DarkOrange);//四象限对角线            Bresenham(300, 300, 300, 600, Color.Red);//向下            Bresenham(300, 300, 300, 100, Color.Blue);//2a            Bresenham(300, 300, 100, 300, Color.Black);//3a            Bresenham(300, 300, 500, 300, Color.Yellow);//4a            Bresenham(300, 300, 400, 500, Color.Green);//1b            Bresenham(300, 300, 250, 500, Color.Blue);//2b            Bresenham(300, 300, 250, 100, Color.Black);//3b            Bresenham(300, 300, 350, 100, Color.DarkBlue);//4b            Bresenham(300, 300, 500, 400, Color.Red);//1a            Bresenham(300, 300, 0, 400, Color.Blue);//2a            Bresenham(300, 300, 100, 250, Color.Black);//3a            Bresenham(300, 300, 500, 200, Color.Yellow);//4a            graphics.DrawImage(bitmap, 0, 0, panel1.Width, panel1.Height);        }        private void buttonExit_Click(object sender, EventArgs e)        {            Application.Exit();        }        private void buttoncircle_Click(object sender, EventArgs e)        {            Circle(300, 300, 200, Color.Red);            graphics.DrawImage(bitmap, 0, 0, panel1.Width, panel1.Height);        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、Visio流程图-cool-sparkles"><a href="#3、Visio流程图-cool-sparkles" class="headerlink" title="3、Visio流程图:cool::sparkles:"></a>3、Visio流程图<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f192.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f192.png?v8">🆒</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8">✨</span></h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDA%E4%B8%AD%E7%82%B9%E7%94%BB%E5%9C%86.jpg" alt=""></p><h3 id="4、运行结果-1"><a href="#4、运行结果-1" class="headerlink" title="4、运行结果:+1:"></a>4、运行结果:+1:</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDA%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.JPG" alt=""></p><hr><h2 id="二、圆弧扫描算法（未尝试）"><a href="#二、圆弧扫描算法（未尝试）" class="headerlink" title="二、圆弧扫描算法（未尝试）"></a>二、圆弧扫描算法（未尝试）</h2><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDA%E5%9C%86%E5%BC%A7.JPG" alt=""></p><hr><h2 id="三、角度DDA法（未尝试）"><a href="#三、角度DDA法（未尝试）" class="headerlink" title="三、角度DDA法（未尝试）"></a>三、角度DDA法（未尝试）</h2><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDA%E5%9C%86%E5%BC%A7.JPG" alt=""></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 计算机图形学 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
            <tag> DDA </tag>
            
            <tag> C# </tag>
            
            <tag> 中点画圆法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>直线Bresenham算法(2)</title>
      <link href="/2020/03/04/zhi-xian-bresenham-suan-fa/"/>
      <url>/2020/03/04/zhi-xian-bresenham-suan-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="一、经过改造的二维笛卡尔坐标系"><a href="#一、经过改造的二维笛卡尔坐标系" class="headerlink" title="一、经过改造的二维笛卡尔坐标系"></a>一、经过改造的二维笛卡尔坐标系</h2><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDAdk.JPG" alt=""></p><h2 id="二、算法分析"><a href="#二、算法分析" class="headerlink" title="二、算法分析"></a>二、算法分析</h2><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDAmmp.JPG" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDAfx2.JPG" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDAfx3.JPG" alt=""></p><h3 id="坐标规律"><a href="#坐标规律" class="headerlink" title="坐标规律"></a>坐标规律</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDA%E5%9D%90%E6%A0%87%E8%A7%84%E5%BE%8B.JPG" alt=""></p><h2 id="三、算法C-实现"><a href="#三、算法C-实现" class="headerlink" title="三、算法C#实现"></a>三、算法C#实现</h2><h3 id="1、代码"><a href="#1、代码" class="headerlink" title="1、代码"></a>1、代码</h3><h4 id="①方法"><a href="#①方法" class="headerlink" title="①方法"></a>①方法</h4><pre class="line-numbers language-c#"><code class="language-c#">using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Drawing;using System.Linq;using System.Text;using System.Threading.Tasks;using System.Windows.Forms;namespace DDABresenham{    public partial class MainForm : Form    {        public void Bresenham(int x1, int y1, int x2, int y2, Color color)        {            int x, y, dx, dy, p, const1, const2, inc, x11, x22, y11, y22;            dx = x2 - x1;            dy = y2 - y1;            //替换参数，更安全。            x11 = x1;            x22 = x2;            y11 = y1;            y22 = y2;            if (dx < 0)            {                if (dy > 0)                {                    inc = -1;                }                else                {                    inc = 1;                }            }            else            {                if (dy > 0)                {                    inc = 1;                }                else                {                    inc = -1;                }            }            if (Math.Abs(dx) > Math.Abs(dy))            {                if (dx < 0)                {                    int temp;                    temp = x11;                    x11 = x22;                    x22 = temp;                    temp = y11;                    y11 = y22;                    y22 = temp;                    dx = -dx;                    dy = -dy;                }                if (dy < 0)                {                    dy = -dy;                }                p = 2 * dy - dx;                const1 = 2 * dy;                const2 = 2 * (dy - dx);                x = x11;                y = y11;                bitmap.SetPixel(x, y, color);                while (x < x22)                {                    x++;                    if (p < 0)                    {                        p += const1;                    }                    else                    {                        y += inc;                        p += const2;                    }                    bitmap.SetPixel(x, y, color);                }            }            else            {                if (dy < 0)                {                    int temp;                    temp = x11;                    x11 = x22;                    x22 = temp;                    temp = y11;                    y11 = y22;                    y22 = temp;                    dx = -dx;                    dy = -dy;                }                if (dx < 0)                {                    dx = -dx;                }                p = 2 * dx - dy;                const1 = 2 * dx;                const2 = 2 * (dx - dy);                x = x11;                y = y11;                bitmap.SetPixel(x, y, color);                while (y < y22)                {                    y++;                    if (p < 0)                    {                        p += const1;                    }                    else                    {                        x += inc;                        p += const2;                    }                    bitmap.SetPixel(x, y, color);                }            }        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="②使用部分"><a href="#②使用部分" class="headerlink" title="②使用部分"></a>②使用部分</h4><pre class="line-numbers language-c#"><code class="language-c#">using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Drawing;using System.Linq;using System.Text;using System.Threading.Tasks;using System.Windows.Forms;namespace DDABresenham{    public partial class MainForm : Form    {        Graphics graphics;        Bitmap bitmap;        public MainForm()        {            InitializeComponent();            graphics = panel1.CreateGraphics();            bitmap = new Bitmap(panel1.Width,panel1.Height);        }        private void buttonDDA_Click(object sender, EventArgs e)        {            DDA(300, 300, 800, 400, Color.Blue);//1a            graphics.DrawImage(bitmap,0,0,panel1.Width,panel1.Height);        }        private void buttonBresenham_Click(object sender, EventArgs e)        {            Bresenham(300, 300, 500, 500, Color.Red);//一象限对角线            Bresenham(300, 300, 100, 500, Color.Blue);//二象限对角线            Bresenham(300, 300, 100, 100, Color.Black);//三象限对角线            Bresenham(300, 300, 500, 100, Color.DarkOrange);//四象限对角线            Bresenham(300, 300, 300, 600, Color.Red);//向下            Bresenham(300, 300, 300, 100, Color.Blue);//2a            Bresenham(300, 300, 100, 300, Color.Black);//3a            Bresenham(300, 300, 500, 300, Color.Yellow);//4a            Bresenham(300, 300, 400, 500, Color.Green);//1b            Bresenham(300, 300, 250, 500, Color.Blue);//2b            Bresenham(300, 300, 250, 100, Color.Black);//3b            Bresenham(300, 300, 350, 100, Color.DarkBlue);//4b            Bresenham(300, 300, 500, 400, Color.Red);//1a            Bresenham(300, 300, 0, 400, Color.Blue);//2a            Bresenham(300, 300, 100, 250, Color.Black);//3a            Bresenham(300, 300, 500, 200, Color.Yellow);//4a            graphics.DrawImage(bitmap, 0, 0, panel1.Width, panel1.Height);        }        private void buttonExit_Click(object sender, EventArgs e)        {            Application.Exit();        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="③程序结构"><a href="#③程序结构" class="headerlink" title="③程序结构"></a>③程序结构</h4><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDAjjfang.JPG" alt=""></p><h3 id="2、Visio流程图"><a href="#2、Visio流程图" class="headerlink" title="2、Visio流程图"></a>2、Visio流程图</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDAbrese.jpg" alt=""></p><h3 id="3、运行结果"><a href="#3、运行结果" class="headerlink" title="3、运行结果"></a>3、运行结果</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDAbrsenham.JPG" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 计算机图形学 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
            <tag> C# </tag>
            
            <tag> Bresenham </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arcpy</title>
      <link href="/2020/03/02/arcpy/"/>
      <url>/2020/03/02/arcpy/</url>
      
        <content type="html"><![CDATA[<h3 id="裁切"><a href="#裁切" class="headerlink" title="裁切"></a>裁切</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpyarcpy<span class="token punctuation">.</span>gp<span class="token punctuation">.</span>overwriteOutput<span class="token operator">=</span><span class="token number">1</span> <span class="token comment" spellcheck="true">#设置覆盖</span>input_f <span class="token operator">=</span> <span class="token string">'B:/Temp2/data/road.shp'</span>clip_f <span class="token operator">=</span> <span class="token string">'B:/Temp2/data/jjj.shp'</span>output_f <span class="token operator">=</span> <span class="token string">'B:/Temp2/data/clip.shp'</span>arcpy<span class="token punctuation">.</span>Clip_analysis<span class="token punctuation">(</span>input_f<span class="token punctuation">,</span> clip_f<span class="token punctuation">,</span> output_f<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token string">'done'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="裁剪"><a href="#裁剪" class="headerlink" title="裁剪"></a>裁剪</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpyarcpy<span class="token punctuation">.</span>gp<span class="token punctuation">.</span>overwriteOutput <span class="token operator">=</span> <span class="token number">1</span>arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> <span class="token string">"B:\\Temp2\\datas"</span>inputs_f <span class="token operator">=</span> arcpy<span class="token punctuation">.</span>ListFiles<span class="token punctuation">(</span><span class="token string">"*.shp"</span><span class="token punctuation">)</span><span class="token keyword">print</span> inputs_fclip_f <span class="token operator">=</span> <span class="token string">'B:Temp2/data/j.shp'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> inputs_f<span class="token punctuation">:</span>    name <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'ascii'</span><span class="token punctuation">)</span>    output_f <span class="token operator">=</span> <span class="token string">'B:Temp2/data/'</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">'_clip'</span><span class="token operator">+</span><span class="token string">'.shp'</span>    arcpy<span class="token punctuation">.</span>Clip_analysis<span class="token punctuation">(</span>inputs_f<span class="token punctuation">,</span> clip_f<span class="token punctuation">,</span> output_f<span class="token punctuation">,</span> <span class="token string">"#"</span><span class="token punctuation">)</span>  # 这一句是有问题的不能出输    <span class="token keyword">print</span> output_f<span class="token keyword">print</span> <span class="token string">'done'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arcpy </tag>
            
            <tag> ArcGIS </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Plot</title>
      <link href="/2020/02/25/plot/"/>
      <url>/2020/02/25/plot/</url>
      
        <content type="html"><![CDATA[<h2 id="Plot疫情示例"><a href="#Plot疫情示例" class="headerlink" title="Plot疫情示例"></a>Plot疫情示例</h2><pre class="line-numbers language-r"><code class="language-r">rm<span class="token punctuation">(</span>list <span class="token operator">=</span> ls<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>getwd<span class="token punctuation">(</span><span class="token punctuation">)</span>setwd<span class="token punctuation">(</span><span class="token string">"B:/Temp1"</span><span class="token punctuation">)</span>library<span class="token punctuation">(</span>readxl<span class="token punctuation">)</span>data<span class="token operator">=</span>read_xlsx<span class="token punctuation">(</span><span class="token string">"全国疫情整理-李世昱.xlsx"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#读取数据</span><span class="token comment" spellcheck="true">#自定义颜色和字体--------------------------------------</span><span class="token comment" spellcheck="true">#运行rainbow(n)可以获得n种彩虹色</span>rainbowcolor<span class="token operator">=</span>rainbow<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#自定义颜色生成彩虹七色</span>windowsFonts<span class="token punctuation">(</span>zhuanshu<span class="token operator">=</span>windowsFont<span class="token punctuation">(</span><span class="token string">"迷你繁篆书"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#更换运行环境，需要更改此字体，或下载此字体！</span><span class="token comment" spellcheck="true">#读取数据----------------------------------------------</span>time<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>data<span class="token operator">$</span>报道时间<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#读取时间数据，x轴</span>quezhen<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>data<span class="token operator">$</span>新增确诊<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#读取确诊人数数据，y轴数据</span>chuyuan<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>data<span class="token operator">$</span>新增出院<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#读取出院人数数据，y轴数据</span>siwang<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>data<span class="token operator">$</span>新增死亡<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#读取死亡人数数据，y轴数据</span><span class="token comment" spellcheck="true">#设置画布边距------------------------------------------</span>opar <span class="token operator">&lt;-</span> par<span class="token punctuation">(</span>no.readonly <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#开启自定义参数</span>par<span class="token punctuation">(</span>bty<span class="token operator">=</span><span class="token string">"u"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#bty: 控制坐标系风格 有l、7、c、u风格</span>par<span class="token punctuation">(</span><span class="token string">"mar"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#查看默认画布边距</span>par<span class="token punctuation">(</span>mar<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">5.4</span><span class="token punctuation">,</span><span class="token number">4.4</span><span class="token punctuation">,</span><span class="token number">4.4</span><span class="token punctuation">,</span><span class="token number">3.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#重新自定义边距</span><span class="token comment" spellcheck="true">#输出tiff图---------------------------------------------</span><span class="token comment" spellcheck="true">#LZW是一种无损压缩格式，不会丢失任何数据，但会减少文件大小</span>tiff<span class="token punctuation">(</span><span class="token string">"全国疫情变化.tif"</span><span class="token punctuation">,</span>height <span class="token operator">=</span> <span class="token number">2600</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">2850</span><span class="token punctuation">,</span>res <span class="token operator">=</span> <span class="token number">450</span><span class="token punctuation">,</span>unit<span class="token operator">=</span><span class="token string">"px"</span><span class="token punctuation">,</span>compression <span class="token operator">=</span> <span class="token string">"lzw"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#Plot函数画图-------------------------------------------</span>plot<span class="token punctuation">(</span>time<span class="token punctuation">,</span>     xaxt<span class="token operator">=</span><span class="token string">"n"</span><span class="token punctuation">,</span>      type <span class="token operator">=</span> <span class="token string">"o"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#点线的样式</span>     pch<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#点的样式,取值可以很大很大，会出现让人意想不到的情况，是一个神奇的参数。</span>     bg<span class="token operator">=</span><span class="token string">"red"</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">#节点背景色</span>     cex<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#折线节点点的大小</span>     lty<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#线的样式</span>     lwd<span class="token operator">=</span><span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#折线的粗细</span>     main <span class="token operator">=</span><span class="token string">"1月11日—2月24日全国疫情变化"</span><span class="token punctuation">,</span>     sub<span class="token operator">=</span><span class="token string">"Powered By李世?9?5  于2020/2/25晚"</span><span class="token punctuation">,</span>     xlab <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#x轴标题</span>     ylab <span class="token operator">=</span> <span class="token string">'人数'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#y轴标题</span>     family<span class="token operator">=</span><span class="token string">'zhuanshu'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#字体</span>     cex.main<span class="token operator">=</span><span class="token number">2.4</span><span class="token punctuation">,</span>cex.sub<span class="token operator">=</span><span class="token number">1.5</span><span class="token punctuation">,</span>cex.lab<span class="token operator">=</span><span class="token number">1.4</span><span class="token punctuation">,</span>cex.axis<span class="token operator">=</span><span class="token number">1.5</span><span class="token punctuation">,</span>     ylim<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>quezhen<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#设置y轴取值范围</span><span class="token comment" spellcheck="true">#补充</span>     <span class="token comment" spellcheck="true">#ann=TRUE,#禁用标题，使用了title()函数来自定义标题</span>     <span class="token comment" spellcheck="true">#frame.plot=FALSE, #隐藏框架线</span>     <span class="token comment" spellcheck="true">#xaxt='n', #隐藏X轴，会留下框架</span>     <span class="token comment" spellcheck="true">#axes=FALSE, #隐藏所有坐标轴及框架线</span><span class="token comment" spellcheck="true">#生成网格-----------------------------------------------------</span>grid<span class="token punctuation">(</span>nx<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>ny<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#画另外两条线-------------------------------------------------</span>lines<span class="token punctuation">(</span>time<span class="token punctuation">,</span>chuyuan<span class="token punctuation">,</span>type<span class="token operator">=</span><span class="token string">"o"</span><span class="token punctuation">,</span>pch<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span>col<span class="token operator">=</span>rainbowcolor<span class="token punctuation">,</span>lwd<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>cex<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#生成出院人数</span>lines<span class="token punctuation">(</span>time<span class="token punctuation">,</span>siwang<span class="token punctuation">,</span>type<span class="token operator">=</span><span class="token string">"o"</span><span class="token punctuation">,</span>pch<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span>col<span class="token operator">=</span><span class="token string">"red"</span><span class="token punctuation">,</span>lwd<span class="token operator">=</span><span class="token number">1.5</span><span class="token punctuation">,</span>cex<span class="token operator">=</span><span class="token number">0.6</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#生成死亡人数</span><span class="token comment" spellcheck="true">#添加确诊人数数字标注</span>txt <span class="token operator">&lt;-</span> text<span class="token punctuation">(</span>time<span class="token punctuation">,</span>quezhen<span class="token punctuation">,</span>as.character<span class="token punctuation">(</span>round<span class="token punctuation">(</span>quezhen<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cex <span class="token operator">=</span> <span class="token number">0.4</span><span class="token punctuation">,</span> pos <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token string">"red"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#添加垂直平行线-----------------------------------------------</span>abline<span class="token punctuation">(</span>v<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>h<span class="token operator">=</span><span class="token number">15196</span><span class="token punctuation">,</span>lty <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token string">"blue"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#添加矩形框---------------------------------------------------</span>rect<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">15796</span><span class="token punctuation">,</span>data<span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">14100</span><span class="token punctuation">,</span>border <span class="token operator">=</span> <span class="token string">"blue"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#添加检测标准变化文字标注-------------------------------------</span>text<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">14700</span><span class="token punctuation">,</span><span class="token string">'检测标准变化时间点'</span><span class="token punctuation">,</span>cex<span class="token operator">=</span><span class="token number">0.6</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#添加图例----------------------------------------------------</span>legend<span class="token punctuation">(</span><span class="token string">"topright"</span><span class="token punctuation">,</span>c<span class="token punctuation">(</span><span class="token string">"新增确诊"</span><span class="token punctuation">,</span><span class="token string">"新增出院"</span><span class="token punctuation">,</span><span class="token string">"新增死亡"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pch<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       col<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">"black"</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>bg<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">"black"</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>bty<span class="token operator">=</span><span class="token string">"n"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#添加x轴标签--------------------------------------------------</span><span class="token comment" spellcheck="true">#尚未成功过</span><span class="token comment" spellcheck="true">#区别于传统的x轴和y轴,axis允许在上,下,左,右4个方向添加轴线</span>xlabs<span class="token operator">&lt;-</span>substr<span class="token punctuation">(</span>time<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#提取x轴的日期标签列数据</span>x <span class="token operator">&lt;-</span> seq<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">)</span>axis<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>at<span class="token operator">=</span>x<span class="token punctuation">,</span>labels<span class="token operator">=</span>xlabs<span class="token punctuation">,</span>las<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#关闭---------------------------------------------------------</span>par<span class="token punctuation">(</span>opar<span class="token punctuation">)</span>dev.off<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="控制台Console输出"><a href="#控制台Console输出" class="headerlink" title="控制台Console输出"></a>控制台Console输出</h3><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> rm<span class="token punctuation">(</span>list <span class="token operator">=</span> ls<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> getwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1"</span><span class="token operator">></span> setwd<span class="token punctuation">(</span><span class="token string">"B:/Temp1"</span><span class="token punctuation">)</span><span class="token operator">></span> library<span class="token punctuation">(</span>readxl<span class="token punctuation">)</span><span class="token operator">></span> data<span class="token operator">=</span>read_xlsx<span class="token punctuation">(</span><span class="token string">"全国疫情整理-李世昱.xlsx"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#读取数据</span><span class="token operator">></span> data<span class="token comment" spellcheck="true"># A tibble: 43 x 4</span>   报道时间            新增确诊 新增出院 新增死亡   <span class="token operator">&lt;</span>dttm<span class="token operator">></span>                 <span class="token operator">&lt;</span>dbl<span class="token operator">></span>    <span class="token operator">&lt;</span>dbl<span class="token operator">></span>    <span class="token operator">&lt;</span>dbl<span class="token operator">></span> <span class="token number">1</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">11</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>       <span class="token number">41</span>        <span class="token number">2</span>        <span class="token number">1</span> <span class="token number">2</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>        <span class="token number">0</span>        <span class="token number">4</span>        <span class="token number">0</span> <span class="token number">3</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">13</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>        <span class="token number">0</span>        <span class="token number">1</span>        <span class="token number">0</span> <span class="token number">4</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">16</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>        <span class="token number">0</span>        <span class="token number">5</span>        <span class="token number">1</span> <span class="token number">5</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">17</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>        <span class="token number">2</span>        <span class="token number">0</span>        <span class="token number">0</span> <span class="token number">6</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">18</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>        <span class="token number">5</span>        <span class="token number">4</span>        <span class="token number">0</span> <span class="token number">7</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">19</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>       <span class="token number">17</span>        <span class="token number">4</span>        <span class="token number">0</span> <span class="token number">8</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">20</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>      <span class="token number">156</span>        <span class="token number">6</span>        <span class="token number">2</span> <span class="token number">9</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">21</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>      <span class="token number">103</span>        <span class="token number">0</span>        <span class="token number">2</span><span class="token number">10</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>      <span class="token number">231</span>        <span class="token number">5</span>       <span class="token number">11</span><span class="token comment" spellcheck="true"># ... with 33 more rows</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#自定义颜色和字体--------------------------------------</span><span class="token operator">></span> rainbowcolor<span class="token operator">=</span>rainbow<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#自定义颜色生成彩虹七色</span><span class="token operator">></span> windowsFonts<span class="token punctuation">(</span>zhuanshu<span class="token operator">=</span>windowsFont<span class="token punctuation">(</span><span class="token string">"迷你繁篆书"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#更换运行环境，需要更改此字体，或下载此字体！</span><span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">#读取数据----------------------------------------------</span><span class="token operator">></span> time<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>data<span class="token operator">$</span>报道时间<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#读取时间数据，x轴</span><span class="token operator">></span> quezhen<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>data<span class="token operator">$</span>新增确诊<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#读取确诊人数数据，y轴数据</span><span class="token operator">></span> chuyuan<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>data<span class="token operator">$</span>新增出院<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#读取出院人数数据，y轴数据</span><span class="token operator">></span> siwang<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>data<span class="token operator">$</span>新增死亡<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#读取死亡人数数据，y轴数据</span><span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">#设置画布边距------------------------------------------</span><span class="token operator">></span> opar <span class="token operator">&lt;-</span> par<span class="token punctuation">(</span>no.readonly <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#开启自定义参数</span><span class="token operator">></span> par<span class="token punctuation">(</span>bty<span class="token operator">=</span><span class="token string">"u"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#bty: 控制坐标系风格 有l、7、c、u风格</span><span class="token operator">></span> par<span class="token punctuation">(</span><span class="token string">"mar"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#查看默认画布边距</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">5.1</span> <span class="token number">4.1</span> <span class="token number">4.1</span> <span class="token number">2.1</span><span class="token operator">></span> par<span class="token punctuation">(</span>mar<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">5.4</span><span class="token punctuation">,</span><span class="token number">4.4</span><span class="token punctuation">,</span><span class="token number">4.4</span><span class="token punctuation">,</span><span class="token number">3.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#重新自定义边距</span><span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">#输出tiff图---------------------------------------------</span><span class="token operator">></span> tiff<span class="token punctuation">(</span><span class="token string">"全国疫情变化.tif"</span><span class="token punctuation">,</span>height <span class="token operator">=</span> <span class="token number">2600</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">2850</span><span class="token punctuation">,</span>res <span class="token operator">=</span> <span class="token number">450</span><span class="token punctuation">,</span>unit<span class="token operator">=</span><span class="token string">"px"</span><span class="token punctuation">,</span>compression <span class="token operator">=</span> <span class="token string">"lzw"</span><span class="token punctuation">)</span><span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">#Plot函数画图-------------------------------------------</span><span class="token operator">></span> plot<span class="token punctuation">(</span>time<span class="token punctuation">,</span><span class="token operator">+</span>      xaxt<span class="token operator">=</span><span class="token string">"n"</span><span class="token punctuation">,</span> <span class="token operator">+</span>      type <span class="token operator">=</span> <span class="token string">"o"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#点线的样式</span><span class="token operator">+</span>      pch<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#点的样式,取值可以很大很大，会出现让人意想不到的情况</span><span class="token operator">+</span>      bg<span class="token operator">=</span><span class="token string">"red"</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">#节点背景色</span><span class="token operator">+</span>      cex<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#折线节点点的大小</span><span class="token operator">+</span>      lty<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#线的样式</span><span class="token operator">+</span>      lwd<span class="token operator">=</span><span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#折线的粗细</span><span class="token operator">+</span>      main <span class="token operator">=</span><span class="token string">"1月11日—2月24日全国疫情变化"</span><span class="token punctuation">,</span><span class="token operator">+</span>      sub<span class="token operator">=</span><span class="token string">"Powered By李世?9?5  于2020/2/25晚"</span><span class="token punctuation">,</span><span class="token operator">+</span>      xlab <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#x轴标题</span><span class="token operator">+</span>      ylab <span class="token operator">=</span> <span class="token string">'人数'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#y轴标题</span><span class="token operator">+</span>      family<span class="token operator">=</span><span class="token string">'zhuanshu'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#字体</span><span class="token operator">+</span>      cex.main<span class="token operator">=</span><span class="token number">2.4</span><span class="token punctuation">,</span>cex.sub<span class="token operator">=</span><span class="token number">1.5</span><span class="token punctuation">,</span>cex.lab<span class="token operator">=</span><span class="token number">1.4</span><span class="token punctuation">,</span>cex.axis<span class="token operator">=</span><span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#文字大小</span><span class="token operator">+</span>      ylim<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>quezhen<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#设置y轴取值范围</span><span class="token operator">></span> <span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">#生成网格-----------------------------------------------------</span><span class="token operator">></span> grid<span class="token punctuation">(</span>nx<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>ny<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">#画另外两条线-------------------------------------------------</span><span class="token operator">></span> lines<span class="token punctuation">(</span>time<span class="token punctuation">,</span>chuyuan<span class="token punctuation">,</span>type<span class="token operator">=</span><span class="token string">"o"</span><span class="token punctuation">,</span>pch<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span>col<span class="token operator">=</span>rainbowcolor<span class="token punctuation">,</span>lwd<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>cex<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#生成出院人数</span><span class="token operator">></span> lines<span class="token punctuation">(</span>time<span class="token punctuation">,</span>siwang<span class="token punctuation">,</span>type<span class="token operator">=</span><span class="token string">"o"</span><span class="token punctuation">,</span>pch<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span>col<span class="token operator">=</span><span class="token string">"red"</span><span class="token punctuation">,</span>lwd<span class="token operator">=</span><span class="token number">1.5</span><span class="token punctuation">,</span>cex<span class="token operator">=</span><span class="token number">0.6</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#生成死亡人数</span><span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">#添加确诊人数数字标注</span><span class="token operator">></span> txt <span class="token operator">&lt;-</span> text<span class="token punctuation">(</span>time<span class="token punctuation">,</span>quezhen<span class="token punctuation">,</span>as.character<span class="token punctuation">(</span>round<span class="token punctuation">(</span>quezhen<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cex <span class="token operator">=</span> <span class="token number">0.4</span><span class="token punctuation">,</span> pos <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token string">"red"</span><span class="token punctuation">)</span><span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">#添加垂直平行线-----------------------------------------------</span><span class="token operator">></span> abline<span class="token punctuation">(</span>v<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>h<span class="token operator">=</span><span class="token number">15196</span><span class="token punctuation">,</span>lty <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token string">"blue"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">#添加矩形框---------------------------------------------------</span><span class="token operator">></span> rect<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">15796</span><span class="token punctuation">,</span>data<span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">14100</span><span class="token punctuation">,</span>border <span class="token operator">=</span> <span class="token string">"blue"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">#添加检测标准变化文字标注-------------------------------------</span><span class="token operator">></span> text<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">14700</span><span class="token punctuation">,</span><span class="token string">'检测标准变化时间点'</span><span class="token punctuation">,</span>cex<span class="token operator">=</span><span class="token number">0.6</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">#添加图例----------------------------------------------------</span><span class="token operator">></span> legend<span class="token punctuation">(</span><span class="token string">"topright"</span><span class="token punctuation">,</span>c<span class="token punctuation">(</span><span class="token string">"新增确诊"</span><span class="token punctuation">,</span><span class="token string">"新增出院"</span><span class="token punctuation">,</span><span class="token string">"新增死亡"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pch<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>        col<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">"black"</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>bg<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">"black"</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>bty<span class="token operator">=</span><span class="token string">"n"</span><span class="token punctuation">)</span><span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">#添加x轴标签--------------------------------------------------</span><span class="token comment" spellcheck="true">#尚未成功过</span><span class="token operator">></span> xlabs<span class="token operator">&lt;-</span>substr<span class="token punctuation">(</span>time<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#提取x轴的日期标签列数据</span><span class="token operator">></span> x <span class="token operator">&lt;-</span> seq<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">)</span><span class="token operator">></span> axis<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>at<span class="token operator">=</span>x<span class="token punctuation">,</span>labels<span class="token operator">=</span>xlabs<span class="token punctuation">,</span>las<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">#关闭---------------------------------------------------------</span><span class="token operator">></span> par<span class="token punctuation">(</span>opar<span class="token punctuation">)</span><span class="token operator">></span> dev.off<span class="token punctuation">(</span><span class="token punctuation">)</span>RStudioGD         <span class="token number">2</span> <span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="输出tiff"><a href="#输出tiff" class="headerlink" title="输出tiff"></a>输出tiff</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Ryiqing.JPG" alt=""></p><p><a href="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R全国疫情变化1.tif" target="_blank" rel="noopener">原图下载</a></p><p>数据来源：<a href="https://www.thepaper.cn/list_25635" target="_blank" rel="noopener">澎湃美数课</a>，个人认为他有着较好的数字可视化表达方式</p><h4 id="参数小说明"><a href="#参数小说明" class="headerlink" title="参数小说明"></a>参数小说明</h4><blockquote><p>#type = “p” ：点图<br>#type = “l” ：折线图,<br>#type = “b” ：既有点图又有折线，就叫它附点折线图吧<br>#type = “c” ：只画附点折线图线的那部分<br>#type = “o” ：重叠的附点折线图<br>#type = “h” ：垂直线图<br>#type = “s” ：阶梯图<br>#type = “S” ：另外一种阶梯图<br>#type = “n” ：不画图，只画出坐标</p><p>font.axis=2,设置坐标刻度字体，1常规字体，2加粗字体，3斜体字，4斜体加粗</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Rpchandlty.JPG" alt=""></p><h2 id="示例二"><a href="#示例二" class="headerlink" title="示例二"></a>示例二</h2><pre class="line-numbers language-r"><code class="language-r">x <span class="token operator">&lt;-</span> seq<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span>months <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token string">'一月'</span><span class="token punctuation">,</span><span class="token string">'二月'</span><span class="token punctuation">,</span><span class="token string">'三月'</span><span class="token punctuation">,</span><span class="token string">'四月'</span><span class="token punctuation">,</span><span class="token string">'五月'</span><span class="token punctuation">,</span><span class="token string">'六月'</span><span class="token punctuation">,</span><span class="token string">'七月'</span><span class="token punctuation">,</span><span class="token string">'八月'</span><span class="token punctuation">,</span><span class="token string">'九月'</span><span class="token punctuation">,</span><span class="token string">'十月'</span><span class="token punctuation">,</span><span class="token string">'十一月'</span><span class="token punctuation">,</span><span class="token string">'十二月'</span><span class="token punctuation">)</span>monthstypeof<span class="token punctuation">(</span>x<span class="token punctuation">)</span>typeof<span class="token punctuation">(</span>months<span class="token punctuation">)</span>Tokyo <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token number">7.0</span><span class="token punctuation">,</span><span class="token number">6.9</span><span class="token punctuation">,</span><span class="token number">9.5</span><span class="token punctuation">,</span><span class="token number">14.5</span><span class="token punctuation">,</span><span class="token number">18.2</span><span class="token punctuation">,</span><span class="token number">21.5</span><span class="token punctuation">,</span><span class="token number">25.2</span><span class="token punctuation">,</span><span class="token number">26.5</span><span class="token punctuation">,</span><span class="token number">23.3</span><span class="token punctuation">,</span><span class="token number">18.3</span><span class="token punctuation">,</span><span class="token number">13.9</span><span class="token punctuation">,</span><span class="token number">9.6</span><span class="token punctuation">)</span>New_York <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token operator">-</span>.<span class="token number">2</span><span class="token punctuation">,</span>.<span class="token number">8</span><span class="token punctuation">,</span><span class="token number">5.7</span><span class="token punctuation">,</span><span class="token number">11.3</span><span class="token punctuation">,</span><span class="token number">17.0</span><span class="token punctuation">,</span><span class="token number">22.0</span><span class="token punctuation">,</span><span class="token number">24.8</span><span class="token punctuation">,</span><span class="token number">24.1</span><span class="token punctuation">,</span><span class="token number">20.1</span><span class="token punctuation">,</span><span class="token number">14.1</span><span class="token punctuation">,</span><span class="token number">8.6</span><span class="token punctuation">,</span><span class="token number">2.5</span><span class="token punctuation">)</span>Berlin <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token operator">-</span>.<span class="token number">9</span><span class="token punctuation">,</span>.<span class="token number">6</span><span class="token punctuation">,</span><span class="token number">3.5</span><span class="token punctuation">,</span><span class="token number">8.4</span><span class="token punctuation">,</span><span class="token number">13.5</span><span class="token punctuation">,</span><span class="token number">17.0</span><span class="token punctuation">,</span><span class="token number">18.6</span><span class="token punctuation">,</span><span class="token number">17.9</span><span class="token punctuation">,</span><span class="token number">14.3</span><span class="token punctuation">,</span><span class="token number">9.0</span><span class="token punctuation">,</span><span class="token number">3.9</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span>London <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token number">3.9</span><span class="token punctuation">,</span><span class="token number">4.2</span><span class="token punctuation">,</span><span class="token number">5.7</span><span class="token punctuation">,</span><span class="token number">8.5</span><span class="token punctuation">,</span><span class="token number">11.9</span><span class="token punctuation">,</span><span class="token number">15.2</span><span class="token punctuation">,</span><span class="token number">17.0</span><span class="token punctuation">,</span><span class="token number">16.6</span><span class="token punctuation">,</span><span class="token number">14.2</span><span class="token punctuation">,</span><span class="token number">10.3</span><span class="token punctuation">,</span><span class="token number">6.6</span><span class="token punctuation">,</span><span class="token number">4.8</span><span class="token punctuation">)</span>Londonopar <span class="token operator">&lt;-</span> par<span class="token punctuation">(</span>no.readonly <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span>par<span class="token punctuation">(</span>bty<span class="token operator">=</span><span class="token string">"n"</span><span class="token punctuation">)</span>plot<span class="token punctuation">(</span>Tokyo<span class="token punctuation">,</span>     xaxt<span class="token operator">=</span><span class="token string">"n"</span><span class="token punctuation">,</span>     pch<span class="token operator">=</span><span class="token number">19</span><span class="token punctuation">,</span>type<span class="token operator">=</span><span class="token string">"b"</span><span class="token punctuation">,</span>     lwd<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>     main<span class="token operator">=</span><span class="token string">"月平均气温"</span><span class="token punctuation">,</span>     sub<span class="token operator">=</span><span class="token string">"Plotted by R Language"</span><span class="token punctuation">,</span>     ylim<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     col<span class="token operator">=</span><span class="token string">"blue"</span><span class="token punctuation">,</span>xlab<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">,</span>     ylab<span class="token operator">=</span><span class="token string">"Temperature(℃)"</span><span class="token punctuation">,</span>     axes<span class="token operator">=</span><span class="token boolean">FALSE</span><span class="token punctuation">)</span>lines<span class="token punctuation">(</span>New_York<span class="token punctuation">,</span>type<span class="token operator">=</span><span class="token string">"b"</span><span class="token punctuation">,</span>pch<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span>col<span class="token operator">=</span><span class="token string">"black"</span><span class="token punctuation">,</span>lwd<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>lines<span class="token punctuation">(</span>Berlin<span class="token punctuation">,</span>type<span class="token operator">=</span><span class="token string">"b"</span><span class="token punctuation">,</span>pch<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span>col<span class="token operator">=</span><span class="token string">"green"</span><span class="token punctuation">,</span>lwd<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>lines<span class="token punctuation">(</span>London<span class="token punctuation">,</span>type<span class="token operator">=</span><span class="token string">"b"</span><span class="token punctuation">,</span>pch<span class="token operator">=</span><span class="token number">17</span><span class="token punctuation">,</span>col<span class="token operator">=</span><span class="token string">"orange"</span><span class="token punctuation">,</span>lwd<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>axis<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>at<span class="token operator">=</span>seq<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>tick<span class="token operator">=</span>F<span class="token punctuation">)</span>axis<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>at<span class="token operator">=</span>x<span class="token punctuation">,</span>labels<span class="token operator">=</span>months<span class="token punctuation">,</span>las<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>abline<span class="token punctuation">(</span>h<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>col<span class="token operator">=</span><span class="token string">"gray"</span><span class="token punctuation">)</span>legend<span class="token punctuation">(</span><span class="token string">"topright"</span><span class="token punctuation">,</span>c<span class="token punctuation">(</span><span class="token string">"Tokyo"</span><span class="token punctuation">,</span><span class="token string">"New York"</span><span class="token punctuation">,</span><span class="token string">"Berlin"</span><span class="token punctuation">,</span><span class="token string">"London"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pch<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       col<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">"blue"</span><span class="token punctuation">,</span><span class="token string">"black"</span><span class="token punctuation">,</span><span class="token string">"green"</span><span class="token punctuation">,</span><span class="token string">"orange"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>bty<span class="token operator">=</span><span class="token string">"n"</span><span class="token punctuation">)</span>par<span class="token punctuation">(</span>opar<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="tiff输出"><a href="#tiff输出" class="headerlink" title="tiff输出"></a>tiff输出</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/RRplot.jpeg" alt=""></p><hr><h2 id="垂直线示例"><a href="#垂直线示例" class="headerlink" title="垂直线示例"></a>垂直线示例</h2><pre class="line-numbers language-r"><code class="language-r">plot<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span> xlim <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ylim <span class="token operator">=</span> c <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#abline(v = 0, col = "blue")</span><span class="token comment" spellcheck="true">#abline(h = c(0,1,2), v = c(0,1,2), col = c("red", "green", "blue"))</span><span class="token comment" spellcheck="true">#h: y水平线 设置y=多少即可画出y=多少的平行于x轴的直线</span><span class="token comment" spellcheck="true">#v: x垂直线 同上</span>abline<span class="token punctuation">(</span>h<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>v<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span>lty <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token string">"blue"</span><span class="token punctuation">)</span>abline<span class="token punctuation">(</span>h <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> col <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"red"</span><span class="token punctuation">,</span> <span class="token string">"green"</span><span class="token punctuation">,</span> <span class="token string">"blue"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>abline<span class="token punctuation">(</span>v <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> col <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"red"</span><span class="token punctuation">,</span> <span class="token string">"green"</span><span class="token punctuation">,</span> <span class="token string">"blue"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="title函数"><a href="#title函数" class="headerlink" title="title函数"></a>title函数</h2><pre class="line-numbers language-r"><code class="language-r"><span class="token comment" spellcheck="true">#为y轴标题设置</span>title<span class="token punctuation">(</span>ylab <span class="token operator">=</span> <span class="token string">"Weight"</span><span class="token punctuation">,</span>      col.lab <span class="token operator">=</span> <span class="token string">"orange"</span><span class="token punctuation">,</span>      cex.lab <span class="token operator">=</span> <span class="token number">1.5</span><span class="token punctuation">,</span> font.lab <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="同布异表"><a href="#同布异表" class="headerlink" title="同布异表"></a>同布异表</h2><p>同一个画布下有多个图表</p><pre class="line-numbers language-r"><code class="language-r"><span class="token comment" spellcheck="true"># 同布异表</span>a<span class="token operator">&lt;-</span><span class="token number">2000</span><span class="token operator">:</span><span class="token number">2018</span>length<span class="token punctuation">(</span>a<span class="token punctuation">)</span>b<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>runif<span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">)</span>d<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>runif<span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">2500</span><span class="token punctuation">)</span><span class="token punctuation">)</span>mat <span class="token operator">&lt;-</span> matrix<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> byrow <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span>matlayout<span class="token punctuation">(</span>mat<span class="token punctuation">,</span> widths <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> heights <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plot<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>plot<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="控制台输出"><a href="#控制台输出" class="headerlink" title="控制台输出"></a>控制台输出</h3><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> a<span class="token operator">&lt;-</span><span class="token number">2000</span><span class="token operator">:</span><span class="token number">2018</span><span class="token operator">></span> length<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">19</span><span class="token operator">></span> b<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>runif<span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> d<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>runif<span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">2500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> mat <span class="token operator">&lt;-</span> matrix<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> byrow <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span><span class="token operator">></span> mat     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">1</span>    <span class="token number">2</span>    <span class="token number">3</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">4</span>    <span class="token number">5</span>    <span class="token number">6</span><span class="token operator">></span> layout<span class="token punctuation">(</span>mat<span class="token punctuation">,</span> widths <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> heights <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> plot<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token operator">></span> plot<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="输出tiff-1"><a href="#输出tiff-1" class="headerlink" title="输出tiff"></a>输出tiff</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Rton.jpeg" alt=""></p><hr><p><a href="https://www.jianshu.com/p/167b61608dc1" target="_blank" rel="noopener">他山之石</a></p><hr><h2 id="试试ggplot吧！！！！"><a href="#试试ggplot吧！！！！" class="headerlink" title="试试ggplot吧！！！！"></a>试试ggplot吧！！！！</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Plot函数 </tag>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>处理栅格属性</title>
      <link href="/2020/02/22/zha-ge-shu-xing-biao-chu-li/"/>
      <url>/2020/02/22/zha-ge-shu-xing-biao-chu-li/</url>
      
        <content type="html"><![CDATA[<p>使用工具：</p><p><strong>ArcMap</strong></p><p><strong>栅格计算器-Con函数</strong></p><p>数据：</p><p>土地利用栅格数据</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/arcgis%E6%95%B0%E6%8D%AE.JPG" alt=""></p><hr><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a><strong>目的</strong></h2><p>如何将栅格属性表中的value字段的值“参差不齐”的合并处理呢</p><p>什么意思呢？<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f633.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f633.png?v8">😳</span><br>举个栗子，<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8">👇</span></p><p>在一个土地利用的栅格数据中，</p><p>以全球30米地表覆盖数据（GlobeLand30）为例， 共包括10个类型，分别是：耕地、森林、草地、灌丛地、水体、湿地、苔原、人造覆盖、裸地、冰川与永久积雪。</p><p>若想要将其合并为较少的数据。比如将森林和灌丛地合并，则需要按属性合并。</p><p>做毕业论文的学姐有如下理由：① 类太多作图做表都不合适 ②没有代表性③ 因为全球范围太大了</p><hr><h2 id="重分类"><a href="#重分类" class="headerlink" title="重分类"></a><strong>重分类</strong></h2><p>开始的思路为利用重分类工具。</p><p>发现重分类工具适合连续性分类，比如，1-5合并为0，6-10合并为1这样分类。</p><p>若要1和11合并为0；  2、3、4合并为1，这就有点麻烦了。</p><p>但也有一种思路。</p><p>就是新添加字段，按照需要合并的顺序，将1和11赋值排序，将二者排在第一第二位，这样，可直接利用新字段进行重分类，即可达到目的。</p><p><strong>但是，这样很蠢</strong>，面对数据量很大的情况，立马给跪。</p><p>放弃它！</p><hr><h2 id="Con函数"><a href="#Con函数" class="headerlink" title="Con函数"></a><strong>Con函数</strong></h2><p>Con函数为栅格计算器下的一个工具。</p><p>其正确的语法是：</p><p><strong>Con(判断条件，条件为True区域的栅格输出值，条件为False区域的栅格输出值)</strong></p><p><strong><u>可以嵌套！</u></strong></p><blockquote><p>1.简单用法：<br>Con(in_conditional_raster, true_raster, {false_raster})<br>2.嵌套（多条件）：<br>OutRas = Con(InRas1 &lt; 5, Sin(InRas1), Con(InRas1 &lt; 20, Cos(InRas1), Con(InRas1 &gt; 50, 100, 0)))<br>植入布尔运算：<br>OutRas = Con((InRas1 &gt; 5) &amp; (InRas1 &lt; 10), 5, 100)<br>3.多图层，多条件，多语句：<br>OutRas = Con(InRas1 &gt; 23, 5, Con(InRas1 &gt; 20, 12, Con((InRas1 &gt; 2) &amp; (InRas1 &lt; 17), Sin(InRas1), 100)))<br>多图层：<br>OutRas = Con(InRas1 + InRas2 &gt; 7, Sin(InRas1), Cos(InRas2))<br>OutRas2 = Con(InRas1 &lt; 9, InRas1 * InRas2 + Tan(InRas3), Cos(InRas1))</p></blockquote><p><strong>参数如下</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/arcgis%E6%A0%85%E6%A0%BC%E8%AE%A1%E7%AE%97%E5%99%A8.JPG" alt=""></p><p>公式如下</p><blockquote><p>rastercalc6=Con(“landuse_2001.tif” == 0 | 11,0,Con(“landuse_2001.tif” ==1 | 2 | 3 | 4 | 5 ,1,Con(“landuse_2001.tif” == 6 | 7 | 8 | 9 | 10,2,Con(“landuse_2001.tif” == 12 | 14,3,Con(“landuse_2001.tif” == 13,4,5)))))</p></blockquote><blockquote><p>更正：以上错误了</p><p>rastercalc1=Con((“landuse_2001.tif” == 0) | (“landuse_2001.tif” == 11),1,Con((“landuse_2001.tif” &gt;= 1) &amp; (“landuse_2001.tif” &lt;= 5),2,Con((“landuse_2001.tif” &gt;= 6) &amp; (“landuse_2001.tif” &lt;= 10),3,Con((“landuse_2001.tif” == 12) | (“landuse_2001.tif” == 14),4,Con(“landuse_2001.tif” == 13,5,Con((“landuse_2001.tif” == 15) | (“landuse_2001.tif” == 16),6,7))))))</p></blockquote><p>【注意】<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f44a.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44a.png?v8">👊</span></p><p>公式中的rastercalc6，即要和输出栅格的名称一致。</p><p>时刻树立数据库意识。在数据库中处理数据。</p><p>结果如下，</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/arcgis%E7%BB%93%E6%9E%9C.JPG" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ArcGIS </tag>
            
            <tag> 栅格属性表 </tag>
            
            <tag> 栅格计算器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>委托</title>
      <link href="/2020/02/21/wei-tuo/"/>
      <url>/2020/02/21/wei-tuo/</url>
      
        <content type="html"><![CDATA[<p>定义委托，相当于自定义委托声明的类。</p><p>委托可看出是一个函数的“容器”，将某一函数装入后，可把委托当作函数一样使用。</p><h2 id="例一："><a href="#例一：" class="headerlink" title="例一："></a><strong>例一：</strong></h2><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">using</span> System<span class="token punctuation">;</span><span class="token keyword">namespace</span> Delegate0<span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//可以将方法动态的赋给参数，可避免在程序中大量使用if-else，或Switch语句。有更好灵活性和可扩展性。</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">operclass</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//定义委托，注意委托的参数类型和返回值类型；参数类型为int，返回值类型为int；</span>        <span class="token comment" spellcheck="true">//相当于自定义类，其生成的对象可以生成一切委托类型的函数名。</span>        <span class="token keyword">public</span> <span class="token keyword">delegate</span> <span class="token keyword">int</span> <span class="token function">Mydelegate</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//任何参数类型为两个int，返回值为int的函数名，都可作为第三个参数的实参</span>        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">oper</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> Mydelegate mydelegate<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token function">mydelegate</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token keyword">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//两数相加方法</span>        <span class="token punctuation">{</span>            <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//两数相加方法</span>        <span class="token punctuation">{</span>            <span class="token keyword">return</span> x <span class="token operator">-</span> y<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">class</span> <span class="token class-name">Program</span>    <span class="token punctuation">{</span>        <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            operclass myoperclass <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">operclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"1+1={0}"</span><span class="token punctuation">,</span> myoperclass<span class="token punctuation">.</span><span class="token function">oper</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> myoperclass<span class="token punctuation">.</span><span class="token keyword">add</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"1-1={0}"</span><span class="token punctuation">,</span>myoperclass<span class="token punctuation">.</span><span class="token function">oper</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>myoperclass<span class="token punctuation">.</span>sub<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出：</p><pre class="line-numbers language-csharp"><code class="language-csharp">add10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="例二："><a href="#例二：" class="headerlink" title="例二："></a>例二：</h2><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">using</span> System<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">delegate</span> <span class="token keyword">void</span> <span class="token function">greet</span><span class="token punctuation">(</span><span class="token keyword">string</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义委托</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">greetclass</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> greet greetdelegate<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//实例化委托</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">Englisgreet</span><span class="token punctuation">(</span><span class="token keyword">string</span> name<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">Chinesegreet</span><span class="token punctuation">(</span><span class="token keyword">string</span> name<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"你好"</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">greeting</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>greetdelegate<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//绑定委托，则因此句触发。</span>        <span class="token punctuation">{</span>            <span class="token function">greetdelegate</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">main</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        greetclass greetclass <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">greetclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        greetclass<span class="token punctuation">.</span>greetdelegate <span class="token operator">=</span> greetclass<span class="token punctuation">.</span>Englisgreet<span class="token punctuation">;</span>        greetclass<span class="token punctuation">.</span>greetdelegate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">greet</span><span class="token punctuation">(</span>greetclass<span class="token punctuation">.</span>Chinesegreet<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//重新实例化委托greet</span>        greetclass<span class="token punctuation">.</span>greetdelegate <span class="token operator">+</span><span class="token operator">=</span> greetclass<span class="token punctuation">.</span>Englisgreet<span class="token punctuation">;</span>        greetclass<span class="token punctuation">.</span>greetdelegate <span class="token operator">+</span><span class="token operator">=</span> greetclass<span class="token punctuation">.</span>Chinesegreet<span class="token punctuation">;</span>        greetclass<span class="token punctuation">.</span><span class="token function">greetdelegate</span><span class="token punctuation">(</span><span class="token string">"hhhhhhhhhhhhhhhhh"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        greetclass<span class="token punctuation">.</span><span class="token function">greeting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 委托 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高程点生成等值线</title>
      <link href="/2020/02/21/gao-cheng-dian-sheng-cheng-deng-zhi-xian/"/>
      <url>/2020/02/21/gao-cheng-dian-sheng-cheng-deng-zhi-xian/</url>
      
        <content type="html"><![CDATA[<ol><li><h2 id="准备矢量高程点数据"><a href="#准备矢量高程点数据" class="headerlink" title="准备矢量高程点数据"></a><strong>准备矢量高程点数据</strong></h2></li></ol><hr><ol start="2"><li><h2 id="使用RBF插值工具"><a href="#使用RBF插值工具" class="headerlink" title="使用RBF插值工具"></a>使用RBF插值工具</h2></li></ol><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Post/arcgisRBF%E6%8F%92%E5%80%BC.JPG" alt=""></p><p>注意输出</p><p><strong>地统计图层与栅格图层有些不同</strong></p><p>输出地统计图层和输出栅格结果对比</p><p>输出栅格选项结果更详细，但不可用在GA图层转等值线</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Post/arcgisRBF%E6%8F%92%E5%80%BC%E7%BB%93%E6%9E%9C%E5%AF%B9%E6%AF%94.JPG" alt=""></p><hr><ol start="3"><li><h2 id="GA图层转等值线"><a href="#GA图层转等值线" class="headerlink" title="GA图层转等值线"></a><strong>GA图层转等值线</strong></h2></li></ol><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Post/arcgisGA%E5%9B%BE%E5%B1%82%E8%BD%AC%E7%AD%89%E5%80%BC%E7%BA%BF.JPG" alt=""></p><p>输出结果</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Post/arcgisresult.JPG" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ArcGIS </tag>
            
            <tag> 高程点生成等值线 </tag>
            
            <tag> 径向基函数RBF插值法 </tag>
            
            <tag> GA图层转等值线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDA直线生成算法(1)</title>
      <link href="/2020/02/19/dda-zhi-xian-sheng-cheng-suan-fa/"/>
      <url>/2020/02/19/dda-zhi-xian-sheng-cheng-suan-fa/</url>
      
        <content type="html"><![CDATA[<p>计算机图形学是研究怎样用数字计算机生成、处理和显示图形的一门学科。</p><h2 id="DDA"><a href="#DDA" class="headerlink" title="DDA"></a>DDA</h2><p>数字微分分析 <strong>Digital Differential Analyzer</strong></p><h2 id="一、预备知识"><a href="#一、预备知识" class="headerlink" title="一、预备知识"></a><strong>一、预备知识</strong></h2><h3 id="屏幕坐标系"><a href="#屏幕坐标系" class="headerlink" title="屏幕坐标系"></a><strong>屏幕坐标系</strong></h3><p>屏幕左上角为(0,0)</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDAzbx.JPG" alt=""></p><h3 id="经改造的二维笛卡尔坐标系"><a href="#经改造的二维笛卡尔坐标系" class="headerlink" title="经改造的二维笛卡尔坐标系"></a><strong>经改造的二维笛卡尔坐标系</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDAdk.JPG" alt=""></p><h3 id="直线的生成算法"><a href="#直线的生成算法" class="headerlink" title="直线的生成算法"></a><strong>直线的生成算法</strong></h3><blockquote><p><strong>在光栅显示器的荧光屏上生成一个对象，实质上是往帧缓存寄存器的相应单元中填入数据。画一条从（x1, y1）到（x2, y2）的直线，实质上是一个发现最佳逼近直线的象素序列，并填入色彩数据的过程。这个过程也称为直线光栅化。</strong></p></blockquote><h2 id="DDA经典生成直线算法"><a href="#DDA经典生成直线算法" class="headerlink" title="DDA经典生成直线算法"></a><strong>DDA经典生成直线算法</strong></h2><h3 id="rainbow-C-绘图环境（bitmap方式）"><a href="#rainbow-C-绘图环境（bitmap方式）" class="headerlink" title=":rainbow:C#绘图环境（bitmap方式）"></a><strong>:rainbow:C#绘图环境（bitmap方式）</strong></h3><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">using</span> System<span class="token punctuation">;</span><span class="token keyword">using</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">;</span><span class="token keyword">using</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">;</span><span class="token keyword">namespace</span> TextTemp<span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">Form2</span> <span class="token punctuation">:</span> Form    <span class="token punctuation">{</span>        Graphics Graphics<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义画布，为form2的全局字段</span>        Bitmap Bitmap<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义位图，为form2的全局字段</span>        <span class="token keyword">public</span> <span class="token function">Form2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Graphics <span class="token operator">=</span> panel1<span class="token punctuation">.</span><span class="token function">CreateGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//在form2的构造方法中实例化画布对象graphic</span>            Bitmap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bitmap</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//在form2的构造方法中实例化位图对象Bitmap</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//经典DDA算法</span>        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">Dda</span><span class="token punctuation">(</span><span class="token keyword">float</span> x1<span class="token punctuation">,</span><span class="token keyword">float</span> y1<span class="token punctuation">,</span><span class="token keyword">float</span> x2<span class="token punctuation">,</span><span class="token keyword">float</span> y2<span class="token punctuation">,</span>Color color<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">float</span> k<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//取最大值，作为分母。</span>            k <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">Abs</span><span class="token punctuation">(</span>x2 <span class="token operator">-</span> x1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">Abs</span><span class="token punctuation">(</span>y2<span class="token operator">-</span>y1<span class="token punctuation">)</span><span class="token operator">></span>k<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                k <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">Abs</span><span class="token punctuation">(</span>y2 <span class="token operator">-</span> y1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">float</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//动态坐标，也就是这条线上所有的点</span>            x <span class="token operator">=</span> x1<span class="token punctuation">;</span>            y <span class="token operator">=</span> y1<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//等于起始点</span>            <span class="token keyword">float</span> xincrea<span class="token punctuation">,</span> yincrea<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//坐标增量，动态坐标每走一点，所增加的量。</span>            xincrea <span class="token operator">=</span> <span class="token punctuation">(</span>x2 <span class="token operator">-</span> x1<span class="token punctuation">)</span> <span class="token operator">/</span> k<span class="token punctuation">;</span>            yincrea <span class="token operator">=</span> <span class="token punctuation">(</span>y2 <span class="token operator">-</span> y1<span class="token punctuation">)</span> <span class="token operator">/</span> k<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//注意这个终止k，很讲究。</span>            <span class="token punctuation">{</span>                Bitmap<span class="token punctuation">.</span><span class="token function">SetPixel</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>x<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>y<span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用位图的SetPixel方法。</span>                x <span class="token operator">+</span><span class="token operator">=</span> xincrea<span class="token punctuation">;</span>                y <span class="token operator">+</span><span class="token operator">=</span> yincrea<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//通过button1的点击事件，来执行dda方法。</span>        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">button1_Click</span><span class="token punctuation">(</span><span class="token keyword">object</span> sender<span class="token punctuation">,</span> EventArgs e<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token function">Dda</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token number">800</span><span class="token punctuation">,</span>Color<span class="token punctuation">.</span>Blue<span class="token punctuation">)</span><span class="token punctuation">;</span>            Graphics<span class="token punctuation">.</span><span class="token function">DrawImage</span><span class="token punctuation">(</span>Bitmap<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Bitmap<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> Bitmap<span class="token punctuation">.</span>Height<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//很重要，将位图和画布联系起来</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h4><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/DDA%E5%9D%90%E6%A0%87.JPG" alt=""></p><h4 id="窗体"><a href="#窗体" class="headerlink" title="窗体"></a><strong>窗体</strong></h4><p>在From中所用到的控件有，Panel和Button。</p><p>Panel是画布的容器，画布是位图的容器。</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Post/cadDDA.jpg" alt=""></p><hr><h3 id="C-绘图环境（dll方式）不会dll"><a href="#C-绘图环境（dll方式）不会dll" class="headerlink" title="C#绘图环境（dll方式）不会dll"></a>C#绘图环境（dll方式）不会dll</h3><h4 id="引用部分"><a href="#引用部分" class="headerlink" title="引用部分"></a><strong>引用部分</strong></h4><pre class="line-numbers language-c#"><code class="language-c#">using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Drawing;using System.Text;using System.Windows.Forms;using System.Runtime.InteropServices; //外部<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="声明部分"><a href="#声明部分" class="headerlink" title="声明部分"></a>声明部分</h4><pre class="line-numbers language-c#"><code class="language-c#">namespace WindowsApplication1{        public partial class Form1 : Form    {        [DllImport("gdi32.dll")]        private static extern int SetPixel(IntPtr hdc, int x1, int y1, int color);        public Form1()        {            InitializeComponent();        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="取颜色函数"><a href="#取颜色函数" class="headerlink" title="取颜色函数"></a>取颜色函数</h4><pre class="line-numbers language-c#"><code class="language-c#">private uint RGB(Color color){// 返回由RGB构成的位uintuint R = color.R;uint G = color.G;uint B = color.B;G <<= 8;B <<= 16;return ((uint)(R | G | B));}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="使用部分"><a href="#使用部分" class="headerlink" title="使用部分"></a>使用部分</h4><pre class="line-numbers language-c#"><code class="language-c#">SetPixel(g.GetHdc(), (int)x, (int)y, (int)RGB(color));    g.ReleaseHdc();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h3 id="直线的DDA实现程序-TC2-0-不会c"><a href="#直线的DDA实现程序-TC2-0-不会c" class="headerlink" title="直线的DDA实现程序(TC2.0)不会c"></a>直线的DDA实现程序(TC2.0)不会c</h3><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;graphics.h></span></span><span class="token keyword">void</span> <span class="token function">dda</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token keyword">int</span> x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>c<span class="token punctuation">;</span><span class="token punctuation">{</span>    <span class="token keyword">float</span> x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>xincre<span class="token punctuation">,</span>yincre<span class="token punctuation">;</span>      <span class="token keyword">int</span> k<span class="token punctuation">,</span>i<span class="token punctuation">;</span>      k<span class="token operator">=</span><span class="token function">abs</span><span class="token punctuation">(</span>x2<span class="token operator">-</span>x1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>y2<span class="token operator">-</span>y1<span class="token punctuation">)</span><span class="token operator">></span>k<span class="token punctuation">)</span>            k<span class="token operator">=</span><span class="token function">abs</span><span class="token punctuation">(</span>y2<span class="token operator">-</span>y1<span class="token punctuation">)</span><span class="token punctuation">;</span>    xincre<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x2<span class="token operator">-</span>x1<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>k<span class="token punctuation">;</span>    yincre<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y2<span class="token operator">-</span>y1<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>k<span class="token punctuation">;</span>    x<span class="token operator">=</span>x1<span class="token punctuation">;</span>    y<span class="token operator">=</span>y1<span class="token punctuation">;</span>      <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>k<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span>     <span class="token function">putpixel</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>         x<span class="token operator">+</span><span class="token operator">=</span>xincre<span class="token punctuation">;</span>         y<span class="token operator">+</span><span class="token operator">=</span>yincre<span class="token punctuation">;</span> <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> graphmode <span class="token punctuation">,</span> i；    <span class="token keyword">int</span>  graphdiver <span class="token operator">=</span>DETECT<span class="token punctuation">;</span>    <span class="token function">initgraph</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>graphdriver<span class="token punctuation">,</span> <span class="token operator">&amp;</span>graphmode <span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">dda</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">getch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="GIE色度图"><a href="#GIE色度图" class="headerlink" title="GIE色度图"></a><strong>GIE色度图</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Post/cadGIE%E8%89%B2%E5%BA%A6%E5%9B%BE.JPG" alt=""></p><h2 id="RGB"><a href="#RGB" class="headerlink" title="RGB"></a><strong>RGB</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Post/cadRGB.JPG" alt=""></p><h2 id="CMY"><a href="#CMY" class="headerlink" title="CMY"></a><strong>CMY</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Post/cadCMY.JPG" alt=""></p><h2 id="HSV"><a href="#HSV" class="headerlink" title="HSV"></a><strong>HSV</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Post/cadHSV.JPG" alt=""></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 计算机图形学 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
            <tag> DDA </tag>
            
            <tag> C# </tag>
            
            <tag> Bresenham </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="/2020/02/18/hexo/"/>
      <url>/2020/02/18/hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a><strong>代码高亮</strong></h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改博客根目录下_config.yml的配置。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">#关闭默认高亮</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>新增如下配置</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># hexo-prism-plugin 代码高亮插件</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime(实时处理)/preprocess(预处理)</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'okaidia'</span>     <span class="token comment" spellcheck="true"># 主题 </span>  <span class="token comment" spellcheck="true">#theme: 'tomorrow'   </span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false     </span><span class="token comment" spellcheck="true"># 开启行数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/PrismJS/prism-themes.git" target="_blank" rel="noopener">其他代码高亮主题</a></p><hr><h2 id="Categories一文多分类"><a href="#Categories一文多分类" class="headerlink" title="Categories一文多分类"></a><strong>Categories一文多分类</strong></h2><p>按照官方的解释，categories 这个选项有两种配置方法（其实有三种）。那我们就来讲讲这三种配置方法。</p><h3 id="子分类"><a href="#子分类" class="headerlink" title="子分类"></a><strong>子分类</strong></h3><p> 下面的分类会将该分章放到 Java/Servlet这个分类下。</p><p>categories:</p><ul><li>Java</li><li>Servlet<br>同样的作用我们也可以这样写。</li></ul><p>categories: [Java, Servlet]<br>上面两种方法最终效果一样，都是将文章放在了一个子分类的目录下。</p><h3 id="多个分类"><a href="#多个分类" class="headerlink" title="多个分类"></a><strong>多个分类</strong></h3><p>如果我们的要求是将文章同时分到多个不同的分类中呢，我们应该这样：</p><p>categories:<br>  -[Java]<br>  -[Servlet]<br>这样，就可以将上面的文章分类到 Java 和 Servlet 这两个不同的目录中了。</p><p>扩展一下，如果我们将其分类到 Java/Servlet 和 Programming 两个不同的目录下，我们应该如下写：</p><p>categories:<br>  -[Java, Servlet]<br>  -[Programming]</p><hr><h2 id="域名GitHub-amp-Coding码云双解析"><a href="#域名GitHub-amp-Coding码云双解析" class="headerlink" title="域名GitHub&amp;Coding码云双解析"></a>域名GitHub&amp;Coding码云双解析</h2><p><strong>hexo致命问题——速度</strong></p><blockquote><p>Github速度实在不敢恭维。Coding稳定性让人头疼！</p><p>开始只是鄙夷GitHub的速度，把博客只部署到了Coding，但是发布是两个仓库同时发布的。GitHub只做备份。</p><p>现在发现，码云是真让人生气。双部署万岁！</p></blockquote><ol><li>在/blog/source下新建文本文件txt。CNAME文件，输入域名，shiyu.vip保存。去掉文件txt后缀</li></ol><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/hexo/source.JPG" alt=""></p><ol start="2"><li>生成部署</li></ol><pre class="line-numbers language-bash"><code class="language-bash">hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>进入阿里云控制台域名解析</li></ol><p>进行域名管理，添加解析。</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/hexo/jeixi.JPG" alt=""></p><ol start="4"><li>修改GitHub博客仓库设置</li></ol><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/hexo/GitHubsetting.JPG" alt=""></p><ol start="5"><li>:v:</li></ol><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/hexo/jiemian.JPG" alt=""></p><h2 id="网站SEO优化"><a href="#网站SEO优化" class="headerlink" title="网站SEO优化"></a>网站SEO优化</h2><blockquote><p><code>SEO</code>是由英文<code>Search Engine Optimization</code>缩写而来， 中文意译为“搜索引擎优化”。<code>SEO</code>是指通过站内优化比如网站结构调整、网站内容建设、网站代码优化等以及站外优化。</p></blockquote><p>百度收录站点。</p><h3 id="验证网站所有权"><a href="#验证网站所有权" class="headerlink" title="验证网站所有权"></a>验证网站所有权</h3><p>登录百度站长搜索资源平台：<a href="http://zhanzhang.baidu.com%2C/" target="_blank" rel="noopener">http://zhanzhang.baidu.com，</a> 只要有百度旗下的账号就可以登录，登录成功之后在站点管理中点击<a href="http://zhanzhang.baidu.com/site/siteadd" target="_blank" rel="noopener">添加网站</a>然后输入你的站点地址。</p><blockquote><p>​    注意，这里需要输入我们自己购买的域名,不能使用<code>xxx.github.io</code>之类域名.因为<code>github</code>是不允许百度的<code>spider</code>（蜘蛛）爬取<code>github</code>上的内容的，所以如果想让你的站点被百度收录，只能使用自己购买的域名</p></blockquote><p>在填完网址选择完网站的类型之后需要验证网站的所有权，验证网站所有权的方式有三种：</p><ul><li>文件验证。</li><li><code>html</code>标签验证</li><li><code>CNAME</code>解析验证（<strong>推荐使用</strong>）</li></ul><p><code>CNAME</code>验证，<code>CNAME</code>验证最为简单，只需加一条解析就好~</p><p>添加云解析</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R基础</title>
      <link href="/2020/02/17/r-ji-chu/"/>
      <url>/2020/02/17/r-ji-chu/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="一、文件操作"><a href="#一、文件操作" class="headerlink" title="一、文件操作"></a>一、文件操作</h2><h3 id="1、工作路径"><a href="#1、工作路径" class="headerlink" title="1、工作路径"></a><strong>1、工作路径</strong></h3><p>getwd() 列出当前工作路径；</p><p>setwd(dir) 设置工作路径，参数dir是要设置的路径。</p><h3 id="2、list-files函数列出目录下文件"><a href="#2、list-files函数列出目录下文件" class="headerlink" title="2、list.files函数列出目录下文件"></a><strong>2、list.files函数列出目录下文件</strong></h3><p>函数list.files和dir用法完全一样，可以列出路径下所有文件（包括目录）；函数list.dirs只列出路径下所有目录。</p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> getwd<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#当前工作目录</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"C:/Users/YU/Documents"</span><span class="token operator">></span> getwd<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#当前工作目录</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"C:/Users/YU/Documents"</span><span class="token comment" spellcheck="true">#ls()列出内存变量-----------------------</span>b<span class="token operator">=</span><span class="token number">3</span>ls<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"b"</span><span class="token comment" spellcheck="true">#-------------------------------------</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#判断文件夹是否存在，不存在则创建一个</span><span class="token operator">></span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file.exists<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">+</span>   dir.create<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A"</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token punctuation">}</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#文件夹列表,目录</span><span class="token operator">></span> list.dirs<span class="token punctuation">(</span><span class="token string">"B:/Temp1"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1"</span>       <span class="token string">"B:/Temp1/A"</span>     <span class="token string">"B:/Temp1/笔记"</span>  <span class="token string">"B:/Temp1/权游1"</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#文件列表，文件名字</span><span class="token operator">></span> list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1"</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"A"</span>                             <span class="token string">"df_hb小学.txt"</span>                 <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token string">"笔记"</span>                          <span class="token string">"高考.csv"</span>                      <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token string">"高考.xlsx"</span>                     <span class="token string">"河北高考人数csv输出.csv"</span>       <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token string">"河北高考人数csv输出减年.csv"</span>   <span class="token string">"权利的游戏第二季02 - 副本.mp4"</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token string">"权利的游戏第二季03 - 副本.mp4"</span> <span class="token string">"权利的游戏第二季04 - 副本.mp4"</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token string">"权利的游戏第一季01.mp4"</span>        <span class="token string">"权利的游戏第一季02.mp4"</span>       <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token string">"权利的游戏第一季03.mp4"</span>        <span class="token string">"权利的游戏第一季04.mp4"</span>       <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token string">"权游1"</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>list.files()函数参数解释</strong></p><p>list.files(path = “.”, pattern = NULL, all.files = FALSE,full.names = FALSE, recursive = FALSE,ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)</p><ol><li><p>path：输入文件夹路径</p></li><li><p>pattern：匹配文件名，选择自己所需的文件（可选项，默认是全部文件名，包括子文件夹，但是不包括子文件夹的文件），如pattern = “*.XPT”，表示要输出以.XPT结尾的文件名，如果没有符号，则输出包含.XPT的文件名</p></li><li><p>all.files：是否返回所有文件，包括隐藏文件，但不包括子文件夹的文件，默认是否</p></li><li><p>full.names：是否返回路径+文件名，默认是否，如果是否，则返回文件名</p></li><li><p>recursive：是否将子文件夹的文件也列出来</p></li><li><p>ignore.case：匹配的文件名是否忽略大小写，默认否，即不忽略大小写</p></li></ol><p>示例</p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> <span class="token punctuation">(</span>R.home<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/installs/RStudio/path/R-3.6.2"</span><span class="token operator">></span> list.files<span class="token punctuation">(</span>R.home<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"bin"</span> <span class="token string">"CHANGES"</span> <span class="token string">"COPYING"</span> <span class="token string">"doc"</span> <span class="token string">"etc"</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token string">"include"</span> <span class="token string">"library"</span> <span class="token string">"MD5"</span> <span class="token string">"modules"</span> <span class="token string">"README"</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token string">"README.R-3.6.2"</span> <span class="token string">"share"</span> <span class="token string">"src"</span> <span class="token string">"Tcl"</span> <span class="token string">"tests"</span> <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token string">"unins000.dat"</span> <span class="token string">"unins000.exe"</span> <span class="token operator">></span> list.files<span class="token punctuation">(</span>R.home<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">".dat$"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"unins000.dat"</span><span class="token operator">></span> list.files<span class="token punctuation">(</span>R.home<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">".dat$"</span><span class="token punctuation">,</span>full.names <span class="token operator">=</span> T<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/installs/RStudio/path/R-3.6.2/unins000.dat"</span><span class="token operator">></span> list.files<span class="token punctuation">(</span>R.home<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">"doc"</span><span class="token punctuation">,</span>full.names <span class="token operator">=</span> T<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/installs/RStudio/path/R-3.6.2/doc"</span><span class="token comment" spellcheck="true">#pattern：匹配文件名，选择自己所需的文件（可选项，默认是全部文件名，包括子文件夹，但是不包括子文件夹的文件），如pattern = "*.XPT$"，表示要输出以.XPT结尾的文件名，如果没有$符号，则输出包含.XPT的文件名</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、删除文件"><a href="#3、删除文件" class="headerlink" title="3、删除文件"></a><strong>3、删除文件</strong></h3><p><strong>file.remove函数</strong></p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> <span class="token comment" spellcheck="true">#删除文件</span> <span class="token operator">></span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file.exists<span class="token punctuation">(</span><span class="token string">"B:/Temp1/冰与火之歌第一季01.mp4"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">#先判断是否有这个文件，没有则创建一个</span> <span class="token operator">+</span> file.create<span class="token punctuation">(</span><span class="token string">"B:/Temp1/冰与火之歌第一季01.mp4"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">}</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token boolean">TRUE</span> <span class="token operator">></span> file.remove<span class="token punctuation">(</span><span class="token string">"B:/Temp1/冰与火之歌第一季01.mp4"</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token boolean">TRUE</span> <span class="token comment" spellcheck="true">#---------------------------------------------------</span><span class="token operator">></span> list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A"</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">"02"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"权力的游戏第一季02.mp4"</span><span class="token operator">></span> <span class="token operator">></span> list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A"</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">"02"</span><span class="token punctuation">,</span>full.names <span class="token operator">=</span> T<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季02.mp4"</span><span class="token operator">></span> file.remove<span class="token punctuation">(</span>list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A/"</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">"02"</span><span class="token punctuation">,</span>full.names <span class="token operator">=</span> F<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#必须是全部路径，full.names改为T</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token boolean">FALSE</span>Warning message<span class="token operator">:</span>In file.remove<span class="token punctuation">(</span>list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A/"</span><span class="token punctuation">,</span> pattern <span class="token operator">=</span> <span class="token string">"02"</span><span class="token punctuation">,</span> full.names <span class="token operator">=</span> F<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span>  无法删除文件<span class="token string">'权力的游戏第一季02.mp4'</span>，原因是<span class="token string">'No such file or directory'</span><span class="token operator">></span> file.remove<span class="token punctuation">(</span>list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A/"</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">"02"</span><span class="token punctuation">,</span>full.names <span class="token operator">=</span> T<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#不能只是文件名</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token boolean">TRUE</span><span class="token operator">></span> list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A/"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#查看删除结果</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"权力的游戏第一季01.mp4"</span> <span class="token string">"权力的游戏第一季03.mp4"</span> <span class="token string">"权力的游戏第一季04.mp4"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意</strong></p><p>file.remove只能移除文件，不能移除文件夹</p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> list.dirs<span class="token punctuation">(</span><span class="token string">"B:/Temp2"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp2"</span>           <span class="token string">"B:/Temp2/.text"</span>     <span class="token string">"B:/Temp2/text"</span>     <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp2/text.text"</span> <span class="token string">"B:/Temp2/text.txt"</span> <span class="token operator">></span> file.remove<span class="token punctuation">(</span><span class="token string">"B:/Temp2/text"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#text是文件夹</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token boolean">FALSE</span>Warning message<span class="token operator">:</span>In file.remove<span class="token punctuation">(</span><span class="token string">"B:/Temp2/text"</span><span class="token punctuation">)</span> <span class="token operator">:</span>  无法删除文件<span class="token string">'B:/Temp2/text'</span>，原因是<span class="token string">'Permission denied'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4、复制文件"><a href="#4、复制文件" class="headerlink" title="4、复制文件"></a><strong>4、复制文件</strong></h3><p><strong>file.copy()</strong></p><p>file.copy(from, to, overwrite = recursive, recursive = FALSE,<br>          copy.mode = TRUE, copy.date = FALSE)<br>from是原始文件（目录）名，to是新文件（目录）名，二者可以是vector，但是长度需相同；</p><p>overwrite 若为TRUE，则文件被覆盖；</p><p>recursive 复制目录时recursive需为TRUE；</p><p>copy.mode若为TRUE，permission bits一并复制过来；</p><p>copy.date若为TRUE，文件日期一并复制过来。</p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> file0<span class="token operator">&lt;-</span>list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1"</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">"权利的游戏第一季"</span><span class="token punctuation">,</span>full.names<span class="token operator">=</span>T<span class="token punctuation">)</span><span class="token operator">></span> file0<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/权利的游戏第一季01.mp4"</span> <span class="token string">"B:/Temp1/权利的游戏第一季02.mp4"</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/权利的游戏第一季03.mp4"</span> <span class="token string">"B:/Temp1/权利的游戏第一季04.mp4"</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#复制文件----------------------------------------</span><span class="token operator">></span> file.copy<span class="token punctuation">(</span>file0<span class="token punctuation">,</span><span class="token string">"B:/Temp1/A"</span><span class="token punctuation">,</span>copy.date <span class="token operator">=</span> F<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#注意此时file0是路径+文件名</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#查看复制结果</span><span class="token operator">></span> list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"权力的游戏第一季01.mp4"</span> <span class="token string">"权力的游戏第一季03.mp4"</span> <span class="token string">"权力的游戏第一季04.mp4"</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token string">"权利的游戏第一季01.mp4"</span> <span class="token string">"权利的游戏第一季02.mp4"</span> <span class="token string">"权利的游戏第一季03.mp4"</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token string">"权利的游戏第一季04.mp4"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5、重命名"><a href="#5、重命名" class="headerlink" title="5、重命名"></a><strong>5、重命名</strong></h3><p><strong>file.rename</strong></p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> <span class="token comment" spellcheck="true">#重命名-------------------------------------------------</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#获取A文件夹下的文件路径及文件名</span><span class="token operator">></span> fileA<span class="token operator">&lt;-</span>list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A"</span><span class="token punctuation">,</span>full.names <span class="token operator">=</span> T<span class="token punctuation">)</span><span class="token operator">></span> fileA<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季01.mp4"</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季03.mp4"</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季04.mp4"</span> <span class="token string">"B:/Temp1/A/权利的游戏第一季01.mp4"</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权利的游戏第一季02.mp4"</span> <span class="token string">"B:/Temp1/A/权利的游戏第一季03.mp4"</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权利的游戏第一季04.mp4"</span><span class="token operator">></span> fileA_rename<span class="token operator">=</span>sub<span class="token punctuation">(</span><span class="token string">"利"</span><span class="token punctuation">,</span><span class="token string">"力"</span><span class="token punctuation">,</span>fileA<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#进行字符的替换,宋老师的输入法可能有毒，或者他语文不好。</span><span class="token operator">></span> fileA_rename<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季01.mp4"</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季03.mp4"</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季04.mp4"</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季01.mp4"</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季02.mp4"</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季03.mp4"</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季04.mp4"</span><span class="token operator">></span> file.rename<span class="token punctuation">(</span>fileA<span class="token punctuation">,</span>fileA_rename<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#重命名操作</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span><span class="token operator">></span> list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#查看结果</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"权力的游戏第一季01.mp4"</span> <span class="token string">"权力的游戏第一季02.mp4"</span> <span class="token string">"权力的游戏第一季03.mp4"</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token string">"权力的游戏第一季04.mp4"</span><span class="token comment" spellcheck="true">#补充小函数------------------------------------------</span><span class="token comment" spellcheck="true">#sub函数-----------------------</span><span class="token operator">></span>c<span class="token operator">=</span><span class="token string">"lishiyu"</span><span class="token operator">></span>c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"lishiyu"</span>b<span class="token operator">&lt;-</span>sub<span class="token punctuation">(</span><span class="token string">"yu"</span><span class="token punctuation">,</span><span class="token string">"kjsfkjsdhgkhj"</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span>b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"lishikjsfkjsdhgkhj"</span>c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"lishiyu"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>gsub()函数</p><p><a href="http://www.nicetool.net/embed/name_generator.html" target="_blank" rel="noopener">一个有趣的随机姓名生成网站</a></p><blockquote><p>谁把他变成付费的了:weary:</p><p>是我进的太多了吗……:sob::sob:</p></blockquote><p>随机生成50个李姓家族人氏</p><p>于是乎，生成了</p><p>如下结果</p><blockquote><p>李寝叹<br>李秋声<br>李损辞<br>李不庐<br>李幽忽<br>李此回<br>李日者<br>李彼其<br>李应寂<br>李花端<br>李香蒙<br>李园飞<br>李纵追<br>李慕兮<br>李郁而<br>李忆眠<br>李山托<br>李枝花<br>李其伤<br>李兮之<br>李易皮<br>李高低<br>李京和<br>李恢身<br>李还忽<br>李便狂<br>李椒盈<br>李债坡<br>李见兮<br>李傍岩<br>李林禽<br>李聊蟪<br>李在旁<br>李收欿<br>李驖在<br>李路兮<br>李行迈<br>李蕃长<br>李晦兮<br>李叶廊<br>李东帘<br>李看色<br>李师北<br>李沛罔<br>李吉兮<br>李帐不<br>李巨献<br>李降椒<br>李何至<br>李花故</p></blockquote><p>得去掉换行和空格啊</p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> a<span class="token operator">=</span>"李寝叹<span class="token operator">+</span> 李秋声<span class="token operator">+</span> 李损辞<span class="token operator">+</span> 李不庐<span class="token operator">+</span> 李幽忽<span class="token operator">+</span> 李此回<span class="token operator">+</span> 李日者<span class="token operator">+</span> 李彼其<span class="token operator">+</span> 李应寂<span class="token operator">+</span> 李花端<span class="token operator">+</span> 李香蒙<span class="token operator">+</span> 李园飞<span class="token operator">+</span> 李纵追<span class="token operator">+</span> 李慕兮<span class="token operator">+</span> 李郁而<span class="token operator">+</span> 李忆眠<span class="token operator">+</span> 李山托<span class="token operator">+</span> 李枝花<span class="token operator">+</span> 李其伤<span class="token operator">+</span> 李兮之<span class="token operator">+</span> 李易皮<span class="token operator">+</span> 李高低<span class="token operator">+</span> 李京和<span class="token operator">+</span> 李恢身<span class="token operator">+</span> 李还忽<span class="token operator">+</span> 李便狂<span class="token operator">+</span> 李椒盈<span class="token operator">+</span> 李债坡<span class="token operator">+</span> 李见兮<span class="token operator">+</span> 李傍岩<span class="token operator">+</span> 李林禽<span class="token operator">+</span> 李聊蟪<span class="token operator">+</span> 李在旁<span class="token operator">+</span> 李收欿<span class="token operator">+</span> 李驖在<span class="token operator">+</span> 李路兮<span class="token operator">+</span> 李行迈<span class="token operator">+</span> 李蕃长<span class="token operator">+</span> 李晦兮<span class="token operator">+</span> 李叶廊<span class="token operator">+</span> 李东帘<span class="token operator">+</span> 李看色<span class="token operator">+</span> 李师北<span class="token operator">+</span> 李沛罔<span class="token operator">+</span> 李吉兮<span class="token operator">+</span> 李帐不<span class="token operator">+</span> 李巨献<span class="token operator">+</span> 李降椒<span class="token operator">+</span> 李何至<span class="token operator">+</span> 李花故"<span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"李寝叹\n李秋声\n李损辞\n李不庐\n李幽忽\n李此回\n李日者\n李彼其\n李应寂\n李花端\n李香蒙\n李园飞\n李纵追\n李慕兮\n李郁而\n李忆眠\n李山托\n李枝花\n李其伤\n李兮之\n李易皮\n李高低\n李京和\n李恢身\n李还忽\n李便狂\n李椒盈\n李债坡\n李见兮\n李傍岩\n李林禽\n李聊蟪\n李在旁\n李收欿\n李驖在\n李路兮\n李行迈\n李蕃长\n李晦兮\n李叶廊\n李东帘\n李看色\n李师北\n李沛罔\n李吉兮\n李帐不\n李巨献\n李降椒\n李何至\n李花故"</span><span class="token operator">></span> b<span class="token operator">=</span>sub<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">,</span><span class="token string">"、"</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token operator">></span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"李寝叹、李秋声\n李损辞\n李不庐\n李幽忽\n李此回\n李日者\n李彼其\n李应寂\n李花端\n李香蒙\n李园飞\n李纵追\n李慕兮\n李郁而\n李忆眠\n李山托\n李枝花\n李其伤\n李兮之\n李易皮\n李高低\n李京和\n李恢身\n李还忽\n李便狂\n李椒盈\n李债坡\n李见兮\n李傍岩\n李林禽\n李聊蟪\n李在旁\n李收欿\n李驖在\n李路兮\n李行迈\n李蕃长\n李晦兮\n李叶廊\n李东帘\n李看色\n李师北\n李沛罔\n李吉兮\n李帐不\n李巨献\n李降椒\n李何至\n李花故"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不对啊，这只替换了第一个，仔细看，因为只有一个  [1]</p><p>gsub()函数</p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> c<span class="token operator">=</span>gsub<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">,</span><span class="token string">"、"</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token operator">></span> c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"李寝叹、李秋声、李损辞、李不庐、李幽忽、李此回、李日者、李彼其、李应寂、李花端、李香蒙、李园飞、李纵追、李慕兮、李郁而、李忆眠、李山托、李枝花、李其伤、李兮之、李易皮、李高低、李京和、李恢身、李还忽、李便狂、李椒盈、李债坡、李见兮、李傍岩、李林禽、李聊蟪、李在旁、李收欿、李驖在、李路兮、李行迈、李蕃长、李晦兮、李叶廊、李东帘、李看色、李师北、李沛罔、李吉兮、李帐不、李巨献、李降椒、李何至、李花故"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>OK~!</strong></p><p>提取出第2到4个位置上的字</p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> <span class="token comment" spellcheck="true">#提取出第2到4个位置上的字</span><span class="token operator">></span> substr<span class="token punctuation">(</span><span class="token string">"李世昱嘿嘿lishiyu"</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"世昱嘿"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><p>其他字符串</p><blockquote><p>获取字符串长度：nchar()  </p><p>字符串分割：strsplit()  </p><p>字符串拼接：paste()<br>字符串截取：substr()  </p><p>字符串替代：gsub() chartr() sub()  </p><p>字符串匹配：grep()  </p><p>大小写替换：toupper() tolower()</p></blockquote><hr><h3 id="6、保存脚本文件"><a href="#6、保存脚本文件" class="headerlink" title="6、保存脚本文件"></a><strong>6、保存脚本文件</strong></h3><p>保存编码为GB18030，否则中文会变成乱码</p><h3 id="7、查看帮助文档"><a href="#7、查看帮助文档" class="headerlink" title="7、查看帮助文档"></a><strong>7、查看帮助文档</strong></h3><p>?加函数名</p><p>例如：?read.csv查看read.csv函数的帮助文档</p><pre class="line-numbers language-r"><code class="language-r">rm<span class="token punctuation">(</span>list<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>df<span class="token operator">&lt;-</span>read.csv<span class="token punctuation">(</span><span class="token string">"B:/hh.csv"</span><span class="token punctuation">,</span>header<span class="token operator">=</span>T<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="8、常用函数"><a href="#8、常用函数" class="headerlink" title="8、常用函数"></a>8、常用函数</h3><h4 id="1）strsplit拆分"><a href="#1）strsplit拆分" class="headerlink" title="1）strsplit拆分"></a>1）strsplit拆分</h4><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> <span class="token comment" spellcheck="true">#拆分</span><span class="token operator">></span> a<span class="token operator">&lt;-</span><span class="token string">'2020/2/24'</span><span class="token operator">></span> b<span class="token operator">&lt;-</span>strsplit<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token operator">></span> b<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"2020"</span> <span class="token string">"2"</span>    <span class="token string">"24"</span>  <span class="token operator">></span> a1<span class="token operator">&lt;-</span>b<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">></span> a1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"2020"</span><span class="token operator">></span> a2<span class="token operator">&lt;-</span>b<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">></span> a2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"2"</span><span class="token operator">></span> a3<span class="token operator">&lt;-</span>b<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">></span> a3<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"24"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2）file-path-sans-ext文件去后缀"><a href="#2）file-path-sans-ext文件去后缀" class="headerlink" title="2）file_path_sans_ext文件去后缀"></a>2）file_path_sans_ext文件去后缀</h4><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> <span class="token comment" spellcheck="true">#文件去后缀</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#需要导包，tools包</span><span class="token operator">></span> library<span class="token punctuation">(</span>tools<span class="token punctuation">)</span><span class="token operator">></span> flie0<span class="token operator">=</span>file_path_sans_ext<span class="token punctuation">(</span><span class="token string">"B:/Temp2/新建文本文档.txt"</span><span class="token punctuation">)</span><span class="token operator">></span> flie0<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp2/新建文本文档"</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#原文件不改变</span><span class="token operator">></span> list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp2/"</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"2017016525-马晓雷.rar"</span>                <span class="token string">"data"</span>                                 <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token string">"dd"</span>                                   <span class="token string">"DXY-COVID-19-Data-master"</span>             <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token string">"DXY-COVID-19-Data-master.zip"</span>         <span class="token string">"Novel-Coronavirus-Updates-master"</span>     <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token string">"Novel-Coronavirus-Updates-master.zip"</span> <span class="token string">"text"</span>                                 <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token string">"text.text"</span>                            <span class="token string">"text.txt"</span>                            <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token string">"Zgkrs.R"</span>                              <span class="token string">"河北.csv"</span>                            <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token string">"历年中高考人数.tif"</span>                   <span class="token string">"全国疫情整理-李世昱.xlsx"</span>            <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token string">"新建文本文档.txt"</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3）as-integer类型转换"><a href="#3）as-integer类型转换" class="headerlink" title="3）as.integer类型转换"></a>3）as.integer类型转换</h4><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> <span class="token comment" spellcheck="true">#类型转换</span><span class="token operator">></span> x<span class="token operator">=</span><span class="token string">'123'</span><span class="token operator">></span> typeof<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"character"</span><span class="token operator">></span> y<span class="token operator">&lt;-</span>as.numeric<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">></span> typeof<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"double"</span><span class="token operator">></span> y1<span class="token operator">&lt;-</span>as.integer<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">></span> typeof<span class="token punctuation">(</span>y1<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"integer"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4）paste函数"><a href="#4）paste函数" class="headerlink" title="4）paste函数"></a>4）paste函数</h4><pre class="line-numbers language-R"><code class="language-R">#paste函数--------------------------------------paste("a","b",sep = "=")##注意到用等号分隔了# "a=b"paste("a",1:5,sep = "")#会自动每个元素与a相连#"a1" "a2" "a3" "a4" "a5"paste("a",1:5,".pdf", sep = "")#比如想批量输出文件名#"a1.pdf" "a2.pdf" "a3.pdf" "a4.pdf" "a5.pdf"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>paste函数未完待续……</p><h4 id="5）dir函数"><a href="#5）dir函数" class="headerlink" title="5）dir函数"></a>5）dir函数</h4><h5 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h5><pre class="line-numbers language-R"><code class="language-R">rm(list = ls())setwd("B:/Temp2/")#查看当前目录的子目录和文件--------------------------#同list.files()dir() #列出以2开头的文件或子目录---------------------------dir(path="B:/Temp2/",pattern='^2') # 列出目录下所有的目录和文件，包括隐藏文件------------#同list.files(".",all.files=TRUE)dir(path="B:/Temp2/",all.files=TRUE) <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="控制台运行结果"><a href="#控制台运行结果" class="headerlink" title="控制台运行结果"></a>控制台运行结果</h5><blockquote><p>rm(list = ls())<br>setwd(“B:/Temp2/“)<br>#查看当前目录的子目录和文件———————–<br>#同list.files()<br>dir()<br> [1] “201401.tif”           “a1”                   “data”                 “test”                 “数据.zip”             “外文件夹_1”<br> [7] “外文件夹_10”          “外文件夹_2”           “外文件夹_3”           “外文件夹_4”           “外文件夹_5”           “外文件夹_6”<br>[13] “外文件夹_7”           “外文件夹_8”           “外文件夹_9”           “外文件夹1”            “外文件夹10”           “外文件夹2”<br>[19] “外文件夹3”            “外文件夹4”            “外文件夹5”            “外文件夹6”            “外文件夹7”            “外文件夹8”<br>[25] “外文件夹9”            “月数据格点数据集”     “月数据格点数据集.zip”<br>#列出以2开头的文件或子目录—————————<br>dir(path=”B:/Temp2/“,pattern=’^2’)<br>[1] “201401.tif”</p><p>#列出目录下所有的目录和文件，包括隐藏文件——</p><p>#同list.files(“.”,all.files=TRUE)<br>dir(path=”B:/Temp2/“,all.files=TRUE)<br> [1] “.”                    “..”                   “201401.tif”           “a1”                   “data”                 “test”<br> [7] “数据.zip”             “外文件夹_1”           “外文件夹_10”          “外文件夹_2”           “外文件夹_3”           “外文件夹_4”<br>[13] “外文件夹_5”           “外文件夹_6”           “外文件夹_7”           “外文件夹_8”           “外文件夹_9”           “外文件夹1”<br>[19] “外文件夹10”           “外文件夹2”            “外文件夹3”            “外文件夹4”            “外文件夹5”            “外文件夹6”<br>[25] “外文件夹7”            “外文件夹8”            “外文件夹9”            “月数据格点数据集”     “月数据格点数据集.zip”</p></blockquote><hr><h3 id="9、终极boss之——批量生成文件夹、文件树"><a href="#9、终极boss之——批量生成文件夹、文件树" class="headerlink" title="9、终极boss之——批量生成文件夹、文件树"></a>9、终极boss之——批量生成文件夹、文件树</h3><pre class="line-numbers language-R"><code class="language-R">#批量生成文件夹---------------------------------rm(list = ls())setwd("B:/Temp2/")for (i in 1:10) {   if (file.exists(paste('外文件夹',i,sep = '_'))) {    print("文件已经存在啦~")  }  else{    dir.create(paste('外文件夹',i,sep = ''))   }} #在每个文件夹下分别生成一个文件夹--------------- for (i in 1:10) {   a<-paste('外文件夹',i,sep = '','/内文件夹')   print(a)   dir.create(paste('外文件夹',i,sep = '','/内文件夹'))#相当于又加了个路径}#[1] "外文件夹1/内文件夹"#[1] "外文件夹2/内文件夹"#[1] "外文件夹3/内文件夹"#[1] "外文件夹4/内文件夹"#[1] "外文件夹5/内文件夹"#[1] "外文件夹6/内文件夹"#[1] "外文件夹7/内文件夹"#[1] "外文件夹8/内文件夹"#[1] "外文件夹9/内文件夹"#[1] "外文件夹10/内文件夹"#列出文件树------------------------------------system("tree")#卷 新加卷 的文件夹 PATH 列表#卷序列号为 3001-56A6#B:.#├─data#├─test#├─外文件夹1#│  └─内文件夹#├─外文件夹10#│  └─内文件夹#├─外文件夹2#│  └─内文件夹#├─外文件夹3#│  └─内文件夹#├─外文件夹4#│  └─内文件夹#├─外文件夹5#│  └─内文件夹#├─外文件夹6#│  └─内文件夹#├─外文件夹7#│  └─内文件夹#├─外文件夹8#│  └─内文件夹#├─外文件夹9#│  └─内文件夹#└─月数据格点数据集#   ├─气温#    └─降水#[1] 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10、时间-amp-计算运算效率"><a href="#10、时间-amp-计算运算效率" class="headerlink" title="10、时间&amp;计算运算效率"></a>10、时间&amp;计算运算效率</h3><h4 id="①proc-time"><a href="#①proc-time" class="headerlink" title="①proc.time()"></a>①proc.time()</h4><pre class="line-numbers language-R"><code class="language-R">#计算代码运行时间,设置t1为开始时间t1<-proc.time()…………代码块……t2<-proc.time()t=t2-t1print(paste0("运行时间为 ",t[3][[1]],' 秒')) #不清楚t[3][[1]]什么含义<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="②date-、Sys-time-和difftime"><a href="#②date-、Sys-time-和difftime" class="headerlink" title="②date()、Sys.time()和difftime()"></a>②date()、Sys.time()和difftime()</h4><pre class="line-numbers language-R"><code class="language-R">> #有关时间运算----> #第一种> date()[1] "Mon Mar 16 22:21:13 2020"> > m1=Sys.time()> m1[1] "2020-03-16 22:21:13 CST"> m2=Sys.time()> difftime(m1,m2,units = "auto") #时间差Time difference of -0.1538639 secs> > t2<-proc.time()> t2  用户   系统   流逝   3.59   0.76 203.90<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="11、source"><a href="#11、source" class="headerlink" title="11、source()"></a>11、source()</h3><p>引用并运行其他位置的代码文件</p><pre><code>source(&quot;B:/Temps/降水年总和批量输出.R&quot;,encoding=&#39;GB18030&#39;)</code></pre><hr><h2 id="二、Plots图表"><a href="#二、Plots图表" class="headerlink" title="二、Plots图表"></a>二、Plots图表</h2><h3 id="读取数据文件"><a href="#读取数据文件" class="headerlink" title="读取数据文件"></a>读取数据文件</h3><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> rm<span class="token punctuation">(</span>list<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> data<span class="token operator">=</span>read.csv<span class="token punctuation">(</span><span class="token string">"B:/Temp1/高考.csv"</span><span class="token punctuation">,</span>header<span class="token operator">=</span>T<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#读取csv数据,还有read.table</span><span class="token operator">></span> data   <span class="token comment" spellcheck="true">#查看数据</span>   地区 年份 中考人数 高考人数<span class="token number">1</span>  河北 <span class="token number">2000</span>      <span class="token number">330</span>      <span class="token number">400</span><span class="token number">2</span>  河北 <span class="token number">2001</span>      <span class="token number">332</span>      <span class="token number">405</span><span class="token number">3</span>  河北 <span class="token number">2002</span>      <span class="token number">334</span>      <span class="token number">410</span><span class="token number">4</span>  河北 <span class="token number">2003</span>      <span class="token number">336</span>      <span class="token number">415</span><span class="token number">5</span>  河北 <span class="token number">2004</span>      <span class="token number">338</span>      <span class="token number">420</span><span class="token number">6</span>  河北 <span class="token number">2005</span>      <span class="token number">340</span>      <span class="token number">425</span><span class="token number">7</span>  河南 <span class="token number">2000</span>      <span class="token number">360</span>      <span class="token number">430</span><span class="token number">8</span>  河南 <span class="token number">2001</span>      <span class="token number">365</span>      <span class="token number">435</span><span class="token number">9</span>  河南 <span class="token number">2002</span>      <span class="token number">370</span>      <span class="token number">440</span><span class="token number">10</span> 河南 <span class="token number">2003</span>      <span class="token number">375</span>      <span class="token number">445</span><span class="token number">11</span> 河南 <span class="token number">2004</span>      <span class="token number">380</span>      <span class="token number">450</span><span class="token number">12</span> 河南 <span class="token number">2005</span>      <span class="token number">385</span>      <span class="token number">455</span><span class="token operator">></span> colnames<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"地区"</span>     <span class="token string">"年份"</span>     <span class="token string">"中考人数"</span> <span class="token string">"高考人数"</span><span class="token operator">></span> colnames<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">&lt;-</span>c<span class="token punctuation">(</span><span class="token string">'Region'</span><span class="token punctuation">,</span><span class="token string">'Year'</span><span class="token punctuation">,</span><span class="token string">'ZhongKao'</span><span class="token punctuation">,</span><span class="token string">'GaoKao'</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#修改列名</span><span class="token operator">></span> colnames<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"Region"</span>   <span class="token string">"Year"</span>     <span class="token string">"ZhongKao"</span> <span class="token string">"GaoKao"</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="提取子集、去掉指定列"><a href="#提取子集、去掉指定列" class="headerlink" title="提取子集、去掉指定列"></a>提取子集、去掉指定列</h3><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> data_HB<span class="token operator">&lt;-</span>subset<span class="token punctuation">(</span>data<span class="token punctuation">,</span>Region<span class="token operator">==</span><span class="token string">'河北'</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#提取Region为河北的子集</span><span class="token operator">></span> data_HB  Region Year ZhongKao GaoKao<span class="token number">1</span>   河北 <span class="token number">2000</span>      <span class="token number">330</span>    <span class="token number">400</span><span class="token number">2</span>   河北 <span class="token number">2001</span>      <span class="token number">332</span>    <span class="token number">405</span><span class="token number">3</span>   河北 <span class="token number">2002</span>      <span class="token number">334</span>    <span class="token number">410</span><span class="token number">4</span>   河北 <span class="token number">2003</span>      <span class="token number">336</span>    <span class="token number">415</span><span class="token number">5</span>   河北 <span class="token number">2004</span>      <span class="token number">338</span>    <span class="token number">420</span><span class="token number">6</span>   河北 <span class="token number">2005</span>      <span class="token number">340</span>    <span class="token number">425</span><span class="token operator">></span> write.csv<span class="token punctuation">(</span>data_HB<span class="token punctuation">,</span><span class="token string">"B:/Temp1/A/子集河北.csv"</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#还有write.table</span><span class="token comment" spellcheck="true"># write.table(data_HB,"B:/Temp1/A/子集河北0.txt",append = T) #追加，下有详细说明</span><span class="token operator">></span> dataNoYear<span class="token operator">&lt;-</span>subset<span class="token punctuation">(</span>data<span class="token punctuation">,</span>select <span class="token operator">=</span> <span class="token operator">-</span>Year<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#去掉Year列的子集，有减号</span><span class="token operator">></span> dataNoYear   <span class="token comment" spellcheck="true">#查看结果</span>   Region ZhongKao GaoKao<span class="token number">1</span>    河北      <span class="token number">330</span>    <span class="token number">400</span><span class="token number">2</span>    河北      <span class="token number">332</span>    <span class="token number">405</span><span class="token number">3</span>    河北      <span class="token number">334</span>    <span class="token number">410</span><span class="token number">4</span>    河北      <span class="token number">336</span>    <span class="token number">415</span><span class="token number">5</span>    河北      <span class="token number">338</span>    <span class="token number">420</span><span class="token number">6</span>    河北      <span class="token number">340</span>    <span class="token number">425</span><span class="token number">7</span>    河南      <span class="token number">360</span>    <span class="token number">430</span><span class="token number">8</span>    河南      <span class="token number">365</span>    <span class="token number">435</span><span class="token number">9</span>    河南      <span class="token number">370</span>    <span class="token number">440</span><span class="token number">10</span>   河南      <span class="token number">375</span>    <span class="token number">445</span><span class="token number">11</span>   河南      <span class="token number">380</span>    <span class="token number">450</span><span class="token number">12</span>   河南      <span class="token number">385</span>    <span class="token number">455</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>write.table的append参数</p><pre class="line-numbers language-r"><code class="language-r"> write.table<span class="token punctuation">(</span>data_HB<span class="token punctuation">,</span><span class="token string">"B:/Temp1/A/子集河北0.txt"</span><span class="token punctuation">,</span>append <span class="token operator">=</span> T<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#追加</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输出结果</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Post/R/%E4%B8%80004.JPG" alt=""></p><h3 id="Plot"><a href="#Plot" class="headerlink" title="Plot"></a>Plot</h3><pre class="line-numbers language-r"><code class="language-r">View<span class="token punctuation">(</span>data_HB<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#查看data_HB</span><span class="token operator">></span> plot<span class="token punctuation">(</span>data_HB<span class="token operator">$</span>Year<span class="token punctuation">,</span>data_HB<span class="token operator">$</span>ZhongKao<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>结果：</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Post/RRplot1.jpeg" alt=""></p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> a<span class="token operator">&lt;-</span><span class="token number">2000</span><span class="token operator">:</span><span class="token number">2018</span><span class="token operator">></span> length<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">19</span><span class="token operator">></span> b<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>runif<span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> plot<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">"o"</span><span class="token punctuation">,</span>pch<span class="token operator">=</span><span class="token number">21</span><span class="token punctuation">,</span>bg<span class="token operator">=</span><span class="token string">"pink"</span><span class="token punctuation">,</span>cex<span class="token operator">=</span><span class="token number">1.3</span><span class="token punctuation">,</span>lty<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>lwd<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>main <span class="token operator">=</span><span class="token string">"2000-2018年历年高考报考人数"</span><span class="token punctuation">,</span>col.main<span class="token operator">=</span><span class="token string">"black"</span><span class="token punctuation">,</span> font.main<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>xlab <span class="token operator">=</span><span class="token string">"年份/年"</span><span class="token punctuation">,</span> ylab <span class="token operator">=</span> <span class="token string">"人数/万"</span><span class="token punctuation">,</span> col.lab<span class="token operator">=</span>rgb<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>font.lab<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>xlim <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span><span class="token number">2018</span><span class="token punctuation">)</span><span class="token punctuation">,</span>col<span class="token operator">=</span><span class="token string">"blue"</span><span class="token punctuation">,</span>bty<span class="token operator">=</span><span class="token string">"l"</span><span class="token punctuation">)</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#a横坐标</span><span class="token comment" spellcheck="true">#b纵坐标</span><span class="token comment" spellcheck="true">#type节点类型</span><span class="token comment" spellcheck="true">#……</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>各参数详解</strong></p><blockquote><p>type为类型。</p><p>bg为节点底色<br>cex为节点大小<br>lty=6为线条类型，实线，虚线……<br>lwd=2为线条粗细<br>main为表格标题<br>col.main=”black”为标题字体颜色为黑色<br>ylab = “人数/万”为纵坐标标题<br>col.lab=rgb(0,0.5,0.5)为纵坐标标题字体颜色<br>font.lab=2为纵坐标标题字体大小</p><p>xlim = c(2000,2018),col=”blue”,bty=”l”没细追究，嘻嘻</p></blockquote><p><strong>注意</strong></p><p>不能这么赋值。</p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> a<span class="token operator">=</span><span class="token number">2000</span><span class="token operator">:</span><span class="token number">2018</span>Warning messages<span class="token operator">:</span><span class="token number">1</span><span class="token operator">:</span> In doTryCatch<span class="token punctuation">(</span>return<span class="token punctuation">(</span>expr<span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> parentenv<span class="token punctuation">,</span> handler<span class="token punctuation">)</span> <span class="token operator">:</span>  显示串列没有完全被刷新<span class="token number">2</span><span class="token operator">:</span> In doTryCatch<span class="token punctuation">(</span>return<span class="token punctuation">(</span>expr<span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> parentenv<span class="token punctuation">,</span> handler<span class="token punctuation">)</span> <span class="token operator">:</span>  invalid graphics state<span class="token number">3</span><span class="token operator">:</span> In doTryCatch<span class="token punctuation">(</span>return<span class="token punctuation">(</span>expr<span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> parentenv<span class="token punctuation">,</span> handler<span class="token punctuation">)</span> <span class="token operator">:</span>  invalid graphics state<span class="token number">4</span><span class="token operator">:</span> In doTryCatch<span class="token punctuation">(</span>return<span class="token punctuation">(</span>expr<span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> parentenv<span class="token punctuation">,</span> handler<span class="token punctuation">)</span> <span class="token operator">:</span>  显示串列没有完全被刷新<span class="token number">5</span><span class="token operator">:</span> In doTryCatch<span class="token punctuation">(</span>return<span class="token punctuation">(</span>expr<span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> parentenv<span class="token punctuation">,</span> handler<span class="token punctuation">)</span> <span class="token operator">:</span>  invalid graphics state<span class="token number">6</span><span class="token operator">:</span> In doTryCatch<span class="token punctuation">(</span>return<span class="token punctuation">(</span>expr<span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> parentenv<span class="token punctuation">,</span> handler<span class="token punctuation">)</span> <span class="token operator">:</span>  invalid graphics state<span class="token operator">></span> a<span class="token operator">&lt;-</span><span class="token number">2000</span><span class="token operator">:</span><span class="token number">2018</span><span class="token operator">></span> length<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">19</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在RStudio的Plots中结果出图</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Post/R/%E4%B8%80Rplot2.jpeg" alt=""></p><hr><h3 id="输出Plot图-有问题【悬而未决】"><a href="#输出Plot图-有问题【悬而未决】" class="headerlink" title="输出Plot图  (有问题【悬而未决】)"></a>输出Plot图  (有问题【悬而未决】)</h3><p>不能在Plots和输出文件中同时输出</p><p>如下则只能输出文件，在Plots中不能显示</p><pre class="line-numbers language-r"><code class="language-r">a<span class="token operator">&lt;-</span><span class="token number">2000</span><span class="token operator">:</span><span class="token number">2018</span>length<span class="token punctuation">(</span>a<span class="token punctuation">)</span>b<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>runif<span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">)</span>tiff<span class="token punctuation">(</span>file<span class="token operator">=</span><span class="token string">"B:/Temp1/d.tif"</span><span class="token punctuation">)</span>plot<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">"o"</span><span class="token punctuation">,</span>pch<span class="token operator">=</span><span class="token number">21</span><span class="token punctuation">,</span>bg<span class="token operator">=</span><span class="token string">"pink"</span><span class="token punctuation">,</span>cex<span class="token operator">=</span><span class="token number">1.3</span><span class="token punctuation">,</span>lty<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>lwd<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>main <span class="token operator">=</span><span class="token string">"2000-2018年历年高考报考人数"</span><span class="token punctuation">,</span>col.main<span class="token operator">=</span><span class="token string">"black"</span><span class="token punctuation">,</span> font.main<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>xlab <span class="token operator">=</span><span class="token string">"年份/年"</span><span class="token punctuation">,</span> ylab <span class="token operator">=</span> <span class="token string">"人数/万"</span><span class="token punctuation">,</span> col.lab<span class="token operator">=</span>rgb<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>font.lab<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>xlim <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span><span class="token number">2018</span><span class="token punctuation">)</span><span class="token punctuation">,</span>col<span class="token operator">=</span><span class="token string">"blue"</span><span class="token punctuation">,</span>bty<span class="token operator">=</span><span class="token string">"l"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#tiff(file="B:/Temp1/d.tif")</span>dev.off<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以下则只能在Plots中输出，文件中为空白图像</p><pre class="line-numbers language-r"><code class="language-r">a<span class="token operator">&lt;-</span><span class="token number">2000</span><span class="token operator">:</span><span class="token number">2018</span>length<span class="token punctuation">(</span>a<span class="token punctuation">)</span>b<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>runif<span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plot<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">"o"</span><span class="token punctuation">,</span>pch<span class="token operator">=</span><span class="token number">21</span><span class="token punctuation">,</span>bg<span class="token operator">=</span><span class="token string">"pink"</span><span class="token punctuation">,</span>cex<span class="token operator">=</span><span class="token number">1.3</span><span class="token punctuation">,</span>lty<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>lwd<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>main <span class="token operator">=</span><span class="token string">"2000-2018年历年高考报考人数"</span><span class="token punctuation">,</span>col.main<span class="token operator">=</span><span class="token string">"black"</span><span class="token punctuation">,</span> font.main<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>xlab <span class="token operator">=</span><span class="token string">"年份/年"</span><span class="token punctuation">,</span> ylab <span class="token operator">=</span> <span class="token string">"人数/万"</span><span class="token punctuation">,</span> col.lab<span class="token operator">=</span>rgb<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>font.lab<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>xlim <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span><span class="token number">2018</span><span class="token punctuation">)</span><span class="token punctuation">,</span>col<span class="token operator">=</span><span class="token string">"blue"</span><span class="token punctuation">,</span>bty<span class="token operator">=</span><span class="token string">"l"</span><span class="token punctuation">)</span>tiff<span class="token punctuation">(</span>file<span class="token operator">=</span><span class="token string">"B:/Temp1/d.tif"</span><span class="token punctuation">)</span>dev.off<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在前面加了dev.new()，然鹅还是不行。</p><pre class="line-numbers language-r"><code class="language-r">dev.new<span class="token punctuation">(</span><span class="token punctuation">)</span>a<span class="token operator">&lt;-</span><span class="token number">2000</span><span class="token operator">:</span><span class="token number">2018</span>length<span class="token punctuation">(</span>a<span class="token punctuation">)</span>b<span class="token operator">&lt;-</span>c<span class="token punctuation">(</span>runif<span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">)</span>tiff<span class="token punctuation">(</span>file<span class="token operator">=</span><span class="token string">"B:/Temp1/d.tif"</span><span class="token punctuation">)</span>plot<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">"o"</span><span class="token punctuation">,</span>pch<span class="token operator">=</span><span class="token number">21</span><span class="token punctuation">,</span>bg<span class="token operator">=</span><span class="token string">"pink"</span><span class="token punctuation">,</span>cex<span class="token operator">=</span><span class="token number">1.3</span><span class="token punctuation">,</span>lty<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>lwd<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>main <span class="token operator">=</span><span class="token string">"2000-2018年历年高考报考人数"</span><span class="token punctuation">,</span>col.main<span class="token operator">=</span><span class="token string">"black"</span><span class="token punctuation">,</span> font.main<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>xlab <span class="token operator">=</span><span class="token string">"年份/年"</span><span class="token punctuation">,</span> ylab <span class="token operator">=</span> <span class="token string">"人数/万"</span><span class="token punctuation">,</span> col.lab<span class="token operator">=</span>rgb<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>font.lab<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>xlim <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span><span class="token number">2018</span><span class="token punctuation">)</span><span class="token punctuation">,</span>col<span class="token operator">=</span><span class="token string">"blue"</span><span class="token punctuation">,</span>bty<span class="token operator">=</span><span class="token string">"l"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#tiff(file="B:/Temp1/d.tif")</span>dev.off<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="seq函数七十二变"><a href="#seq函数七十二变" class="headerlink" title="seq函数七十二变"></a>seq函数七十二变</h4><ul><li><p>seq(from)</p></li><li><p>seq(from, to)</p></li><li><p>seq(from, to, by= )</p></li><li><p>seq(along.with= )</p></li><li><p>seq(length.out= )</p></li><li><p>seq(from, to, length.out= )</p></li></ul><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> seq<span class="token punctuation">(</span>from<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>to<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span> <span class="token number">13</span> <span class="token number">14</span> <span class="token number">15</span> <span class="token number">16</span> <span class="token number">17</span> <span class="token number">18</span> <span class="token number">19</span> <span class="token number">20</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>seq(from)</strong></p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> seq<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span>  <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span> <span class="token number">13</span> <span class="token number">14</span> <span class="token number">15</span> <span class="token number">16</span> <span class="token number">17</span> <span class="token number">18</span> <span class="token number">19</span> <span class="token number">20</span> <span class="token number">21</span> <span class="token number">22</span> <span class="token number">23</span> <span class="token number">24</span> <span class="token number">25</span> <span class="token number">26</span> <span class="token number">27</span> <span class="token number">28</span> <span class="token number">29</span> <span class="token number">30</span> <span class="token number">31</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token number">32</span> <span class="token number">33</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">36</span> <span class="token number">37</span> <span class="token number">38</span> <span class="token number">39</span> <span class="token number">40</span> <span class="token number">41</span> <span class="token number">42</span> <span class="token number">43</span> <span class="token number">44</span> <span class="token number">45</span> <span class="token number">46</span> <span class="token number">47</span> <span class="token number">48</span> <span class="token number">49</span> <span class="token number">50</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>seq(from, to)</strong></p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> seq<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span>  <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span><span class="token operator">></span> seq<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">10</span>  <span class="token number">9</span>  <span class="token number">8</span>  <span class="token number">7</span>  <span class="token number">6</span>  <span class="token number">5</span>  <span class="token number">4</span>  <span class="token number">3</span>  <span class="token number">2</span>  <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>seq(from, to, by= )</strong></p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> seq<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span> <span class="token number">3</span> <span class="token number">5</span> <span class="token number">7</span> <span class="token number">9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>seq(along.with= )</strong></p><p>along.with：表示生成的向量为现有一向量元素的索引</p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> x <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">,</span> <span class="token number">5.2</span><span class="token punctuation">,</span> <span class="token number">6.3</span><span class="token punctuation">,</span> <span class="token number">4.6</span><span class="token punctuation">)</span><span class="token operator">></span> a<span class="token operator">&lt;-</span>seq<span class="token punctuation">(</span>along.with<span class="token operator">=</span>x<span class="token punctuation">)</span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>seq(length.out= )</strong></p><p>输出限定范围内的leng.out个数，</p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> seq<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span>  <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span> <span class="token number">13</span> <span class="token number">14</span> <span class="token number">15</span> <span class="token number">16</span> <span class="token number">17</span> <span class="token number">18</span> <span class="token number">19</span> <span class="token number">20</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>seq(from, to, length.out= )</strong></p><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> seq<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span>length.out <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#输出1-10三个数。取中间值</span>  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">1.0</span>  <span class="token number">5.5</span> <span class="token number">10.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="已知错误"><a href="#已知错误" class="headerlink" title="已知错误"></a>已知错误</h3><ol><li><p>中文路径。</p><p> 尽量不要用中文路径，中文文件名称。在Plot中，输出路径为中文路径，导致输出图片为空白</p></li><li><p>使用Plot画布无法显示，出现Error。</p><p>将画布拖大即可</p></li></ol><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> plot<span class="token punctuation">(</span>data<span class="token operator">$</span>Year<span class="token punctuation">,</span>data<span class="token operator">$</span>ZhongKao<span class="token punctuation">)</span>Error <span class="token keyword">in</span> plot.new<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> figure margins too large<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="三、Dataframe"><a href="#三、Dataframe" class="headerlink" title="三、Dataframe"></a>三、Dataframe</h2><pre class="line-numbers language-r"><code class="language-r"><span class="token operator">></span> <span class="token comment" spellcheck="true">#Dataframe-------------------------------</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#Dataframe</span><span class="token operator">></span> <span class="token comment" spellcheck="true">##创建Dataframe函数</span><span class="token operator">></span> ls<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"a"</span>  <span class="token string">"df"</span> <span class="token string">"i"</span>  <span class="token string">"l"</span> <span class="token operator">></span> rm<span class="token punctuation">(</span>list <span class="token operator">=</span> ls<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> ls<span class="token punctuation">(</span><span class="token punctuation">)</span>character<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">></span> library<span class="token punctuation">(</span>dplyr<span class="token punctuation">)</span>      <span class="token comment" spellcheck="true">#载入程辑包：‘dplyr’</span><span class="token operator">></span> options<span class="token punctuation">(</span>digits <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#保留整数</span><span class="token operator">></span> set.seed<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#设置种子函数</span><span class="token operator">></span> df<span class="token operator">&lt;-</span>data.frame<span class="token punctuation">(</span>ID<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token operator">+</span>                Class<span class="token operator">=</span>rep<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#对数组123，重复4遍</span><span class="token operator">+</span>                Chinese<span class="token operator">=</span>runif<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span>min <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>max <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#runif随机产生12个0-100的数</span><span class="token operator">+</span>                Math<span class="token operator">=</span>runif<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span>min <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>max <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>                English<span class="token operator">=</span>runif<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span>min <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>max <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token punctuation">)</span><span class="token operator">></span> df  <span class="token comment" spellcheck="true">#查看Dataframe</span>   ID Class Chinese Math English<span class="token number">1</span>   <span class="token number">1</span>     <span class="token number">1</span>      <span class="token number">27</span>   <span class="token number">69</span>      <span class="token number">27</span><span class="token number">2</span>   <span class="token number">2</span>     <span class="token number">2</span>      <span class="token number">37</span>   <span class="token number">38</span>      <span class="token number">39</span><span class="token number">3</span>   <span class="token number">3</span>     <span class="token number">3</span>      <span class="token number">57</span>   <span class="token number">77</span>       <span class="token number">1</span><span class="token number">4</span>   <span class="token number">4</span>     <span class="token number">1</span>      <span class="token number">91</span>   <span class="token number">50</span>      <span class="token number">38</span><span class="token number">5</span>   <span class="token number">5</span>     <span class="token number">2</span>      <span class="token number">20</span>   <span class="token number">72</span>      <span class="token number">87</span><span class="token number">6</span>   <span class="token number">6</span>     <span class="token number">3</span>      <span class="token number">90</span>   <span class="token number">99</span>      <span class="token number">34</span><span class="token number">7</span>   <span class="token number">7</span>     <span class="token number">1</span>      <span class="token number">94</span>   <span class="token number">38</span>      <span class="token number">48</span><span class="token number">8</span>   <span class="token number">8</span>     <span class="token number">2</span>      <span class="token number">66</span>   <span class="token number">78</span>      <span class="token number">60</span><span class="token number">9</span>   <span class="token number">9</span>     <span class="token number">3</span>      <span class="token number">63</span>   <span class="token number">93</span>      <span class="token number">49</span><span class="token number">10</span> <span class="token number">10</span>     <span class="token number">1</span>       <span class="token number">6</span>   <span class="token number">21</span>      <span class="token number">19</span><span class="token number">11</span> <span class="token number">11</span>     <span class="token number">2</span>      <span class="token number">21</span>   <span class="token number">65</span>      <span class="token number">83</span><span class="token number">12</span> <span class="token number">12</span>     <span class="token number">3</span>      <span class="token number">18</span>   <span class="token number">13</span>      <span class="token number">67</span><span class="token operator">></span> <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">1</span><span class="token operator">:</span>ncol<span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">+</span>   df<span class="token punctuation">[</span><span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token operator">&lt;-</span>as.integer<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#将每列变为integer类型</span><span class="token operator">+</span> <span class="token punctuation">}</span><span class="token operator">></span> df   ID Class Chinese Math English<span class="token number">1</span>   <span class="token number">1</span>     <span class="token number">1</span>      <span class="token number">26</span>   <span class="token number">68</span>      <span class="token number">26</span><span class="token number">2</span>   <span class="token number">2</span>     <span class="token number">2</span>      <span class="token number">37</span>   <span class="token number">38</span>      <span class="token number">38</span><span class="token number">3</span>   <span class="token number">3</span>     <span class="token number">3</span>      <span class="token number">57</span>   <span class="token number">76</span>       <span class="token number">1</span><span class="token number">4</span>   <span class="token number">4</span>     <span class="token number">1</span>      <span class="token number">90</span>   <span class="token number">49</span>      <span class="token number">38</span><span class="token number">5</span>   <span class="token number">5</span>     <span class="token number">2</span>      <span class="token number">20</span>   <span class="token number">71</span>      <span class="token number">86</span><span class="token number">6</span>   <span class="token number">6</span>     <span class="token number">3</span>      <span class="token number">89</span>   <span class="token number">99</span>      <span class="token number">34</span><span class="token number">7</span>   <span class="token number">7</span>     <span class="token number">1</span>      <span class="token number">94</span>   <span class="token number">38</span>      <span class="token number">48</span><span class="token number">8</span>   <span class="token number">8</span>     <span class="token number">2</span>      <span class="token number">66</span>   <span class="token number">77</span>      <span class="token number">59</span><span class="token number">9</span>   <span class="token number">9</span>     <span class="token number">3</span>      <span class="token number">62</span>   <span class="token number">93</span>      <span class="token number">49</span><span class="token number">10</span> <span class="token number">10</span>     <span class="token number">1</span>       <span class="token number">6</span>   <span class="token number">21</span>      <span class="token number">18</span><span class="token number">11</span> <span class="token number">11</span>     <span class="token number">2</span>      <span class="token number">20</span>   <span class="token number">65</span>      <span class="token number">82</span><span class="token number">12</span> <span class="token number">12</span>     <span class="token number">3</span>      <span class="token number">17</span>   <span class="token number">12</span>      <span class="token number">66</span><span class="token operator">></span> ncol<span class="token punctuation">(</span>df<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#查询列数</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">5</span><span class="token operator">></span> <span class="token operator">></span> l<span class="token operator">=</span><span class="token number">2.3</span><span class="token operator">></span> as.integer<span class="token punctuation">(</span>l<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#转化为整型</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">2</span><span class="token operator">></span> <span class="token operator">></span> <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">1</span><span class="token operator">:</span>ncol<span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">#将每一行输出</span><span class="token operator">+</span>   print<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token punctuation">}</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span>  <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">26</span> <span class="token number">37</span> <span class="token number">57</span> <span class="token number">90</span> <span class="token number">20</span> <span class="token number">89</span> <span class="token number">94</span> <span class="token number">66</span> <span class="token number">62</span>  <span class="token number">6</span> <span class="token number">20</span> <span class="token number">17</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">68</span> <span class="token number">38</span> <span class="token number">76</span> <span class="token number">49</span> <span class="token number">71</span> <span class="token number">99</span> <span class="token number">38</span> <span class="token number">77</span> <span class="token number">93</span> <span class="token number">21</span> <span class="token number">65</span> <span class="token number">12</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">26</span> <span class="token number">38</span>  <span class="token number">1</span> <span class="token number">38</span> <span class="token number">86</span> <span class="token number">34</span> <span class="token number">48</span> <span class="token number">59</span> <span class="token number">49</span> <span class="token number">18</span> <span class="token number">82</span> <span class="token number">66</span><span class="token operator">></span> <span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">##花式查询</span><span class="token operator">></span> df<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">#第二行</span>  ID Class Chinese Math English<span class="token number">2</span>  <span class="token number">2</span>     <span class="token number">2</span>      <span class="token number">37</span>   <span class="token number">38</span>      <span class="token number">38</span><span class="token operator">></span> df<span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">#第四列</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">68</span> <span class="token number">38</span> <span class="token number">76</span> <span class="token number">49</span> <span class="token number">71</span> <span class="token number">99</span> <span class="token number">38</span> <span class="token number">77</span> <span class="token number">93</span> <span class="token number">21</span> <span class="token number">65</span> <span class="token number">12</span><span class="token operator">></span> df<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'Math'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">76</span><span class="token operator">></span> df<span class="token operator">$</span>Math<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">76</span><span class="token operator">></span> <span class="token operator">></span> df<span class="token operator">$</span>Chinese  <span class="token comment" spellcheck="true">#Chinese这一列</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">26</span> <span class="token number">37</span> <span class="token number">57</span> <span class="token number">90</span> <span class="token number">20</span> <span class="token number">89</span> <span class="token number">94</span> <span class="token number">66</span> <span class="token number">62</span>  <span class="token number">6</span> <span class="token number">20</span> <span class="token number">17</span><span class="token operator">></span> df<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">#第三列，(也是Chinese这一列)，会有表头输出</span>   Chinese<span class="token number">1</span>       <span class="token number">26</span><span class="token number">2</span>       <span class="token number">37</span><span class="token number">3</span>       <span class="token number">57</span><span class="token number">4</span>       <span class="token number">90</span><span class="token number">5</span>       <span class="token number">20</span><span class="token number">6</span>       <span class="token number">89</span><span class="token number">7</span>       <span class="token number">94</span><span class="token number">8</span>       <span class="token number">66</span><span class="token number">9</span>       <span class="token number">62</span><span class="token number">10</span>       <span class="token number">6</span><span class="token number">11</span>      <span class="token number">20</span><span class="token number">12</span>      <span class="token number">17</span><span class="token operator">></span> <span class="token operator">></span> typeof<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#查看数值类型</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"integer"</span><span class="token operator">></span> class<span class="token punctuation">(</span>df<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#变量类型</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"data.frame"</span><span class="token operator">></span> <span class="token operator">></span> nrow<span class="token punctuation">(</span>df<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#行数</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">12</span><span class="token operator">></span> ncol<span class="token punctuation">(</span>df<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#列数</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">5</span><span class="token operator">></span> a<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token operator">></span> length<span class="token punctuation">(</span>a<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#长度</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">5</span><span class="token operator">></span> <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">1</span><span class="token operator">:</span>length<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">+</span>   print<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">2</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">3</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">4</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">5</span><span class="token operator">></span> <span class="token operator">></span> <span class="token comment" spellcheck="true">#which语句，查找符合条件的行</span><span class="token operator">></span> df   ID Class Chinese Math English<span class="token number">1</span>   <span class="token number">1</span>     <span class="token number">1</span>      <span class="token number">26</span>   <span class="token number">68</span>      <span class="token number">26</span><span class="token number">2</span>   <span class="token number">2</span>     <span class="token number">2</span>      <span class="token number">37</span>   <span class="token number">38</span>      <span class="token number">38</span><span class="token number">3</span>   <span class="token number">3</span>     <span class="token number">3</span>      <span class="token number">57</span>   <span class="token number">76</span>       <span class="token number">1</span><span class="token number">4</span>   <span class="token number">4</span>     <span class="token number">1</span>      <span class="token number">90</span>   <span class="token number">49</span>      <span class="token number">38</span><span class="token number">5</span>   <span class="token number">5</span>     <span class="token number">2</span>      <span class="token number">20</span>   <span class="token number">71</span>      <span class="token number">86</span><span class="token number">6</span>   <span class="token number">6</span>     <span class="token number">3</span>      <span class="token number">89</span>   <span class="token number">99</span>      <span class="token number">34</span><span class="token number">7</span>   <span class="token number">7</span>     <span class="token number">1</span>      <span class="token number">94</span>   <span class="token number">38</span>      <span class="token number">48</span><span class="token number">8</span>   <span class="token number">8</span>     <span class="token number">2</span>      <span class="token number">66</span>   <span class="token number">77</span>      <span class="token number">59</span><span class="token number">9</span>   <span class="token number">9</span>     <span class="token number">3</span>      <span class="token number">62</span>   <span class="token number">93</span>      <span class="token number">49</span><span class="token number">10</span> <span class="token number">10</span>     <span class="token number">1</span>       <span class="token number">6</span>   <span class="token number">21</span>      <span class="token number">18</span><span class="token number">11</span> <span class="token number">11</span>     <span class="token number">2</span>      <span class="token number">20</span>   <span class="token number">65</span>      <span class="token number">82</span><span class="token number">12</span> <span class="token number">12</span>     <span class="token number">3</span>      <span class="token number">17</span>   <span class="token number">12</span>      <span class="token number">66</span><span class="token operator">></span> df<span class="token punctuation">[</span>which<span class="token punctuation">(</span>df<span class="token operator">$</span>ID<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span>  ID Class Chinese Math English<span class="token number">4</span>  <span class="token number">4</span>     <span class="token number">1</span>      <span class="token number">90</span>   <span class="token number">49</span>      <span class="token number">38</span><span class="token operator">></span> df<span class="token punctuation">[</span>which<span class="token punctuation">(</span>df<span class="token operator">$</span>Chinese<span class="token operator">>=</span><span class="token number">57</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'ID'</span><span class="token punctuation">]</span>   <span class="token comment" spellcheck="true">#查询Chinese>=57的ID是多少</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="更改R包默认安装路径-未试"><a href="#更改R包默认安装路径-未试" class="headerlink" title="更改R包默认安装路径(未试)"></a>更改R包默认安装路径(未试)</h3><p>#新建一个初始启动文件<br>file.edit(’~/.Rprofile’)</p><p>#更改R包默认安装路径<br>.libPaths(“D:/Program Files/R/win-library/3.5”)<br>myPaths &lt;- c(“D:/Program Files/R/win-library/3.5”)<br>.libPaths(myPaths)</p><p>然后把代码复制到初始文件.Rprofile中。<br>重启R，即可。</p><hr><h2 id="四、批量生成文件夹"><a href="#四、批量生成文件夹" class="headerlink" title="四、批量生成文件夹"></a>四、批量生成文件夹</h2><h3 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h3><pre class="line-numbers language-R"><code class="language-R">#批量生成文件夹---------------------------------rm(list = ls())setwd("B:/Temp2/")for (i in 1:10) {  if (file.exists(paste('外文件夹',i,sep = '_'))) {    print("文件已经存在啦~")  }  else{    dir.create(paste('外文件夹',i,sep = '_'))  }}dir()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><blockquote><blockquote><p>#批量生成文件夹———————————<br>rm(list = ls())<br>setwd(“B:/Temp2/“)<br>for (i in 1:10) {</p><ul><li>if (file.exists(paste(‘外文件夹’,i,sep = ‘_’))) {</li><li>print(“文件已经存在啦~”)</li><li>}</li><li>else{</li><li>dir.create(paste(‘外文件夹’,i,sep = ‘_’))</li><li>}</li></ul></blockquote><ul><li>}<br>[1] “文件已经存在啦<del>“<br>[1] “文件已经存在啦</del>“<br>[1] “文件已经存在啦<del>“<br>[1] “文件已经存在啦</del>“<br>[1] “文件已经存在啦<del>“<br>[1] “文件已经存在啦</del>“<br>[1] “文件已经存在啦<del>“<br>[1] “文件已经存在啦</del>“<br>[1] “文件已经存在啦<del>“<br>[1] “文件已经存在啦</del>“</li></ul><blockquote><p>dir()<br> [1] “201401.tif”           “a1”                   “data”                 “test”                 “数据.zip”             “外文件夹_1”<br> [7] “外文件夹_10”          “外文件夹_2”           “外文件夹_3”           “外文件夹_4”           “外文件夹_5”           “外文件夹_6”<br>[13] “外文件夹_7”           “外文件夹_8”           “外文件夹_9”           “外文件夹1”            “外文件夹10”           “外文件夹2”<br>[19] “外文件夹3”            “外文件夹4”            “外文件夹5”            “外文件夹6”            “外文件夹7”            “外文件夹8”<br>[25] “外文件夹9”            “月数据格点数据集”     “月数据格点数据集.zip”</p></blockquote></blockquote><h2 id="五、批量新建子目录"><a href="#五、批量新建子目录" class="headerlink" title="五、批量新建子目录"></a>五、批量新建子目录</h2><h3 id="1、”笨”办法"><a href="#1、”笨”办法" class="headerlink" title="1、”笨”办法"></a>1、”笨”办法</h3><pre class="line-numbers language-R"><code class="language-R">#在每个文件夹下分别生成一个文件夹---------------rm(list = ls())setwd("B:/Temp2/")for (i in 1:10) {  a<-paste('外文件夹',i,sep = '','/内文件夹')  print(a)  if (file.exists(paste('外文件夹',i,sep = '','/内文件夹'))) {    print("文件已经存在啦~")  }  else{    dir.create(paste('外文件夹',i,sep = '','/内文件夹'))#相当于又加了个路径  }}system("tree")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果</p><blockquote><blockquote><p>#在每个文件夹下分别生成一个文件夹—————<br>rm(list = ls())<br>setwd(“B:/Temp2/“)<br>for (i in 1:10) {</p><ul><li>a&lt;-paste(‘外文件夹’,i,sep = ‘’,’/内文件夹’)</li><li>print(a)</li><li>if (file.exists(paste(‘外文件夹’,i,sep = ‘’,’/内文件夹’))) {</li><li>print(“文件已经存在啦~”)</li><li>}</li><li>else{</li><li>dir.create(paste(‘外文件夹’,i,sep = ‘’,’/内文件夹’))#相当于又加了个路径</li><li>}</li></ul></blockquote><ul><li>}<br>[1] “外文件夹1/内文件夹”<br>[1] “文件已经存在啦<del>“<br>[1] “外文件夹2/内文件夹”<br>[1] “文件已经存在啦</del>“<br>[1] “外文件夹3/内文件夹”<br>[1] “文件已经存在啦<del>“<br>[1] “外文件夹4/内文件夹”<br>[1] “文件已经存在啦</del>“<br>[1] “外文件夹5/内文件夹”<br>[1] “文件已经存在啦<del>“<br>[1] “外文件夹6/内文件夹”<br>[1] “文件已经存在啦</del>“<br>[1] “外文件夹7/内文件夹”<br>[1] “文件已经存在啦<del>“<br>[1] “外文件夹8/内文件夹”<br>[1] “文件已经存在啦</del>“<br>[1] “外文件夹9/内文件夹”<br>[1] “文件已经存在啦<del>“<br>[1] “外文件夹10/内文件夹”<br>[1] “文件已经存在啦</del>“<blockquote><p>system(“tree”)<br>卷 新加卷 的文件夹 PATH 列表<br>卷序列号为 3001-56A6<br>B:.<br>├─a1<br>│  └─b2<br>│      └─c3<br>├─data<br>├─test<br>│  └─3组李世昱组<br>│      ├─2017016427李世昱<br>│      │  ├─R脚本<br>│      │  └─tiff文件<br>│      ├─2017016427李世昱1<br>│      └─2017016427李世昱2<br>├─外文件夹1<br>│  └─内文件夹<br>├─外文件夹10<br>│  └─内文件夹<br>├─外文件夹2<br>│  └─内文件夹<br>├─外文件夹3<br>│  └─内文件夹<br>├─外文件夹4<br>│  └─内文件夹<br>├─外文件夹5<br>│  └─内文件夹<br>├─外文件夹6<br>│  └─内文件夹<br>├─外文件夹7<br>│  └─内文件夹<br>├─外文件夹8<br>│  └─内文件夹<br>├─外文件夹9<br>│  └─内文件夹<br>├─外文件夹_1<br>├─外文件夹_10<br>├─外文件夹_2<br>├─外文件夹_3<br>├─外文件夹_4<br>├─外文件夹_5<br>├─外文件夹_6<br>├─外文件夹_7<br>├─外文件夹_8<br>├─外文件夹_9<br>└─月数据格点数据集<br>├─气温<br>└─降水<br>[1] 0</p></blockquote></li></ul></blockquote><hr><p>system(“tree”)真是个有趣的操作</p><hr><h3 id="2、-star-巧方法"><a href="#2、-star-巧方法" class="headerlink" title="2、:star: 巧方法"></a>2、:star: 巧方法</h3><h4 id="使用recursive参数"><a href="#使用recursive参数" class="headerlink" title="使用recursive参数"></a>使用recursive参数</h4><pre class="line-numbers language-R"><code class="language-R">#创建一个3级子目录./a1/b2/c3setwd("B:/Temp2/")getwd()list.dirs()dir.create(path = "a1/b2/c3") #直接创建，出错dir.create(path="a1/b2/c3",recursive = TRUE)system("tree")list.dirs()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="控制台运行结果-1"><a href="#控制台运行结果-1" class="headerlink" title="控制台运行结果"></a>控制台运行结果</h4><blockquote><p>#创建一个3级子目录./a1/b2/c3<br>setwd(“B:/Temp2/“)<br>getwd()<br>[1] “B:/Temp2”<br>list.dirs()<br> [1] “.”                                            “./data”                                       “./test”<br> [4] “./test/3组李世昱组”                           “./test/3组李世昱组/2017016427李世昱”          “./test/3组李世昱组/2017016427李世昱/R脚本”<br> [7] “./test/3组李世昱组/2017016427李世昱/tiff文件” “./test/3组李世昱组/2017016427李世昱1”         “./test/3组李世昱组/2017016427李世昱2”<br>[10] “./外文件夹_1”                                 “./外文件夹_10”                                “./外文件夹_2”<br>[13] “./外文件夹_3”                                 “./外文件夹_4”                                 “./外文件夹_5”<br>[16] “./外文件夹_6”                                 “./外文件夹_7”                                 “./外文件夹_8”<br>[19] “./外文件夹_9”                                 “./外文件夹1”                                  “./外文件夹1/内文件夹”<br>[22] “./外文件夹10”                                 “./外文件夹10/内文件夹”                        “./外文件夹2”<br>[25] “./外文件夹2/内文件夹”                         “./外文件夹3”                                  “./外文件夹3/内文件夹”<br>[28] “./外文件夹4”                                  “./外文件夹4/内文件夹”                         “./外文件夹5”<br>[31] “./外文件夹5/内文件夹”                         “./外文件夹6”                                  “./外文件夹6/内文件夹”<br>[34] “./外文件夹7”                                  “./外文件夹7/内文件夹”                         “./外文件夹8”<br>[37] “./外文件夹8/内文件夹”                         “./外文件夹9”                                  “./外文件夹9/内文件夹”<br>[40] “./月数据格点数据集”                           “./月数据格点数据集/降水”                      “./月数据格点数据集/气温”<br>dir.create(path = “a1/b2/c3”) #直接创建，出错<br>Warning message:<br>In dir.create(path = “a1/b2/c3”) :<br>由于’No such file or directory’的原因，无法建立’a1\b2\c3’文件目录<br>dir.create(path=”a1/b2/c3”,recursive = TRUE)<br>system(“tree”)<br>卷 新加卷 的文件夹 PATH 列表<br>卷序列号为 3001-56A6<br>B:.<br>├─a1<br>│  └─b2<br>│      └─c3<br>├─data<br>├─test<br>│  └─3组李世昱组<br>│      ├─2017016427李世昱<br>│      │  ├─R脚本<br>│      │  └─tiff文件<br>│      ├─2017016427李世昱1<br>│      └─2017016427李世昱2<br>├─外文件夹1<br>│  └─内文件夹<br>├─外文件夹10<br>│  └─内文件夹<br>├─外文件夹2<br>│  └─内文件夹<br>├─外文件夹3<br>│  └─内文件夹<br>├─外文件夹4<br>│  └─内文件夹<br>├─外文件夹5<br>│  └─内文件夹<br>├─外文件夹6<br>│  └─内文件夹<br>├─外文件夹7<br>│  └─内文件夹<br>├─外文件夹8<br>│  └─内文件夹<br>├─外文件夹9<br>│  └─内文件夹<br>├─外文件夹_1<br>├─外文件夹_10<br>├─外文件夹_2<br>├─外文件夹_3<br>├─外文件夹_4<br>├─外文件夹_5<br>├─外文件夹_6<br>├─外文件夹_7<br>├─外文件夹_8<br>├─外文件夹_9<br>└─月数据格点数据集<br>├─气温<br>└─降水<br>[1] 0</p></blockquote><h2 id="Paste函数"><a href="#Paste函数" class="headerlink" title="Paste函数"></a>Paste函数</h2><blockquote><pre><code>paste(..., sep = &quot; &quot;, collapse = NULL)</code></pre><p><strong>…</strong> - 表示要组合的任何数量的参数。</p><p><strong>sep</strong> - 表示参数之间的分隔符。它是任选的。</p><p><strong>collapse</strong> - 用于消除两个字符串之间的空间。但不是在一个字符串的两个词的空间</p></blockquote><pre class="line-numbers language-R"><code class="language-R">paste("a","b",sep = "=")#注意到用等号分隔了paste("a",1:5,sep = "")#会自动每个元素与a相连paste("a",1:5,".pdf", sep = "")#比如想批量输出文件名#collapse用于消除两个字符串之间的空间。但不是在一个字符串的两个词的空间a<-"李世昱"b<-"一定会上岸"c<-"的！"paste(a,b,c,sep = "") paste("a","b",sep = "",collapse = "") <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>控制台运行结果</p><blockquote><p>paste(“a”,”b”,sep = “=”)#注意到用等号分隔了<br>[1] “a=b”</p><p>paste(“a”,1:5,sep = “”)#会自动每个元素与a相连<br>[1] “a1” “a2” “a3” “a4” “a5”</p><p>paste(“a”,1:5,”.pdf”, sep = “”)#比如想批量输出文件名<br>[1] “a1.pdf” “a2.pdf” “a3.pdf” “a4.pdf” “a5.pdf”</p><p>#collapse用于消除两个字符串之间的空间。但不是在一个字符串的两个词的空间<br>a&lt;-“李世昱”<br>b&lt;-“一定会上岸”<br>c&lt;-“的！”<br>paste(a,b,c,sep = “”)<br>[1] “李世昱一定会上岸的！”<br>paste(a,b,c,sep = “”,collapse = “”)<br>[1] “李世昱一定会上岸的！”</p></blockquote><p><strong>好像collapse并没有起什么作用:wheel_of_dharma:</strong></p><hr><h2 id="六、空间数据操作"><a href="#六、空间数据操作" class="headerlink" title="六、空间数据操作"></a>六、空间数据操作</h2><h3 id="shp"><a href="#shp" class="headerlink" title="shp"></a>shp</h3><h4 id="将CSV输出为shp"><a href="#将CSV输出为shp" class="headerlink" title="将CSV输出为shp"></a>将CSV输出为shp</h4><pre class="line-numbers language-R"><code class="language-R">rm(list = ls())setwd("B:/Temp2")#导包-------------------------------------library(maptools)library(rgdal)library(sp)#若无，则安装包----------------------------------#install.packages("maptools")#install.packages("rgdal")#install.packages("sp")#读取数据-------------------------------df<-read.csv("data/StationInfo.csv",header = T)#设定经纬度字段--------------------------coordinates(df)<-~Lon+Lat #设置投影参数-----------------------------proj4string(df)<-CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0") #设置投影#writeOGR函数导出数据----------------------writeOGR(df,         dsn = "B:/Temp2/test",#设置输出路径         layer = "stationinfo1",#设置保存名称         driver = "ESRI Shapefile",#设置输出类型         overwrite_layer = T #是否覆盖         )<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="raster"><a href="#raster" class="headerlink" title="raster"></a>raster</h3><h4 id="自造数据并plot造出来的raster"><a href="#自造数据并plot造出来的raster" class="headerlink" title="自造数据并plot造出来的raster"></a>自造数据并plot造出来的raster</h4><pre class="line-numbers language-R"><code class="language-R">rm(list = ls())library(raster)#生成矩阵，72行，128列，数值为1--------------------df<-matrix(nrow = 72,ncol = 128,1)#生成矩阵，72行，128列，数值为0-999之间随机的72个数-------------------#df<-matrix(nrow = 72,ncol = 128,runif(72,0,999))#生成raster数据-----------------------------------------------df1<-raster(df,#数据源            xmn=72,#x轴最小值            xmx=128,#x最大值            ymn=18,            ymx=54,            crs<-CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")#投影            )plot(df1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当自造数据为</p><blockquote><p>df&lt;-matrix(nrow = 72,ncol = 128,runif(72,0,999))</p></blockquote><p>其plot输出为</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Rraster.jpeg" alt=""></p><h4 id="输出raster——writeRaster函数"><a href="#输出raster——writeRaster函数" class="headerlink" title="输出raster——writeRaster函数"></a>输出raster——writeRaster函数</h4><pre class="line-numbers language-R"><code class="language-R">setwd("B:/Temp2/月数据格点数据集/降水/")r<-raster("SURF_CLI_CHN_PRE_MON_GRID_0.5-201401.txt")proj4string(r)<-CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")writeRaster(r,#数据源            filename = '201401.tiff',#可写全路径，输出指定位置            format="GTiff",#输出格式            overwrite=T#是否覆盖            )<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="raster作业1：求年降水量的总和"><a href="#raster作业1：求年降水量的总和" class="headerlink" title="raster作业1：求年降水量的总和"></a>raster作业1：求年降水量的总和</h3><h4 id="文件、目录环境"><a href="#文件、目录环境" class="headerlink" title="文件、目录环境"></a>文件、目录环境</h4><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R%E9%99%8D%E6%B0%B4.JPG" alt=""></p><p><strong>单个文件</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R%E9%99%8D%E6%B0%B4%E6%96%87%E4%BB%B6.JPG" alt=""></p><h4 id="代码解释-1"><a href="#代码解释-1" class="headerlink" title="代码解释"></a><strong>代码解释</strong></h4><pre class="line-numbers language-R"><code class="language-R">#降水年总和--------------------------------------------------------------rm(list = ls())library(raster)library(sp)setwd("B:/Temp2/月数据格点数据集/降水/")#文件名存入列表中-----------------------PrecipitationFiles<-list.files()#得指定初始r，在此基础上累加------------r<-raster(PrecipitationFiles[1])#以for循环进行累加----------------------for (i in PrecipitationFiles) {  r<-raster(i)+r  proj4string(r)<-CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")}writeRaster(r,            filename = "Sum2014",            format="GTiff",#输出格式            overwrite=T#是否覆盖            )print(r) #查看栅格信息print("Succeeded！ 完成年降水总和计算")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="作业2：求各年降水的最大值的平均值"><a href="#作业2：求各年降水的最大值的平均值" class="headerlink" title="作业2：求各年降水的最大值的平均值"></a>作业2：求各年降水的最大值的平均值</h3><h4 id="文件、目录环境-1"><a href="#文件、目录环境-1" class="headerlink" title="文件、目录环境"></a>文件、目录环境</h4><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/Rqi.JPG" alt=""></p><p><strong>单个文件</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/R%E6%B0%94%E6%B8%A9%E6%96%87%E4%BB%B6.JPG" alt=""></p><h4 id="代码解释-2"><a href="#代码解释-2" class="headerlink" title="代码解释"></a><strong>代码解释</strong></h4><pre class="line-numbers language-R"><code class="language-R">#各年最高气温平均-------------------------------------------------------------rm(list = ls())library(raster)library(sp)setwd("B:/Temp2/月数据格点数据集/气温/")#筛选出最高气温-------------------------AirTemperatureFlies<-list.files(pattern = "MAX")#得指定初始r，在此基础上累加------------r<-raster(AirTemperatureFlies[1])for (i in AirTemperatureFlies) {  r<-raster(i)+r  proj4string(r)<-CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")  }#在循环累加完成后，进行平均值计算并输出writeRaster(r/12,            filename = "Max_Mean",            format="GTiff",#输出格式            overwrite=T#是否覆盖)print(r/12) #查看栅格信息print("Succeeded! 完成各年最高气温平均计算")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub</title>
      <link href="/2020/02/14/github/"/>
      <url>/2020/02/14/github/</url>
      
        <content type="html"><![CDATA[<h1 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h1><h2 id="README-md"><a href="#README-md" class="headerlink" title="README.md"></a>README.md</h2><p>想在README.md里面插入项目的截图,<br>插入图片的关键就是知道README.md的链接规则,当在README.md中插入链接时可以插入相对路径,这是通用的适用于所有链接<br>例如:<br> <code>![图片](a.png)</code>:显示项目中的 /a.png</p><p><code>![图片b](/screenshots/b.png)</code>显示项目中的 /screenshots/b.png </p><p>“<a href=""></a>“ :”[]”中为名称，‘“()”中为链接地址。显示一个链接到其他地址的链接</p><h2 id="GitHub搜索"><a href="#GitHub搜索" class="headerlink" title="GitHub搜索"></a>GitHub搜索</h2><ol><li><p>搜索名字中带着spring boot，stars数超过3000的仓库</p><pre><code> in:name spring boot stars:&gt;3000</code></pre></li><li><p>搜索名字中带着spring boot，stars数超过3000，forks数超过300的仓库</p><pre><code> in:name spring boot stars:&gt;3000 forks:&gt;300</code></pre></li><li><p>搜索readme中带spring boot的仓库</p><pre><code> in:readme spring boot</code></pre></li><li><p>搜索描述中带有“微服务”关键词，语言为Java，pushed，最新日期要在2019-09-10之后</p><pre><code> in:description 微服务 language:java pushed:&gt;2019-09-10</code></pre></li></ol><h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><h3 id="1-添加提交"><a href="#1-添加提交" class="headerlink" title="1. 添加提交"></a>1. 添加提交</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> init<span class="token function">git</span> remote add origin 你新建仓库的HTTP或者SSH地址链接<span class="token function">git</span> pull origin master <span class="token comment" spellcheck="true">#将仓库拉取到本地文件夹</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> add <span class="token keyword">.</span>    <span class="token comment" spellcheck="true">#(.表示所有的)</span><span class="token function">git</span> commit -m <span class="token string">'添加文件内容描述'</span> <span class="token function">git</span> push origin master   <span class="token comment" spellcheck="true">#将本地仓库文件推送到GitHub新建的仓库</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-添加远程关联仓库"><a href="#2-添加远程关联仓库" class="headerlink" title="2. 添加远程关联仓库"></a>2. 添加远程关联仓库</h3><pre class="line-numbers language-csharp"><code class="language-csharp">$ git remote <span class="token keyword">add</span> origin https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>guanpengchn<span class="token operator">/</span>demo<span class="token punctuation">.</span>git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-查看远程关联"><a href="#3-查看远程关联" class="headerlink" title="3. 查看远程关联"></a>3. 查看远程关联</h3><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">git</span> remote -vorigin  https://github.com/guanpengchn/demo.git <span class="token punctuation">(</span>fetch<span class="token punctuation">)</span>origin  https://github.com/guanpengchn/demo.git <span class="token punctuation">(</span>push<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫</title>
      <link href="/2020/02/08/python-pa-chong/"/>
      <url>/2020/02/08/python-pa-chong/</url>
      
        <content type="html"><![CDATA[<h2 id="BeautifulSoup库"><a href="#BeautifulSoup库" class="headerlink" title="BeautifulSoup库"></a>BeautifulSoup库</h2><p>BeautifulSoup库是解析、遍历、维护“标签树”的功能库</p><p><strong>准备食材~html</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token operator">>></span><span class="token operator">></span>r<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://python123.io/ws/demo.html"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span>r<span class="token punctuation">.</span>text<span class="token string">'&lt;html>&lt;head>&lt;title>This is a python demo page&lt;/title>&lt;/head>\r\n&lt;body>\r\n&lt;p class="title">&lt;b>The demo python introduces several python courses.&lt;/b>&lt;/p>\r\n&lt;p class="course">Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:\r\n&lt;a href="http://www.icourse163.org/course/BIT-268001" class="py1" id="link1">Basic Python&lt;/a> and &lt;a href="http://www.icourse163.org/course/BIT-1001870001" class="py2" id="link2">Advanced Python&lt;/a>.&lt;/p>\r\n&lt;/body>&lt;/html>'</span><span class="token operator">>></span><span class="token operator">></span>demo<span class="token operator">=</span>r<span class="token punctuation">.</span>text<span class="token operator">>></span><span class="token operator">></span><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token operator">>></span><span class="token operator">></span>soup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>demo<span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#"html.parser"是解析器的一种</span><span class="token operator">>></span><span class="token operator">></span><span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>prettify<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">##将html打印</span><span class="token operator">&lt;</span>bound method Tag<span class="token punctuation">.</span>prettify of <span class="token operator">&lt;</span>html<span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span><span class="token operator">&lt;</span>title<span class="token operator">></span>This <span class="token keyword">is</span> a python demo page<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span>b<span class="token operator">></span>The demo python introduces several python courses<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"course"</span><span class="token operator">></span>Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">and</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">>></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>print(soup.prettify())就像是把食材整齐得放在案板上，看看食材都有哪些</p><h3 id="BeautifulSoup类"><a href="#BeautifulSoup类" class="headerlink" title="BeautifulSoup类"></a>BeautifulSoup类</h3><p>BeautifulSoup类原理</p><p>也就是BeautifulSoup类对应一个html/xml文档的全部内容</p><p>$$<br>html文档=标签树=BeautifulSoup类<br>$$</p><p>三者是等价的。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoupsoup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span><span class="token string">"&lt;html>data&lt;/html>"</span><span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span>soup2<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>open<span class="token punctuation">(</span><span class="token string">"D://demo.html"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h3 id="BeautifulSoup库的参数——解析器"><a href="#BeautifulSoup库的参数——解析器" class="headerlink" title="BeautifulSoup库的参数——解析器"></a>BeautifulSoup库的参数——解析器</h3><p><strong>准备怎么做</strong></p><p>一共四种解析</p><table><thead><tr><th align="center">解析器</th><th align="center">使用方法</th><th align="center">条件</th></tr></thead><tbody><tr><td align="center">bs4的HTML解析器</td><td align="center">BeautifulSoup(mk,”html.parser”)</td><td align="center">安装bs4库</td></tr><tr><td align="center">lxml的HTML解析器</td><td align="center">BeautifulSoup(mk,”lxml”)</td><td align="center">pip install lxml</td></tr><tr><td align="center">lxml的XML解析器</td><td align="center">BeautifulSoup(mk,”xml”)</td><td align="center">pip install lxml</td></tr><tr><td align="center">html5lib的HTML解析器</td><td align="center">BeautifulSoup(mk,”html5lib”)</td><td align="center">pip install html5lib</td></tr></tbody></table><h3 id="BeautifulSoup库的基本元素"><a href="#BeautifulSoup库的基本元素" class="headerlink" title="BeautifulSoup库的基本元素"></a>BeautifulSoup库的基本元素</h3><table><thead><tr><th>基本元素</th><th>说明使用</th></tr></thead><tbody><tr><td>Tag标签</td><td>标签  格式 ：.<tag></tag></td></tr><tr><td>Name标签的名字</td><td>标签名字，格式  ：.name</td></tr><tr><td>Attributes标签的属性</td><td>标签属性，格式  :   .attrs</td></tr><tr><td>NavigableString标签内非属性的字符串</td><td>标签非属性字符串，格式： .string</td></tr><tr><td>comment标签内字符串的注释部分</td><td>注释部分，格式： .string</td></tr></tbody></table><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> requests<span class="token operator">>></span><span class="token operator">></span> r<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://python123.io/ws/demo.html"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> r<span class="token punctuation">.</span>text<span class="token string">'&lt;html>&lt;head>&lt;title>This is a python demo page&lt;/title>&lt;/head>\r\n&lt;body>\r\n&lt;p class="title">&lt;b>The demo python introduces several python courses.&lt;/b>&lt;/p>\r\n&lt;p class="course">Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:\r\n&lt;a href="http://www.icourse163.org/course/BIT-268001" class="py1" id="link1">Basic Python&lt;/a> and &lt;a href="http://www.icourse163.org/course/BIT-1001870001" class="py2" id="link2">Advanced Python&lt;/a>.&lt;/p>\r\n&lt;/body>&lt;/html>'</span><span class="token operator">>></span><span class="token operator">></span> demo<span class="token operator">=</span>r<span class="token punctuation">.</span>text<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeatuifulSoup<span class="token operator">>></span><span class="token operator">></span> soup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>demo<span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>title    <span class="token comment" spellcheck="true">#title标签</span><span class="token operator">&lt;</span>title<span class="token operator">></span>This <span class="token keyword">is</span> a python demo page<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> tag<span class="token operator">=</span>soup<span class="token punctuation">.</span>a    <span class="token comment" spellcheck="true">#返回第一个a标签</span><span class="token operator">>></span><span class="token operator">></span> tag    <span class="token comment" spellcheck="true">#只会返回第一个a标签</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这锅汤，有食材，有柴火，demo就像是食材，html.parser就像是做这食材的柴火和作法。</p><p>开始煲汤~</p><pre class="line-numbers language-python"><code class="language-python">soup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>demo<span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>来尝尝这锅汤怎么样</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>name<span class="token string">'a'</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>name<span class="token string">'p'</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>name<span class="token string">'body'</span><span class="token operator">>></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解析标签属性</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> tag<span class="token operator">=</span>soup<span class="token punctuation">.</span>a <span class="token comment" spellcheck="true">#返回第一个a标签</span><span class="token operator">>></span><span class="token operator">></span> tag <span class="token comment" spellcheck="true">#只会返回第一个a标签</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> tag<span class="token punctuation">.</span>attrs    <span class="token comment" spellcheck="true">##以字典返回，可以字典的方式来进行信息提取</span><span class="token punctuation">{</span><span class="token string">'href'</span><span class="token punctuation">:</span> <span class="token string">'http://www.icourse163.org/course/BIT-268001'</span><span class="token punctuation">,</span> <span class="token string">'class'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'py1'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'link1'</span><span class="token punctuation">}</span><span class="token operator">>></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>提取属性中的信息</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> tag<span class="token punctuation">.</span>attrs<span class="token punctuation">[</span><span class="token string">'class'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'py1'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> tag<span class="token punctuation">.</span>attrs<span class="token punctuation">[</span><span class="token string">'href'</span><span class="token punctuation">]</span><span class="token string">'http://www.icourse163.org/course/BIT-268001'</span><span class="token comment" spellcheck="true">##查看tag标签属性的类型</span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span>tag<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'dict'</span><span class="token operator">></span>    <span class="token comment" spellcheck="true">#字典类型</span><span class="token comment" spellcheck="true">#注意：无论有无属性、总能获得一个字典。若无，则返回一个空字典。</span><span class="token comment" spellcheck="true">#标签的类型 </span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'bs4.element.Tag'</span><span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="NavigableString-（string）"><a href="#NavigableString-（string）" class="headerlink" title="NavigableString  （string）"></a>NavigableString  （string）</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>string<span class="token string">'Basic Python'</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>p<span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span>b<span class="token operator">></span>The demo python introduces several python courses<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>p<span class="token punctuation">.</span>string<span class="token string">'The demo python introduces several python courses.'</span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span>soup<span class="token punctuation">.</span>p<span class="token punctuation">.</span>string<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'bs4.element.NavigableString'</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：p标签中还包含b标签，说明NavigableString是可以跨越多个标签的</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> newsoup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span><span class="token string">"&lt;b>&lt;!--这是comment-->&lt;/b>&lt;&lt;p>这不是一个comment&lt;/p>"</span><span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> newsoup<span class="token punctuation">.</span>b<span class="token punctuation">.</span>string    <span class="token comment" spellcheck="true">#其注释被去掉了</span><span class="token string">'这是comment'</span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span>newsoup<span class="token punctuation">.</span>b<span class="token punctuation">.</span>string<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'bs4.element.Comment'</span><span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> newsoup<span class="token punctuation">.</span>p<span class="token punctuation">.</span>string<span class="token string">'这不是一个comment'</span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span>newsoup<span class="token punctuation">.</span>p<span class="token punctuation">.</span>string<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'bs4.element.NavigableString'</span><span class="token operator">></span><span class="token comment" spellcheck="true">##所以要根据类型来判断</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="HTML的遍历"><a href="#HTML的遍历" class="headerlink" title="HTML的遍历"></a>HTML的遍历</h2><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Pyhton/Beautiful/soup2020-02-08-17-00-02-image.png" alt=""></p><h3 id="下行遍历"><a href="#下行遍历" class="headerlink" title="下行遍历"></a>下行遍历</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Pyhton/Beautiful/soup2020-02-08-17-06-00-image.png" alt=""></p><p><strong>contents返回的是列表类型，而后两个返回的是迭代类型，只能用在循环中</strong></p><p><strong>PS：descendants会遍历该节点的所有子孙节点，其他俩则只遍历其下儿子节点</strong></p><p>下行遍历示例</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>head<span class="token operator">&lt;</span>head<span class="token operator">></span><span class="token operator">&lt;</span>title<span class="token operator">></span>This <span class="token keyword">is</span> a python demo page<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>head<span class="token punctuation">.</span>contents    <span class="token comment" spellcheck="true">##返回列表格式，可以列表格式解析。</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>title<span class="token operator">></span>This <span class="token keyword">is</span> a python demo page<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>body<span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span>b<span class="token operator">></span>The demo python introduces several python courses<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"course"</span><span class="token operator">></span>Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">and</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> len<span class="token punctuation">(</span>soup<span class="token punctuation">.</span>body<span class="token punctuation">.</span>contents<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">##有五个儿子节点</span><span class="token number">5</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>body<span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">##检索第二个儿子节点</span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span>b<span class="token operator">></span>The demo python introduces several python courses<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>body<span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token string">'\n'</span><span class="token comment" spellcheck="true">##\n 代表回车</span><span class="token comment" spellcheck="true">##说明，对于一个标签的儿子节点，不仅包括标签节点，也包括字符串节点。\n也是其一个节点。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>遍历儿子节点</strong></p><p>可先查看其结构</p><pre class="line-numbers language-html"><code class="language-html">>>> print(soup.body.prettify())<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>   The demo python introduces several python courses.  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>py1<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.icourse163.org/course/BIT-268001<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>link1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   Basic Python  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  and  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>py2<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.icourse163.org/course/BIT-1001870001<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>link2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   Advanced Python  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  . <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> child <span class="token keyword">in</span> soup<span class="token punctuation">.</span>body<span class="token punctuation">.</span>children<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span>b<span class="token operator">></span>The demo python introduces several python courses<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"course"</span><span class="token operator">></span>Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">and</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="上行遍历"><a href="#上行遍历" class="headerlink" title="上行遍历"></a>上行遍历</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Pyhton/Beautiful/soup2020-02-08-17-26-48-image.png" alt=""></p><p>上行遍历示例</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>title<span class="token punctuation">.</span>parent<span class="token operator">&lt;</span>head<span class="token operator">></span><span class="token operator">&lt;</span>title<span class="token operator">></span>This <span class="token keyword">is</span> a python demo page<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>html<span class="token punctuation">.</span>parent    <span class="token comment" spellcheck="true">##html标签的父亲就是它自己本身</span><span class="token operator">&lt;</span>html<span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span><span class="token operator">&lt;</span>title<span class="token operator">></span>This <span class="token keyword">is</span> a python demo page<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span>b<span class="token operator">></span>The demo python introduces several python courses<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"course"</span><span class="token operator">></span>Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">and</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>parent    <span class="token comment" spellcheck="true">##soup无父亲，没有显示</span><span class="token operator">>></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>遍历上行所有的名字</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>parent<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> parent <span class="token keyword">in</span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>parents<span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">##能够对soup的a标签所有的先辈的名字进行打印</span>    <span class="token keyword">if</span> parent <span class="token keyword">is</span> None<span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">##soup本身的parent先辈不存在，所以做判断，是否为空。</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span>name<span class="token punctuation">)</span>pbodyhtml<span class="token punctuation">[</span>document<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="平行遍历"><a href="#平行遍历" class="headerlink" title="平行遍历"></a>平行遍历</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Pyhton/Beautiful/soup2020-02-08-17-36-22-image.png" alt=""></p><p>平行遍历是发生在同一个父节点下的各节点间</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Pyhton/Beautiful/soup2020-02-08-17-39-03-image.png" alt=""></p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>next_sibling   <span class="token string">' and '</span>     <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>NavigableString也是节点，所以一个节点的上下平行游不一定都是标签，所以有时候需要做类型判断</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>next_sibling<span class="token punctuation">.</span>next_sibling  <span class="token comment" spellcheck="true">##a标签的下一个标签的下一个标签</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>previous_sibling<span class="token string">'Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:\r\n'</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>previous_sibling<span class="token punctuation">.</span>previous_silbingTraceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span> File <span class="token string">"&lt;pyshell#60>"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>previous_sibling<span class="token punctuation">.</span>previous_silbing File <span class="token string">"C:\Users\YU\AppData\Local\Programs\Python\Python37-32\lib\site-packages\bs4\element.py"</span><span class="token punctuation">,</span> line <span class="token number">742</span><span class="token punctuation">,</span> <span class="token keyword">in</span> __getattr__ self<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__name__<span class="token punctuation">,</span> attr<span class="token punctuation">)</span><span class="token punctuation">)</span>AttributeError<span class="token punctuation">:</span> <span class="token string">'NavigableString'</span> object has no attribute <span class="token string">'previous_silbing'</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>previous_sibling<span class="token punctuation">.</span>previous_sibling<span class="token operator">>></span><span class="token operator">></span> <span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>parent<span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"course"</span><span class="token operator">></span>Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">and</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>遍历前后续节点</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> sibling <span class="token keyword">in</span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>next_siblings<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>sibling<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#遍历后续节点</span> <span class="token operator">and</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> sibling <span class="token keyword">in</span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>previous_siblings<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>sibling<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#遍历前续节点</span>Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span><span class="token operator">>></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="基于bs4库的html格式输出"><a href="#基于bs4库的html格式输出" class="headerlink" title="基于bs4库的html格式输出"></a>基于bs4库的html格式输出</h2><h3 id="prettify"><a href="#prettify" class="headerlink" title="prettify()"></a>prettify()</h3><ul><li>为整个html标签后增加换行符：/n。目的是使得html更“友好”</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>prettify<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#整个html的标签增加了换行符</span><span class="token string">'&lt;html>\n &lt;head>\n  &lt;title>\n   This is a python demo page\n  &lt;/title>\n &lt;/head>\n &lt;body>\n  &lt;p class="title">\n   &lt;b>\n    The demo python introduces several python courses.\n   &lt;/b>\n  &lt;/p>\n  &lt;p class="course">\n   Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:\n   &lt;a class="py1" href="http://www.icourse163.org/course/BIT-268001" id="link1">\n    Basic Python\n   &lt;/a>\n   and\n   &lt;a class="py2" href="http://www.icourse163.org/course/BIT-1001870001" id="link2">\n    Advanced Python\n   &lt;/a>\n   .\n  &lt;/p>\n &lt;/body>\n&lt;/html>'</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>prettify<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#用print打印出来</span><span class="token operator">&lt;</span>html<span class="token operator">></span> <span class="token operator">&lt;</span>head<span class="token operator">></span>  <span class="token operator">&lt;</span>title<span class="token operator">></span>   This <span class="token keyword">is</span> a python demo page  <span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span> <span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span>   <span class="token operator">&lt;</span>b<span class="token operator">></span>    The demo python introduces several python courses<span class="token punctuation">.</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>  <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"course"</span><span class="token operator">></span>   Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span>   <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>    Basic Python   <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>   <span class="token operator">and</span>   <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>    Advanced Python   <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>   <span class="token punctuation">.</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>也可以单独对一个标签进行“美化”⭐</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a   <span class="token comment" spellcheck="true">#原来长这样</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>prettify<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#后来长这样了，美丽者也！</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span> Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="编码问题"><a href="#编码问题" class="headerlink" title="编码问题"></a>编码问题</h3><p>bs4中将html转换为UTF-8格式的编码，支持中文，python3.0也支持中文，而用python2.0则需要对编码进行转换。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup0<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span><span class="token string">"&lt;p>中文&lt;/p>"</span><span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> soup0<span class="token punctuation">.</span>p<span class="token punctuation">.</span>string<span class="token string">'中文'</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>soup0<span class="token punctuation">.</span>p<span class="token punctuation">.</span>prettify<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>p<span class="token operator">></span> 中文<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ol><li>bs4库的基本元素</li></ol><p>Tag、Name、Attributes、NavigateString、Comment</p><ol start="2"><li>bs4库的遍历功能</li></ol><p><strong>下行遍历</strong></p><p>.contents</p><p>.children</p><p>.descendants</p><p><strong>上行遍历</strong></p><p>.parent</p><p>.parents</p><p><strong>平行遍历</strong></p><p>.next_sibling</p><p>.previous_sibling</p><p>.next_siblings</p><p>.previous_siblings</p><h2 id="信息标记"><a href="#信息标记" class="headerlink" title="信息标记"></a>信息标记</h2><p>国际公认的一般信息标记形式</p><h3 id="XML、JSON、YAML"><a href="#XML、JSON、YAML" class="headerlink" title="XML、JSON、YAML"></a><strong>XML、JSON、YAML</strong></h3><ul><li>XML</li></ul><p>XML是基于html发展来的通用表达形式。通过标签内容表达信息。</p><ul><li>JSON</li></ul><p><strong>有类型的键值对</strong>，key:value。好处是可直接在JavaScript中使用</p><pre class="line-numbers language-json"><code class="language-json">“key”<span class="token operator">:</span>“value”“key”<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"value1"</span><span class="token punctuation">,</span><span class="token string">"value2"</span><span class="token punctuation">]</span><span class="token property">"key"</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">"subkey"</span><span class="token punctuation">,</span><span class="token string">"subvalue"</span><span class="token punctuation">}</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"李世昱"</span>“age”<span class="token operator">:</span><span class="token number">23</span>     //这是有类型的<span class="token string">"lishiyu"</span>：<span class="token punctuation">[</span><span class="token string">"李世昱"</span>，<span class="token number">23</span><span class="token punctuation">]</span>“names”：<span class="token punctuation">{</span>    “websitename”<span class="token operator">:</span>“lishiyu.vip”<span class="token punctuation">,</span>    <span class="token property">"realname"</span><span class="token operator">:</span><span class="token string">"李世昱"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>YAML</li></ul><p>无类型的键值对，key:value</p><ul><li><p>没有双引号</p></li><li><p>通过缩进的形式表达所属关系</p></li><li><p>“-“表达并列关系</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span>李世昱    <span class="token punctuation">-</span>张**<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>用”|“表示整块数据，用”#“注释</p></li><li><p>键值对之间可以嵌套</p></li></ul><h3 id="三种比较"><a href="#三种比较" class="headerlink" title="三种比较"></a>三种比较</h3><p>XML最早的通用信息标记语言，可扩展性好，但繁琐。一般应用于Internation 信息交互传递</p><p>JSON信息有类型，适合程序处理，较XML简洁。一般程序接口处理应用。</p><p>YAML信息无类型，文本信息比例最高，可读性好。多用于系统配置文件。</p><h2 id="信息提取方法"><a href="#信息提取方法" class="headerlink" title="信息提取方法"></a>信息提取方法</h2><p>方法一：完整解析信息的标记形式，再提取关键信息<br>XML JSON YAML<br>需要标记解析器，例如：bs4库的标签树遍历<br>优点：信息解析准确<br>缺点：提取过程繁琐，速度慢</p><p>方法二：无视标记形式，直接搜索关键信息<br>搜索<br>对信息的文本查找函数即可<br>优点：提取过程简洁，速度较快<br>缺点：提取结果准确性与信息内容相关</p><p>融合方法</p><p>实例</p><p>提取HTML中所有的URL链接</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> requests<span class="token operator">>></span><span class="token operator">></span> r<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://python123.io/ws/demo.html"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> demo<span class="token operator">=</span>r<span class="token punctuation">.</span>text<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token operator">>></span><span class="token operator">></span> soup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>demo<span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> link <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>SyntaxError<span class="token punctuation">:</span> invalid syntax<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> link <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>link<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>http<span class="token punctuation">:</span><span class="token operator">//</span>www<span class="token punctuation">.</span>icourse163<span class="token punctuation">.</span>org<span class="token operator">/</span>course<span class="token operator">/</span>BIT<span class="token number">-268001</span>http<span class="token punctuation">:</span><span class="token operator">//</span>www<span class="token punctuation">.</span>icourse163<span class="token punctuation">.</span>org<span class="token operator">/</span>course<span class="token operator">/</span>BIT<span class="token number">-1001870001</span><span class="token operator">>></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="find-all-函数"><a href="#find-all-函数" class="headerlink" title="find_all()函数"></a>find_all()函数</h3><p>&lt;&gt;.find_all(name, attrs, recursive, string, **kwargs)<br>返回一个列表类型，存储查找的结果</p><h4 id="第一个参数——-name"><a href="#第一个参数——-name" class="headerlink" title="第一个参数—— name"></a>第一个参数—— name</h4><p> 对标签名称的检索字符串</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#查询a标签</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token comment" spellcheck="true">#同时查询a标签与b标签</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>b<span class="token operator">></span>The demo python introduces several python courses<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>find_all(True)</p><p>会将显示所有标签</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> Tag <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>Tag<span class="token punctuation">.</span>name<span class="token punctuation">)</span>htmlheadtitlebodypbpaa<span class="token operator">>></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>检索所有包含b字母的标签</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> re    <span class="token comment" spellcheck="true">#正则表达式库，暂不详解</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> tag <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span>re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>tag<span class="token punctuation">.</span>name<span class="token punctuation">)</span>bodyb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第二个参数——attr"><a href="#第二个参数——attr" class="headerlink" title="第二个参数——attr"></a>第二个参数——attr</h4><p>标签中属性是否含有某字符</p><p>∙attrs: 对标签属性值的检索字符串，可标注属性检索</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">,</span><span class="token string">'course'</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#p标签中包含“coursre”</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"course"</span><span class="token operator">></span>Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">and</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对属性做约束</p><pre class="line-numbers language-py"><code class="language-py">>>> soup.find_all(id='link1')   #id属性等于1的标签[<a class="py1" href="http://www.icourse163.org/course/BIT-268001" id="link1">Basic Python</a>]>>> soup.find_all(id="link")[]>>> soup.find_all(id=re.compile('link'))   #使用正则表达式来查找id中包含link的标签[<a class="py1" href="http://www.icourse163.org/course/BIT-268001" id="link1">Basic Python</a>, <a class="py2" href="http://www.icourse163.org/course/BIT-1001870001" id="link2">Advanced Python</a>]>>> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第三个参数——recursive"><a href="#第三个参数——recursive" class="headerlink" title="第三个参数——recursive"></a>第三个参数——recursive</h4><p>是都对子孙全部检索，布尔型，默认True</p><p>也就是，若设为False，则只检索其下一个子孙节点</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span>recursive<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第四个参数——string"><a href="#第四个参数——string" class="headerlink" title="第四个参数——string"></a>第四个参数——string</h4><p> string: &lt;&gt;…&lt;/&gt;中字符串区域的检索字符串</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token operator">&lt;</span>html<span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span><span class="token operator">&lt;</span>title<span class="token operator">></span>This <span class="token keyword">is</span> a python demo page<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span>b<span class="token operator">></span>The demo python introduces several python courses<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"course"</span><span class="token operator">></span>Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">and</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span>string<span class="token operator">=</span><span class="token string">'Basic Python'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'Basic Python'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token comment" spellcheck="true">#使用正则表达式检索所有包含‘Python’字符的String域</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> re<span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span>string<span class="token operator">=</span>re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span><span class="token string">'Python'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:\r\n'</span><span class="token punctuation">,</span> <span class="token string">'Basic Python'</span><span class="token punctuation">,</span> <span class="token string">'Advanced Python'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h4><blockquote><p><tag>(..) 等价于 .find_all(..)<br>soup(..) 等价于 soup.find_all(..)</tag></p></blockquote><h4 id="七个扩展方法"><a href="#七个扩展方法" class="headerlink" title="七个扩展方法"></a>七个扩展方法</h4><p>&lt;&gt;.find() 搜索且只返回一个结果，同.find_all()参数<br>&lt;&gt;.find_parents() 在先辈节点中搜索，返回列表类型，同.find_all()参数<br>&lt;&gt;.find_parent() 在先辈节点中返回一个结果，同.find()参数<br>&lt;&gt;.find_next_siblings() 在后续平行节点中搜索，返回列表类型，同.find_all()参数<br>&lt;&gt;.find_next_sibling() 在后续平行节点中返回一个结果，同.find()参数<br>&lt;&gt;.find_previous_siblings() 在前序平行节点中搜索，返回列表类型，同.find_all()参数<br>&lt;&gt;.find_previous_sibling() 在前序平行节点中返回一个结果，同.find()参数</p><hr><h2 id="中国大学排名爬取实例"><a href="#中国大学排名爬取实例" class="headerlink" title="中国大学排名爬取实例"></a>中国大学排名爬取实例</h2><h3 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> bs4<span class="token comment" spellcheck="true">#getHTMLText函数获取url链接，返回该链接的HTML内容</span><span class="token keyword">def</span> <span class="token function">getHTMLText</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        r<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>        r<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>        r<span class="token punctuation">.</span>encoding<span class="token operator">=</span>r<span class="token punctuation">.</span>apparent_encoding        <span class="token keyword">return</span> r<span class="token punctuation">.</span>text    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"url获取网页失败"</span><span class="token comment" spellcheck="true">#fillUnivlist解析出HTML需要的有价值的内容，将其放在一个列表里</span><span class="token keyword">def</span> <span class="token function">fillUnivlist</span><span class="token punctuation">(</span>ulist<span class="token punctuation">,</span> html<span class="token punctuation">)</span><span class="token punctuation">:</span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> tr <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'tbody'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>children<span class="token punctuation">:</span>        <span class="token keyword">if</span> isinstance<span class="token punctuation">(</span>tr<span class="token punctuation">,</span> bs4<span class="token punctuation">.</span>element<span class="token punctuation">.</span>Tag<span class="token punctuation">)</span><span class="token punctuation">:</span>            tds <span class="token operator">=</span> tr<span class="token punctuation">(</span><span class="token string">'td'</span><span class="token punctuation">)</span>            ulist<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>tds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>string<span class="token punctuation">,</span> tds<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>string<span class="token punctuation">,</span> tds<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>string<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#输出结果。将列表输出。</span><span class="token keyword">def</span> <span class="token function">printUnivList</span><span class="token punctuation">(</span>ulist<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#\t表示空四个字符，也称缩进，相当于按一下Tab键</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"{:^10}\t{:^6}\t{:^10}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token string">"排名"</span><span class="token punctuation">,</span> <span class="token string">"学校名称"</span><span class="token punctuation">,</span> <span class="token string">"总分"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>        u <span class="token operator">=</span> ulist<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"{:^10}\t{:^6}\t{:^10}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>u<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> u<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> u<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#调用函数</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    uinfo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    url <span class="token operator">=</span> <span class="token string">'http://www.zuihaodaxue.com/zuihaodaxuepaiming2019.html'</span>    html <span class="token operator">=</span> getHTMLText<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    fillUnivlist<span class="token punctuation">(</span>uinfo<span class="token punctuation">,</span> html<span class="token punctuation">)</span>    printUnivList<span class="token punctuation">(</span>uinfo<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#使用主函数</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="http://www.zuihaodaxue.com/zuihaodaxuepaiming2019.html" target="_blank" rel="noopener">http://www.zuihaodaxue.com/zuihaodaxuepaiming2019.html</a></p></blockquote><p>查看其网页源代码</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/post/python%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6%E6%8E%92%E5%90%8D.JPG" alt=""></p><p>……</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
