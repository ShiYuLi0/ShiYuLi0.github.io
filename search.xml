<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>空间建模与分析(一)</title>
      <link href="/2020/02/17/kong-jian-jian-mo-yu-fen-xi-yi/"/>
      <url>/2020/02/17/kong-jian-jian-mo-yu-fen-xi-yi/</url>
      
        <content type="html"><![CDATA[<h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><p><strong>1、工作路径</strong></p><p>getwd() 列出当前工作路径；</p><p>setwd(dir) 设置工作路径，参数dir是要设置的路径。</p><p><strong>2、列出目录下文件</strong></p><p>函数list.files和dir用法完全一样，可以列出路径下所有文件（包括目录）；函数list.dirs只列出路径下所有目录。</p><pre class=" language-r"><code class="language-r"><span class="token operator">></span> getwd<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#当前工作目录</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"C:/Users/YU/Documents"</span><span class="token operator">></span> getwd<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#当前工作目录</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"C:/Users/YU/Documents"</span><span class="token comment" spellcheck="true">#ls()列出内存变量-----------------------</span>b<span class="token operator">=</span><span class="token number">3</span>ls<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"b"</span><span class="token comment" spellcheck="true">#-------------------------------------</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#判断文件夹是否存在，不存在则创建一个</span><span class="token operator">></span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file.exists<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">+</span>   dir.create<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A"</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token punctuation">}</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#文件夹列表,目录</span><span class="token operator">></span> list.dirs<span class="token punctuation">(</span><span class="token string">"B:/Temp1"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1"</span>       <span class="token string">"B:/Temp1/A"</span>     <span class="token string">"B:/Temp1/笔记"</span>  <span class="token string">"B:/Temp1/权游1"</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#文件列表，文件名字</span><span class="token operator">></span> list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1"</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"A"</span>                             <span class="token string">"df_hb小学.txt"</span>                 <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token string">"笔记"</span>                          <span class="token string">"高考.csv"</span>                      <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token string">"高考.xlsx"</span>                     <span class="token string">"河北高考人数csv输出.csv"</span>       <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token string">"河北高考人数csv输出减年.csv"</span>   <span class="token string">"权利的游戏第二季02 - 副本.mp4"</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token string">"权利的游戏第二季03 - 副本.mp4"</span> <span class="token string">"权利的游戏第二季04 - 副本.mp4"</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token string">"权利的游戏第一季01.mp4"</span>        <span class="token string">"权利的游戏第一季02.mp4"</span>       <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token string">"权利的游戏第一季03.mp4"</span>        <span class="token string">"权利的游戏第一季04.mp4"</span>       <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token string">"权游1"</span> </code></pre><p><strong>list.files()函数参数解释</strong></p><p>list.files(path = “.”, pattern = NULL, all.files = FALSE,full.names = FALSE, recursive = FALSE,ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)</p><ol><li><p>path：输入文件夹路径</p></li><li><p>pattern：匹配文件名，选择自己所需的文件（可选项，默认是全部文件名，包括子文件夹，但是不包括子文件夹的文件），如pattern = “*.XPT”，表示要输出以.XPT结尾的文件名，如果没有符号，则输出包含.XPT的文件名</p></li><li><p>all.files：是否返回所有文件，包括隐藏文件，但不包括子文件夹的文件，默认是否</p></li><li><p>full.names：是否返回路径+文件名，默认是否，如果是否，则返回文件名</p></li><li><p>recursive：是否将子文件夹的文件也列出来</p></li><li><p>ignore.case：匹配的文件名是否忽略大小写，默认否，即不忽略大小写</p></li></ol><p>示例</p><pre class=" language-r"><code class="language-r"><span class="token operator">></span> <span class="token punctuation">(</span>R.home<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/installs/RStudio/path/R-3.6.2"</span><span class="token operator">></span> list.files<span class="token punctuation">(</span>R.home<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"bin"</span> <span class="token string">"CHANGES"</span> <span class="token string">"COPYING"</span> <span class="token string">"doc"</span> <span class="token string">"etc"</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token string">"include"</span> <span class="token string">"library"</span> <span class="token string">"MD5"</span> <span class="token string">"modules"</span> <span class="token string">"README"</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token string">"README.R-3.6.2"</span> <span class="token string">"share"</span> <span class="token string">"src"</span> <span class="token string">"Tcl"</span> <span class="token string">"tests"</span> <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token string">"unins000.dat"</span> <span class="token string">"unins000.exe"</span> <span class="token operator">></span> list.files<span class="token punctuation">(</span>R.home<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">".dat$"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"unins000.dat"</span><span class="token operator">></span> list.files<span class="token punctuation">(</span>R.home<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">".dat$"</span><span class="token punctuation">,</span>full.names <span class="token operator">=</span> T<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/installs/RStudio/path/R-3.6.2/unins000.dat"</span><span class="token operator">></span> list.files<span class="token punctuation">(</span>R.home<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">"doc"</span><span class="token punctuation">,</span>full.names <span class="token operator">=</span> T<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/installs/RStudio/path/R-3.6.2/doc"</span><span class="token comment" spellcheck="true">#pattern：匹配文件名，选择自己所需的文件（可选项，默认是全部文件名，包括子文件夹，但是不包括子文件夹的文件），如pattern = "*.XPT$"，表示要输出以.XPT结尾的文件名，如果没有$符号，则输出包含.XPT的文件名</span></code></pre><p><strong>3、删除文件</strong></p><p><strong>file.remove函数</strong></p><pre class=" language-r"><code class="language-r"><span class="token operator">></span> <span class="token comment" spellcheck="true">#删除文件</span> <span class="token operator">></span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file.exists<span class="token punctuation">(</span><span class="token string">"B:/Temp1/冰与火之歌第一季01.mp4"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">#先判断是否有这个文件，没有则创建一个</span> <span class="token operator">+</span> file.create<span class="token punctuation">(</span><span class="token string">"B:/Temp1/冰与火之歌第一季01.mp4"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">}</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token boolean">TRUE</span> <span class="token operator">></span> file.remove<span class="token punctuation">(</span><span class="token string">"B:/Temp1/冰与火之歌第一季01.mp4"</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token boolean">TRUE</span> <span class="token comment" spellcheck="true">#---------------------------------------------------</span><span class="token operator">></span> list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A"</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">"02"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"权力的游戏第一季02.mp4"</span><span class="token operator">></span> <span class="token operator">></span> list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A"</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">"02"</span><span class="token punctuation">,</span>full.names <span class="token operator">=</span> T<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季02.mp4"</span><span class="token operator">></span> file.remove<span class="token punctuation">(</span>list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A/"</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">"02"</span><span class="token punctuation">,</span>full.names <span class="token operator">=</span> F<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#必须是全部路径，full.names改为T</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token boolean">FALSE</span>Warning message<span class="token operator">:</span>In file.remove<span class="token punctuation">(</span>list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A/"</span><span class="token punctuation">,</span> pattern <span class="token operator">=</span> <span class="token string">"02"</span><span class="token punctuation">,</span> full.names <span class="token operator">=</span> F<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span>  无法删除文件<span class="token string">'权力的游戏第一季02.mp4'</span>，原因是<span class="token string">'No such file or directory'</span><span class="token operator">></span> file.remove<span class="token punctuation">(</span>list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A/"</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">"02"</span><span class="token punctuation">,</span>full.names <span class="token operator">=</span> T<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#不能只是文件名</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token boolean">TRUE</span><span class="token operator">></span> list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A/"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#查看删除结果</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"权力的游戏第一季01.mp4"</span> <span class="token string">"权力的游戏第一季03.mp4"</span> <span class="token string">"权力的游戏第一季04.mp4"</span></code></pre><p><strong>4、复制文件</strong></p><p><strong>file.copy()</strong></p><p>file.copy(from, to, overwrite = recursive, recursive = FALSE,<br>          copy.mode = TRUE, copy.date = FALSE)<br>from是原始文件（目录）名，to是新文件（目录）名，二者可以是vector，但是长度需相同；</p><p>overwrite 若为TRUE，则文件被覆盖；</p><p>recursive 复制目录时recursive需为TRUE；</p><p>copy.mode若为TRUE，permission bits一并复制过来；</p><p>copy.date若为TRUE，文件日期一并复制过来。</p><pre class=" language-r"><code class="language-r"><span class="token operator">></span> file0<span class="token operator">&lt;-</span>list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1"</span><span class="token punctuation">,</span>pattern <span class="token operator">=</span> <span class="token string">"权利的游戏第一季"</span><span class="token punctuation">,</span>full.names<span class="token operator">=</span>T<span class="token punctuation">)</span><span class="token operator">></span> file0<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/权利的游戏第一季01.mp4"</span> <span class="token string">"B:/Temp1/权利的游戏第一季02.mp4"</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/权利的游戏第一季03.mp4"</span> <span class="token string">"B:/Temp1/权利的游戏第一季04.mp4"</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#复制文件----------------------------------------</span><span class="token operator">></span> file.copy<span class="token punctuation">(</span>file0<span class="token punctuation">,</span><span class="token string">"B:/Temp1/A"</span><span class="token punctuation">,</span>copy.date <span class="token operator">=</span> F<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#注意此时file0是路径+文件名</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#查看复制结果</span><span class="token operator">></span> list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"权力的游戏第一季01.mp4"</span> <span class="token string">"权力的游戏第一季03.mp4"</span> <span class="token string">"权力的游戏第一季04.mp4"</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token string">"权利的游戏第一季01.mp4"</span> <span class="token string">"权利的游戏第一季02.mp4"</span> <span class="token string">"权利的游戏第一季03.mp4"</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token string">"权利的游戏第一季04.mp4"</span></code></pre><p><strong>5、重命名</strong></p><p><strong>file.rename</strong></p><pre class=" language-r"><code class="language-r"><span class="token operator">></span> <span class="token comment" spellcheck="true">#重命名-------------------------------------------------</span><span class="token operator">></span> <span class="token comment" spellcheck="true">#获取A文件夹下的文件路径及文件名</span><span class="token operator">></span> fileA<span class="token operator">&lt;-</span>list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A"</span><span class="token punctuation">,</span>full.names <span class="token operator">=</span> T<span class="token punctuation">)</span><span class="token operator">></span> fileA<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季01.mp4"</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季03.mp4"</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季04.mp4"</span> <span class="token string">"B:/Temp1/A/权利的游戏第一季01.mp4"</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权利的游戏第一季02.mp4"</span> <span class="token string">"B:/Temp1/A/权利的游戏第一季03.mp4"</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权利的游戏第一季04.mp4"</span><span class="token operator">></span> fileA_rename<span class="token operator">=</span>sub<span class="token punctuation">(</span><span class="token string">"利"</span><span class="token punctuation">,</span><span class="token string">"力"</span><span class="token punctuation">,</span>fileA<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#进行字符的替换,宋老师的输入法可能有毒，或者他语文不好。</span><span class="token operator">></span> fileA_rename<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季01.mp4"</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季03.mp4"</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季04.mp4"</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季01.mp4"</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季02.mp4"</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季03.mp4"</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token string">"B:/Temp1/A/权力的游戏第一季04.mp4"</span><span class="token operator">></span> file.rename<span class="token punctuation">(</span>fileA<span class="token punctuation">,</span>fileA_rename<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#重命名操作</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span> <span class="token boolean">TRUE</span><span class="token operator">></span> list.files<span class="token punctuation">(</span><span class="token string">"B:/Temp1/A"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#查看结果</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"权力的游戏第一季01.mp4"</span> <span class="token string">"权力的游戏第一季02.mp4"</span> <span class="token string">"权力的游戏第一季03.mp4"</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token string">"权力的游戏第一季04.mp4"</span><span class="token comment" spellcheck="true">#补充小函数------------------------------------------</span><span class="token comment" spellcheck="true">#sub函数-----------------------</span><span class="token operator">></span>c<span class="token operator">=</span><span class="token string">"lishiyu"</span><span class="token operator">></span>c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"lishiyu"</span>b<span class="token operator">&lt;-</span>sub<span class="token punctuation">(</span><span class="token string">"yu"</span><span class="token punctuation">,</span><span class="token string">"kjsfkjsdhgkhj"</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span>b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"lishikjsfkjsdhgkhj"</span>c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"lishiyu"</span></code></pre><p>保存脚本文件</p><p>保存编码为GB18030，否则中文会变成乱码</p><p>查看帮助文档——?加函数名</p><p>例如：?read.csv查看read.csv函数的帮助文档</p><pre class=" language-R"><code class="language-R">rm(list=ls())df<-read.csv("B:/hh.csv",header=T)</code></pre><h1 id="Dataframe"><a href="#Dataframe" class="headerlink" title="Dataframe"></a>Dataframe</h1><hr><p><strong>草稿，未完待续……</strong></p><p>df  shift   加4</p><p>seq函数</p><h4 id="R语言-更改R包默认安装路径"><a href="#R语言-更改R包默认安装路径" class="headerlink" title="R语言 更改R包默认安装路径"></a>R语言 更改R包默认安装路径</h4><p>#新建一个初始启动文件<br>file.edit(’~/.Rprofile’)</p><p>#更改R包默认安装路径<br>.libPaths(“D:/Program Files/R/win-library/3.5”)<br>myPaths &lt;- c(“D:/Program Files/R/win-library/3.5”)<br>.libPaths(myPaths)</p><p>然后把代码复制到初始文件.Rprofile中。<br>重启R，即可。</p><pre class=" language-r"><code class="language-r"><span class="token comment" spellcheck="true">#typeof(df[,3]) </span><span class="token comment" spellcheck="true">#class(df)</span><span class="token comment" spellcheck="true">#length(a),nrow(df),ncol(df)</span><span class="token comment" spellcheck="true">#a &lt;- 1:5</span><span class="token comment" spellcheck="true">#for(i in 1:length(a))</span><span class="token comment" spellcheck="true">#{</span><span class="token comment" spellcheck="true">#  print(i)</span><span class="token comment" spellcheck="true">#}</span><span class="token comment" spellcheck="true">#df[3] #data.frame[列号] 得到一个仅包含该列内容的数据框</span><span class="token comment" spellcheck="true">#df[,3]</span><span class="token comment" spellcheck="true">#class(df[,3])</span>rm<span class="token punctuation">(</span>list <span class="token operator">=</span> ls<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#清除内存</span>library<span class="token punctuation">(</span>dplyr<span class="token punctuation">)</span>df <span class="token operator">&lt;-</span> data.frame<span class="token punctuation">(</span>ID <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span> Class <span class="token operator">=</span> rep<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                 Chinese <span class="token operator">=</span> runif<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span>min <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>max <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  Math <span class="token operator">=</span> runif<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span>min <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>max <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                 English <span class="token operator">=</span> runif<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span>min <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>max <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">1</span><span class="token operator">:</span>ncol<span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>  df<span class="token punctuation">[</span><span class="token punctuation">,</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;-</span> as.integer<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#将每列类型变为integer型</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#查找符合条件的行，可采用 which() 函数，得到的类型是数据框</span>df<span class="token punctuation">[</span>which<span class="token punctuation">(</span>df<span class="token operator">$</span>ID <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#查询某个值三种方法</span><span class="token comment" spellcheck="true">#df[3,4]</span><span class="token comment" spellcheck="true">#df[3,'Math']</span><span class="token comment" spellcheck="true">#df$Math[3]</span>df<span class="token punctuation">[</span>which<span class="token punctuation">(</span>df<span class="token operator">$</span>Chinese <span class="token operator">>=</span> <span class="token number">57</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'Math'</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#df[3,'Math']同理</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub使用小技巧</title>
      <link href="/2020/02/14/github-shi-yong-xiao-ji-qiao/"/>
      <url>/2020/02/14/github-shi-yong-xiao-ji-qiao/</url>
      
        <content type="html"><![CDATA[<h1 id="GitHub小技巧"><a href="#GitHub小技巧" class="headerlink" title="GitHub小技巧"></a>GitHub小技巧</h1><h2 id="README-md"><a href="#README-md" class="headerlink" title="README.md"></a>README.md</h2><p>想在README.md里面插入项目的截图,<br>插入图片的关键就是知道README.md的链接规则,当在README.md中插入链接时可以插入相对路径,这是通用的适用于所有链接<br>例如:<br> <code>![图片](a.png)</code>:显示项目中的 /a.png</p><p><code>![图片b](/screenshots/b.png)</code>显示项目中的 /screenshots/b.png </p><p>“<a href=""></a>“ :”[]”中为名称，‘“()”中为链接地址。显示一个链接到其他地址的链接</p><h2 id="GitHub搜索"><a href="#GitHub搜索" class="headerlink" title="GitHub搜索"></a>GitHub搜索</h2><ol><li><p>搜索名字中带着spring boot，stars数超过3000的仓库</p><pre><code> in:name spring boot stars:&gt;3000</code></pre></li><li><p>搜索名字中带着spring boot，stars数超过3000，forks数超过300的仓库</p><pre><code> in:name spring boot stars:&gt;3000 forks:&gt;300</code></pre></li><li><p>搜索readme中带spring boot的仓库</p><pre><code> in:readme spring boot</code></pre></li><li><p>搜索描述中带有“微服务”关键词，语言为Java，pushed，最新日期要在2019-09-10之后</p><pre><code> in:description 微服务 language:java pushed:&gt;2019-09-10</code></pre></li></ol><h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><h3 id="1-添加提交"><a href="#1-添加提交" class="headerlink" title="1. 添加提交"></a>1. 添加提交</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> init<span class="token function">git</span> remote add origin 你新建仓库的HTTP或者SSH地址链接<span class="token function">git</span> pull origin master <span class="token comment" spellcheck="true">#将仓库拉取到本地文件夹</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> add <span class="token keyword">.</span>    <span class="token comment" spellcheck="true">#(.表示所有的)</span><span class="token function">git</span> commit -m <span class="token string">'添加文件内容描述'</span> <span class="token function">git</span> push origin master   <span class="token comment" spellcheck="true">#将本地仓库文件推送到GitHub新建的仓库</span></code></pre><h3 id="2-添加远程关联仓库"><a href="#2-添加远程关联仓库" class="headerlink" title="2. 添加远程关联仓库"></a>2. 添加远程关联仓库</h3><pre class=" language-csharp"><code class="language-csharp">$ git remote <span class="token keyword">add</span> origin https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>guanpengchn<span class="token operator">/</span>demo<span class="token punctuation">.</span>git</code></pre><h3 id="3-查看远程关联"><a href="#3-查看远程关联" class="headerlink" title="3. 查看远程关联"></a>3. 查看远程关联</h3><pre class=" language-bash"><code class="language-bash">$ <span class="token function">git</span> remote -vorigin  https://github.com/guanpengchn/demo.git <span class="token punctuation">(</span>fetch<span class="token punctuation">)</span>origin  https://github.com/guanpengchn/demo.git <span class="token punctuation">(</span>push<span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫——BeautifulSoup库</title>
      <link href="/2020/02/08/beautifulsoup-ku/"/>
      <url>/2020/02/08/beautifulsoup-ku/</url>
      
        <content type="html"><![CDATA[<h2 id="BeautifulSoup库"><a href="#BeautifulSoup库" class="headerlink" title="BeautifulSoup库"></a>BeautifulSoup库</h2><p>BeautifulSoup库是解析、遍历、维护“标签树”的功能库</p><p><strong>准备食材~html</strong></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token operator">>></span><span class="token operator">></span>r<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://python123.io/ws/demo.html"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span>r<span class="token punctuation">.</span>text<span class="token string">'&lt;html>&lt;head>&lt;title>This is a python demo page&lt;/title>&lt;/head>\r\n&lt;body>\r\n&lt;p class="title">&lt;b>The demo python introduces several python courses.&lt;/b>&lt;/p>\r\n&lt;p class="course">Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:\r\n&lt;a href="http://www.icourse163.org/course/BIT-268001" class="py1" id="link1">Basic Python&lt;/a> and &lt;a href="http://www.icourse163.org/course/BIT-1001870001" class="py2" id="link2">Advanced Python&lt;/a>.&lt;/p>\r\n&lt;/body>&lt;/html>'</span><span class="token operator">>></span><span class="token operator">></span>demo<span class="token operator">=</span>r<span class="token punctuation">.</span>text<span class="token operator">>></span><span class="token operator">></span><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token operator">>></span><span class="token operator">></span>soup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>demo<span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#"html.parser"是解析器的一种</span><span class="token operator">>></span><span class="token operator">></span><span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>prettify<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">##将html打印</span><span class="token operator">&lt;</span>bound method Tag<span class="token punctuation">.</span>prettify of <span class="token operator">&lt;</span>html<span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span><span class="token operator">&lt;</span>title<span class="token operator">></span>This <span class="token keyword">is</span> a python demo page<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span>b<span class="token operator">></span>The demo python introduces several python courses<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"course"</span><span class="token operator">></span>Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">and</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">>></span></code></pre><p>print(soup.prettify())就像是把食材整齐得放在案板上，看看食材都有哪些</p><h3 id="BeautifulSoup类"><a href="#BeautifulSoup类" class="headerlink" title="BeautifulSoup类"></a>BeautifulSoup类</h3><p>BeautifulSoup类原理</p><p>也就是BeautifulSoup类对应一个html/xml文档的全部内容</p><p>$$<br>html文档=标签树=BeautifulSoup类<br>$$</p><p>三者是等价的。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoupsoup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span><span class="token string">"&lt;html>data&lt;/html>"</span><span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span>soup2<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>open<span class="token punctuation">(</span><span class="token string">"D://demo.html"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span></code></pre><hr><h3 id="BeautifulSoup库的参数——解析器"><a href="#BeautifulSoup库的参数——解析器" class="headerlink" title="BeautifulSoup库的参数——解析器"></a>BeautifulSoup库的参数——解析器</h3><p><strong>准备怎么做</strong></p><p>一共四种解析</p><table><thead><tr><th align="center">解析器</th><th align="center">使用方法</th><th align="center">条件</th></tr></thead><tbody><tr><td align="center">bs4的HTML解析器</td><td align="center">BeautifulSoup(mk,”html.parser”)</td><td align="center">安装bs4库</td></tr><tr><td align="center">lxml的HTML解析器</td><td align="center">BeautifulSoup(mk,”lxml”)</td><td align="center">pip install lxml</td></tr><tr><td align="center">lxml的XML解析器</td><td align="center">BeautifulSoup(mk,”xml”)</td><td align="center">pip install lxml</td></tr><tr><td align="center">html5lib的HTML解析器</td><td align="center">BeautifulSoup(mk,”html5lib”)</td><td align="center">pip install html5lib</td></tr></tbody></table><h3 id="BeautifulSoup库的基本元素"><a href="#BeautifulSoup库的基本元素" class="headerlink" title="BeautifulSoup库的基本元素"></a>BeautifulSoup库的基本元素</h3><table><thead><tr><th>基本元素</th><th>说明使用</th></tr></thead><tbody><tr><td>Tag标签</td><td>标签  格式 ：.<tag></td></tr><tr><td>Name标签的名字</td><td>标签名字，格式  ：.name</td></tr><tr><td>Attributes标签的属性</td><td>标签属性，格式  :   .attrs</td></tr><tr><td>NavigableString标签内非属性的字符串</td><td>标签非属性字符串，格式： .string</td></tr><tr><td>comment标签内字符串的注释部分</td><td>注释部分，格式： .string</td></tr></tbody></table><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> requests<span class="token operator">>></span><span class="token operator">></span> r<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://python123.io/ws/demo.html"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> r<span class="token punctuation">.</span>text<span class="token string">'&lt;html>&lt;head>&lt;title>This is a python demo page&lt;/title>&lt;/head>\r\n&lt;body>\r\n&lt;p class="title">&lt;b>The demo python introduces several python courses.&lt;/b>&lt;/p>\r\n&lt;p class="course">Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:\r\n&lt;a href="http://www.icourse163.org/course/BIT-268001" class="py1" id="link1">Basic Python&lt;/a> and &lt;a href="http://www.icourse163.org/course/BIT-1001870001" class="py2" id="link2">Advanced Python&lt;/a>.&lt;/p>\r\n&lt;/body>&lt;/html>'</span><span class="token operator">>></span><span class="token operator">></span> demo<span class="token operator">=</span>r<span class="token punctuation">.</span>text<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeatuifulSoup<span class="token operator">>></span><span class="token operator">></span> soup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>demo<span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>title    <span class="token comment" spellcheck="true">#title标签</span><span class="token operator">&lt;</span>title<span class="token operator">></span>This <span class="token keyword">is</span> a python demo page<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> tag<span class="token operator">=</span>soup<span class="token punctuation">.</span>a    <span class="token comment" spellcheck="true">#返回第一个a标签</span><span class="token operator">>></span><span class="token operator">></span> tag    <span class="token comment" spellcheck="true">#只会返回第一个a标签</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> </code></pre><p>这锅汤，有食材，有柴火，demo就像是食材，html.parser就像是做这食材的柴火和作法。</p><p>开始煲汤~</p><pre class=" language-python"><code class="language-python">soup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>demo<span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span></code></pre><p>来尝尝这锅汤怎么样</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>name<span class="token string">'a'</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>name<span class="token string">'p'</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>name<span class="token string">'body'</span><span class="token operator">>></span><span class="token operator">></span> </code></pre><p>解析标签属性</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> tag<span class="token operator">=</span>soup<span class="token punctuation">.</span>a <span class="token comment" spellcheck="true">#返回第一个a标签</span><span class="token operator">>></span><span class="token operator">></span> tag <span class="token comment" spellcheck="true">#只会返回第一个a标签</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> tag<span class="token punctuation">.</span>attrs    <span class="token comment" spellcheck="true">##以字典返回，可以字典的方式来进行信息提取</span><span class="token punctuation">{</span><span class="token string">'href'</span><span class="token punctuation">:</span> <span class="token string">'http://www.icourse163.org/course/BIT-268001'</span><span class="token punctuation">,</span> <span class="token string">'class'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'py1'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'link1'</span><span class="token punctuation">}</span><span class="token operator">>></span><span class="token operator">></span> </code></pre><p>提取属性中的信息</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> tag<span class="token punctuation">.</span>attrs<span class="token punctuation">[</span><span class="token string">'class'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'py1'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> tag<span class="token punctuation">.</span>attrs<span class="token punctuation">[</span><span class="token string">'href'</span><span class="token punctuation">]</span><span class="token string">'http://www.icourse163.org/course/BIT-268001'</span><span class="token comment" spellcheck="true">##查看tag标签属性的类型</span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span>tag<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'dict'</span><span class="token operator">></span>    <span class="token comment" spellcheck="true">#字典类型</span><span class="token comment" spellcheck="true">#注意：无论有无属性、总能获得一个字典。若无，则返回一个空字典。</span><span class="token comment" spellcheck="true">#标签的类型 </span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'bs4.element.Tag'</span><span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> </code></pre><h3 id="NavigableString-（string）"><a href="#NavigableString-（string）" class="headerlink" title="NavigableString  （string）"></a>NavigableString  （string）</h3><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>string<span class="token string">'Basic Python'</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>p<span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span>b<span class="token operator">></span>The demo python introduces several python courses<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>p<span class="token punctuation">.</span>string<span class="token string">'The demo python introduces several python courses.'</span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span>soup<span class="token punctuation">.</span>p<span class="token punctuation">.</span>string<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'bs4.element.NavigableString'</span><span class="token operator">></span></code></pre><p><strong>注意：p标签中还包含b标签，说明NavigableString是可以跨越多个标签的</strong></p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> newsoup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span><span class="token string">"&lt;b>&lt;!--这是comment-->&lt;/b>&lt;&lt;p>这不是一个comment&lt;/p>"</span><span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> newsoup<span class="token punctuation">.</span>b<span class="token punctuation">.</span>string    <span class="token comment" spellcheck="true">#其注释被去掉了</span><span class="token string">'这是comment'</span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span>newsoup<span class="token punctuation">.</span>b<span class="token punctuation">.</span>string<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'bs4.element.Comment'</span><span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> newsoup<span class="token punctuation">.</span>p<span class="token punctuation">.</span>string<span class="token string">'这不是一个comment'</span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span>newsoup<span class="token punctuation">.</span>p<span class="token punctuation">.</span>string<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'bs4.element.NavigableString'</span><span class="token operator">></span><span class="token comment" spellcheck="true">##所以要根据类型来判断</span></code></pre><h2 id="HTML的遍历"><a href="#HTML的遍历" class="headerlink" title="HTML的遍历"></a>HTML的遍历</h2><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Pyhton/Beautiful/soup2020-02-08-17-00-02-image.png" alt=""></p><h3 id="下行遍历"><a href="#下行遍历" class="headerlink" title="下行遍历"></a>下行遍历</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Pyhton/Beautiful/soup2020-02-08-17-06-00-image.png" alt=""></p><p><strong>contents返回的是列表类型，而后两个返回的是迭代类型，只能用在循环中</strong></p><p><strong>PS：descendants会遍历该节点的所有子孙节点，其他俩则只遍历其下儿子节点</strong></p><p>下行遍历示例</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>head<span class="token operator">&lt;</span>head<span class="token operator">></span><span class="token operator">&lt;</span>title<span class="token operator">></span>This <span class="token keyword">is</span> a python demo page<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>head<span class="token punctuation">.</span>contents    <span class="token comment" spellcheck="true">##返回列表格式，可以列表格式解析。</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>title<span class="token operator">></span>This <span class="token keyword">is</span> a python demo page<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>body<span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span>b<span class="token operator">></span>The demo python introduces several python courses<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"course"</span><span class="token operator">></span>Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">and</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> len<span class="token punctuation">(</span>soup<span class="token punctuation">.</span>body<span class="token punctuation">.</span>contents<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">##有五个儿子节点</span><span class="token number">5</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>body<span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">##检索第二个儿子节点</span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span>b<span class="token operator">></span>The demo python introduces several python courses<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>body<span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token string">'\n'</span><span class="token comment" spellcheck="true">##\n 代表回车</span><span class="token comment" spellcheck="true">##说明，对于一个标签的儿子节点，不仅包括标签节点，也包括字符串节点。\n也是其一个节点。</span></code></pre><p><strong>遍历儿子节点</strong></p><p>可先查看其结构</p><pre class=" language-html"><code class="language-html">>>> print(soup.body.prettify())<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>   The demo python introduces several python courses.  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>py1<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.icourse163.org/course/BIT-268001<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>link1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   Basic Python  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  and  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>py2<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.icourse163.org/course/BIT-1001870001<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>link2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   Advanced Python  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  . <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> child <span class="token keyword">in</span> soup<span class="token punctuation">.</span>body<span class="token punctuation">.</span>children<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span>b<span class="token operator">></span>The demo python introduces several python courses<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"course"</span><span class="token operator">></span>Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">and</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span></code></pre><h3 id="上行遍历"><a href="#上行遍历" class="headerlink" title="上行遍历"></a>上行遍历</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Pyhton/Beautiful/soup2020-02-08-17-26-48-image.png" alt=""></p><p>上行遍历示例</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>title<span class="token punctuation">.</span>parent<span class="token operator">&lt;</span>head<span class="token operator">></span><span class="token operator">&lt;</span>title<span class="token operator">></span>This <span class="token keyword">is</span> a python demo page<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>html<span class="token punctuation">.</span>parent    <span class="token comment" spellcheck="true">##html标签的父亲就是它自己本身</span><span class="token operator">&lt;</span>html<span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span><span class="token operator">&lt;</span>title<span class="token operator">></span>This <span class="token keyword">is</span> a python demo page<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span>b<span class="token operator">></span>The demo python introduces several python courses<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"course"</span><span class="token operator">></span>Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">and</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>parent    <span class="token comment" spellcheck="true">##soup无父亲，没有显示</span><span class="token operator">>></span><span class="token operator">></span> </code></pre><p>遍历上行所有的名字</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>parent<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> parent <span class="token keyword">in</span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>parents<span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">##能够对soup的a标签所有的先辈的名字进行打印</span>    <span class="token keyword">if</span> parent <span class="token keyword">is</span> None<span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">##soup本身的parent先辈不存在，所以做判断，是否为空。</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span>name<span class="token punctuation">)</span>pbodyhtml<span class="token punctuation">[</span>document<span class="token punctuation">]</span></code></pre><h3 id="平行遍历"><a href="#平行遍历" class="headerlink" title="平行遍历"></a>平行遍历</h3><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Pyhton/Beautiful/soup2020-02-08-17-36-22-image.png" alt=""></p><p>平行遍历是发生在同一个父节点下的各节点间</p><p><img src="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/banner/5-160914192R0-50.gif" data-original="https://cdn.jsdelivr.net/gh/ShiYuLi0/PictureBolg/source/Pyhton/Beautiful/soup2020-02-08-17-39-03-image.png" alt=""></p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>next_sibling   <span class="token string">' and '</span>     </code></pre><p><strong>NavigableString也是节点，所以一个节点的上下平行游不一定都是标签，所以有时候需要做类型判断</strong></p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>next_sibling<span class="token punctuation">.</span>next_sibling  <span class="token comment" spellcheck="true">##a标签的下一个标签的下一个标签</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>previous_sibling<span class="token string">'Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:\r\n'</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>previous_sibling<span class="token punctuation">.</span>previous_silbingTraceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span> File <span class="token string">"&lt;pyshell#60>"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>previous_sibling<span class="token punctuation">.</span>previous_silbing File <span class="token string">"C:\Users\YU\AppData\Local\Programs\Python\Python37-32\lib\site-packages\bs4\element.py"</span><span class="token punctuation">,</span> line <span class="token number">742</span><span class="token punctuation">,</span> <span class="token keyword">in</span> __getattr__ self<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__name__<span class="token punctuation">,</span> attr<span class="token punctuation">)</span><span class="token punctuation">)</span>AttributeError<span class="token punctuation">:</span> <span class="token string">'NavigableString'</span> object has no attribute <span class="token string">'previous_silbing'</span><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>previous_sibling<span class="token punctuation">.</span>previous_sibling<span class="token operator">>></span><span class="token operator">></span> <span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>parent<span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"course"</span><span class="token operator">></span>Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">and</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span></code></pre><p>遍历前后续节点</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> sibling <span class="token keyword">in</span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>next_siblings<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>sibling<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#遍历后续节点</span> <span class="token operator">and</span> <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>Advanced Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> sibling <span class="token keyword">in</span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>previous_siblings<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>sibling<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#遍历前续节点</span>Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span><span class="token operator">>></span><span class="token operator">></span> </code></pre><h2 id="基于bs4库的html格式输出"><a href="#基于bs4库的html格式输出" class="headerlink" title="基于bs4库的html格式输出"></a>基于bs4库的html格式输出</h2><h3 id="prettify"><a href="#prettify" class="headerlink" title="prettify()"></a>prettify()</h3><ul><li>为整个html标签后增加换行符：/n。目的是使得html更“友好”</li></ul><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>prettify<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#整个html的标签增加了换行符</span><span class="token string">'&lt;html>\n &lt;head>\n  &lt;title>\n   This is a python demo page\n  &lt;/title>\n &lt;/head>\n &lt;body>\n  &lt;p class="title">\n   &lt;b>\n    The demo python introduces several python courses.\n   &lt;/b>\n  &lt;/p>\n  &lt;p class="course">\n   Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:\n   &lt;a class="py1" href="http://www.icourse163.org/course/BIT-268001" id="link1">\n    Basic Python\n   &lt;/a>\n   and\n   &lt;a class="py2" href="http://www.icourse163.org/course/BIT-1001870001" id="link2">\n    Advanced Python\n   &lt;/a>\n   .\n  &lt;/p>\n &lt;/body>\n&lt;/html>'</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>prettify<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#用print打印出来</span><span class="token operator">&lt;</span>html<span class="token operator">></span> <span class="token operator">&lt;</span>head<span class="token operator">></span>  <span class="token operator">&lt;</span>title<span class="token operator">></span>   This <span class="token keyword">is</span> a python demo page  <span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span> <span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span>   <span class="token operator">&lt;</span>b<span class="token operator">></span>    The demo python introduces several python courses<span class="token punctuation">.</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>  <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"course"</span><span class="token operator">></span>   Python <span class="token keyword">is</span> a wonderful general<span class="token operator">-</span>purpose programming language<span class="token punctuation">.</span> You can learn Python <span class="token keyword">from</span> novice to professional by tracking the following courses<span class="token punctuation">:</span>   <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>    Basic Python   <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>   <span class="token operator">and</span>   <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py2"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-1001870001"</span> id<span class="token operator">=</span><span class="token string">"link2"</span><span class="token operator">></span>    Advanced Python   <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>   <span class="token punctuation">.</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></code></pre><ul><li>也可以单独对一个标签进行“美化”⭐</li></ul><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup<span class="token punctuation">.</span>a   <span class="token comment" spellcheck="true">#原来长这样</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span>Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>prettify<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#后来长这样了，美丽者也！</span><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"py1"</span> href<span class="token operator">=</span><span class="token string">"http://www.icourse163.org/course/BIT-268001"</span> id<span class="token operator">=</span><span class="token string">"link1"</span><span class="token operator">></span> Basic Python<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span></code></pre><h3 id="编码问题"><a href="#编码问题" class="headerlink" title="编码问题"></a>编码问题</h3><p>bs4中将html转换为UTF-8格式的编码，支持中文，python3.0也支持中文，而用python2.0则需要对编码进行转换。</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> soup0<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span><span class="token string">"&lt;p>中文&lt;/p>"</span><span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> soup0<span class="token punctuation">.</span>p<span class="token punctuation">.</span>string<span class="token string">'中文'</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>soup0<span class="token punctuation">.</span>p<span class="token punctuation">.</span>prettify<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>p<span class="token operator">></span> 中文<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span></code></pre><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ol><li>bs4库的基本元素</li></ol><p>Tag、Name、Attributes、NavigateString、Comment</p><ol start="2"><li>bs4库的遍历功能</li></ol><p><strong>下行遍历</strong></p><p>.contents</p><p>.children</p><p>.descendants</p><p><strong>上行遍历</strong></p><p>.parent</p><p>.parents</p><p><strong>平行遍历</strong></p><p>.next_sibling</p><p>.previous_sibling</p><p>.next_siblings</p><p>.previous_siblings</p><h2 id="信息标记"><a href="#信息标记" class="headerlink" title="信息标记"></a>信息标记</h2><p>国际公认的一般信息标记形式</p><p><strong>XML、JSON、YAML</strong></p><ul><li>XML</li></ul><p>XML是基于html发展来的通用表达形式。通过标签内容表达信息。</p><ul><li>JSON</li></ul><p><strong>有类型的键值对</strong>，key:value。好处是可直接在JavaScript中使用</p><pre class=" language-json"><code class="language-json">“key”<span class="token operator">:</span>“value”“key”<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"value1"</span><span class="token punctuation">,</span><span class="token string">"value2"</span><span class="token punctuation">]</span><span class="token property">"key"</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">"subkey"</span><span class="token punctuation">,</span><span class="token string">"subvalue"</span><span class="token punctuation">}</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"李世昱"</span>“age”<span class="token operator">:</span><span class="token number">23</span>     //这是有类型的<span class="token string">"lishiyu"</span>：<span class="token punctuation">[</span><span class="token string">"李世昱"</span>，<span class="token number">23</span><span class="token punctuation">]</span>“names”：<span class="token punctuation">{</span>    “websitename”<span class="token operator">:</span>“lishiyu.vip”<span class="token punctuation">,</span>    <span class="token property">"realname"</span><span class="token operator">:</span><span class="token string">"李世昱"</span><span class="token punctuation">}</span></code></pre><ul><li>YAML</li></ul><p>无类型的键值对，key:value</p><ul><li><p>没有双引号</p></li><li><p>通过缩进的形式表达所属关系</p></li><li><p>“-“表达并列关系</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span>李世昱    <span class="token punctuation">-</span>张**</code></pre></li><li><p>用”|“表示整块数据，用”#“注释</p></li><li><p>键值对之间可以嵌套</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> BeautifulSoup </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>testblog</title>
      <link href="/2020/01/31/testblog/"/>
      <url>/2020/01/31/testblog/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/01/15/hello-world/"/>
      <url>/2020/01/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to 李世昱的博客<br>博文测试</p>]]></content>
      
      
      <categories>
          
          <category> Hello World </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
